<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>IDEA配置Tomcat</title>
      <link href="/2022/07/09/IDEA%E9%85%8D%E7%BD%AETomcat/"/>
      <url>/2022/07/09/IDEA%E9%85%8D%E7%BD%AETomcat/</url>
      
        <content type="html"><![CDATA[<h1 id="步骤："><a href="#步骤：" class="headerlink" title="步骤："></a>步骤：</h1><ol><li><p>下载：<a href="http://tomcat.[apache](https://so.csdn.net/so/search?q=apache&amp;spm=1001.2101.3001.7020).org/">http://tomcat.[apache](https://so.csdn.net/so/search?q=apache&amp;spm=1001.2101.3001.7020).org/</a></p></li><li><p>在安装过程中，会要求填入JRE的路径，需要自己手动设置（最好设置成IDEA平时使用的jdk的安装路径）</p><p><img src="https://img-blog.csdnimg.cn/20211016152019709.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0xuMjExNjUyNTg4OQ==,size_16,color_FFFFFF,t_70" alt="第五步"></p></li><li><p>安装完毕后，设置环境变量。新建两个变量<code>CATALINA_HOME</code>和<code>CATELINA_BASE</code>,变量值为Tomcat的安装路径；path新建：<code>%CATALINA_HOME%\lib</code>和<code>%CATALINA_HOME%\bin</code></p></li><li><p>IDEA配置</p><p><img src="image-20220708143741562-16572622656211.png" alt="image-20220708143741562"></p><p><img src="image-20220708143858870.png" alt="image-20220708143858870"></p><p><img src="image-20220708143947414-16572623886502.png" alt="image-20220708143947414"></p></li><li><p>出现以下页面，配置成功</p><p><img src="image-20220708144105601.png" alt="image-20220708144105601"></p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/07/09/SpringMVC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/07/09/SpringMVC%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="title-SpringMVC学习笔记"><a href="#title-SpringMVC学习笔记" class="headerlink" title="title:SpringMVC学习笔记"></a>title:SpringMVC学习笔记</h2><h1 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h1><p>ssm ：mybatis + Spring + SpringMVC  <strong>MVC三层架构</strong></p><p>JavaSE：认真学习，老师带，入门快</p><p>JavaWeb：认真学习，老师带，入门快</p><p>SSM框架：研究官方文档，锻炼自学能力，锻炼笔记能力，锻炼项目能力</p><p>SpringMVC：SpringMVC的执行流程</p><p>SpringMVC：SSM框架整合</p><p>MVC：模型(dao,service) 视图(jsp) 控制器(servlet) </p><h2 id="回顾Servlet"><a href="#回顾Servlet" class="headerlink" title="回顾Servlet"></a>回顾Servlet</h2><ol><li><p>新建maven父工程</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--依赖--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.18<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>新建Module：springmvc-01-servlet，添加Web app支持</p></li><li><p>导入serlvet和jsp的jar依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsp-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写Serlvet类，处理用户请求</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.获取前端参数</span></span><br><span class="line">        String method = req.getParameter(<span class="string">&quot;method&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (method.equals(<span class="string">&quot;add&quot;</span>)) &#123;</span><br><span class="line">            req.getSession().setAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;执行了add方法&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (method.equals(<span class="string">&quot;delete&quot;</span>)) &#123;</span><br><span class="line">            req.getSession().setAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;执行了delete方法&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//2.调用业务层</span></span><br><span class="line">        <span class="comment">//3.视图转发或者重定向</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">&quot;/WEB-INF/jsp/test.jsp&quot;</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写Hello.jsp，在WEB-INF里新建jsp文件</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        $&#123;msg&#125;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li><li><p>在web.xml中注册serlvet</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.kya.servlet.HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置Tomcat（具体看<code>IDEA配置Tomcat</code>这篇笔记），启动项目</p></li></ol><h2 id="MVC框架要做哪些事情"><a href="#MVC框架要做哪些事情" class="headerlink" title="MVC框架要做哪些事情"></a>MVC框架要做哪些事情</h2><ol><li>将url映射到java类或java类的方法</li><li>封装用户提交的数据</li><li>处理请求–调用相关的业务处理–封装响应数据</li><li>将响应数据进行渲染，jsp/html等表示层数据</li></ol><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>​    常见的服务器端MVC框架有：Struts、Spring MVC、ASP.NET MVC、Zend Framework、JSF；常见前端MVC框架：vue、angularjs、react、backbone；由MVC演化出了另外一些模式如MVP、MVVM等等…</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring学习笔记</title>
      <link href="/2022/07/09/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/07/09/Spring%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring"><a href="#Spring" class="headerlink" title="Spring"></a>Spring</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><ul><li>Spring框架即以interface21框架为基础，经过重新设计，并不断丰富其内涵，于2004年3月24日，发布了1.0正式版。</li><li>Spring框架的创始人，同时也是SpringSource的联合创始人。Spring是面向切面编程（AOP）和控制反转（IoC)的容器框架。</li><li>Spring理念：是现有的技术更加容易使用，本身就是一个大杂烩，整合了现有的技术框架</li><li>SSH: Struct2 +Spring + Hibernate</li><li>SSM: SpringMVC + Spring + Mybatis</li></ul><p>官网：<a href="https://spring.io/projects/spring-framework">https://spring.io/projects/spring-framework</a></p><p>官方下载地址：<a href="https://repo.spring.io/ui/native/release/org/springframework/spring">https://repo.spring.io/ui/native/release/org/springframework/spring</a></p><p>GitHub地址：<a href="https://github.com/spring-projects/spring-framework">https://github.com/spring-projects/spring-framework</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-webmvc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h2><ul><li>Spring是一个开源的免费的框架（容器）</li><li>Spring是一个轻量级的、非入侵式的框架</li><li>控制反转（IOC），面向切面编程（AOP）</li><li>支持事务的处理，对框架整合的支持</li></ul><p>总结：Spring是一个轻量级的控制反转（IOC）和面向切面变成（AOP）的框架</p><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p>Spring官网有这个介绍：现代化的Java开发，说白了就是基于Spring的开发</p><p><img src="image-20220621104906437.png" alt="image-20220621104906437"></p><ul><li>Spring Boot<ul><li>一个快速开发的脚手架</li><li>基于SpringBoot可以快速的开发单个微服务</li><li>约定大于配置</li></ul></li><li>Spring Cloud<ul><li>SpringCloud是基于SpringBoot实现的</li></ul></li></ul><p>因为现在大多数公司都在使用SpringBoot进行快速开发，学习SpringBoot的前提，需要完全掌握Spring及SpringMVC，承上启下的作用</p><p><strong>弊端：发展可太久之后，违背了原来的理念！配置十分繁琐，人称“配置地狱”</strong></p><h1 id="IOC理论推导"><a href="#IOC理论推导" class="headerlink" title="IOC理论推导"></a>IOC理论推导</h1><ol><li><p>UserDao 接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserDaoImpl 实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;UserDao被获取&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserService 业务接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>UserServiceImpl 业务实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//利用set进行动态实现值的注入</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserDao</span><span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        userDao.getUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ul><li>之前，程序是主动创建对象，控制权在程序员手上</li><li>使用set注入后，程序不在具有主动性，而是变成了被动的接收对象</li></ul><p>这种思想，从本质上解决了问题，我们程序员不用再去管理对象的创建了。系统的耦合性大大降低，可以更加专注在业务的实现上。这是IOC的原型！</p><h2 id="IOC本质"><a href="#IOC本质" class="headerlink" title="IOC本质"></a>IOC本质</h2><p><strong>控制反转IoC(Inversion of Control)，是一种设计思想，DI(依赖注入)是实现IoC的一种方法</strong>，也有人认为DI只是IoC的另一种说法。没有IoC的程序中 , 我们使用面向对象编程 , 对象的创建与对象间的依赖关系完全硬编码在程序中，对象的创建由程序自己控制，控制反转后将对象的创建转移给第三方，个人认为所谓控制反转就是：获得依赖对象的方式反转了。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KtDiaOqFy5ourlJ8FTVV2FFuYibmavlBHq9e4cDqiclpYSG8VT4EicVsnqKp65yJKQeNibsVdTiahQibJSg/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片"></p><p><strong>IoC是Spring框架的核心内容</strong>，使用多种方式完美的实现了IoC，可以使用XML配置，也可以使用注解，新版本的Spring也可以零配置实现IoC。</p><p>Spring容器在初始化时先读取配置文件，根据配置文件或元数据创建与组织对象存入容器中，程序使用时再从Ioc容器中取出需要的对象。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KtDiaOqFy5ourlJ8FTVV2FF67dfeA6cRT7EiafNcibWyf57SGpkZ01JnpiaaicNB1ibBjGaicAvayKEWJ0A/640?wx_fmt=png&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片"></p><p>采用XML方式配置Bean的时候，Bean的定义信息是和实现分离的，而采用注解的方式可以把两者合为一体，Bean的定义信息直接以注解的形式定义在实现类中，从而达到了零配置的目的。</p><p><strong>控制反转是一种通过描述（XML或注解）并通过第三方去生产或获取特定对象的方式。在Spring中实现控制反转的是IoC容器，其实现方法是依赖注入（Dependency Injection,DI）。</strong></p><h1 id="Hello-Spring"><a href="#Hello-Spring" class="headerlink" title="Hello Spring"></a>Hello Spring</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--使用Spring来创建对象，在Spring中这些都称为Bean--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hello&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.Hello&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;str&quot;</span> <span class="attr">value</span>=<span class="string">&quot;String1&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//获取Spring上下文对象</span></span><br><span class="line">    ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;bean.xml&quot;</span>);</span><br><span class="line">    <span class="comment">//我们的对象现在都在Spring中管理了，我们要使用直接去里面取出来即可</span></span><br><span class="line">    Hello hello = (Hello) context.getBean(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    hello.show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>控制反转：</p><p>控制：谁来控制对象的创建，传统应用程序的对象是由程序本身控制创建的，使用Spring后，对象是由Spring来创建的。</p><p>反转：程序本身不创建对象，而变成被动的接收对象。</p><p>依赖注入：就是利用set方法来进行注入的。</p><p>可以通过newClassPathXmlApplicationContext去浏览底层源码</p><p><strong>到目前为止，我们彻底不用在程序中去改动了，要实现不同的操作，只需要在xml配置文件中进行修改，所谓的IoC，一句话搞定：对象由Spring来创建，管理，装配</strong></p><h1 id="IOC创建的方式"><a href="#IOC创建的方式" class="headerlink" title="IOC创建的方式"></a>IOC创建的方式</h1><ol><li><p>使用无参构造创建对象，默认！</p></li><li><p>假设我们要使用有参构造创建对象</p><ol><li><p>下标赋值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--通过下标赋值--&gt;</span></span><br><span class="line">    -<span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">value</span>=<span class="string">&quot;佚名&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span>-</span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>类型赋值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--不建议使用--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">type</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">value</span>=<span class="string">&quot;你卤味&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>参数名赋值</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--通过参数名进行设置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;无名氏&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">constructor-arg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>总结：在配置文件加载的时候，容器中管理的对象就已经初始化了！</p></li></ol><h1 id="Spring配置"><a href="#Spring配置" class="headerlink" title="Spring配置"></a>Spring配置</h1><ol><li><h2 id="别名"><a href="#别名" class="headerlink" title="别名"></a>别名</h2> <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">alias</span> <span class="attr">name</span>=<span class="string">&quot;user&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;userNew&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><h2 id="Bean的配置"><a href="#Bean的配置" class="headerlink" title="Bean的配置"></a>Bean的配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    id:bean的唯一标识符，相当于对象名</span></span><br><span class="line"><span class="comment">        class:bean对象所对应的全限定名，包名+类型</span></span><br><span class="line"><span class="comment">        name:也是别名，而且name可以同时取多个别名</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userT&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.UserT&quot;</span> <span class="attr">name</span>=<span class="string">&quot;u2 u3,u4;u5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;猩猩&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><h2 id="import"><a href="#import" class="headerlink" title="import"></a>import</h2><p>这个import，一般用于团队开发使用，它可以将多个配置文件导入合并为一个</p><ul><li>张三</li><li>李四</li><li>王五</li><li>applicationContext.xml</li></ul><p>使用的时候，直接使用中的配置即可！</p></li></ol><h1 id="依赖注入"><a href="#依赖注入" class="headerlink" title="依赖注入"></a>依赖注入</h1><ol><li><h2 id="构造器注入"><a href="#构造器注入" class="headerlink" title="构造器注入"></a>构造器注入</h2><p>前文已说过</p></li><li><h2 id="set方式注入【重点】"><a href="#set方式注入【重点】" class="headerlink" title="set方式注入【重点】"></a>set方式注入【<strong>重点</strong>】</h2><ul><li><p>依赖注入：Set注入</p><ul><li>依赖：bean对象的创建依赖于容器</li><li>注入：bean对象中的所有属性，由容器来注入</li></ul></li></ul><p>【环境搭建】</p><ol><li><p>复杂类型</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Address address;</span><br><span class="line">    <span class="keyword">private</span> String[] books;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; hobbies;</span><br><span class="line">    <span class="keyword">private</span> Map&lt;String,String&gt; card;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;String&gt; games;</span><br><span class="line">    <span class="keyword">private</span> String wife;</span><br><span class="line">    <span class="keyword">private</span> Properties info;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Address <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(Address address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String[] getBooks() &#123;</span><br><span class="line">        <span class="keyword">return</span> books;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBooks</span><span class="params">(String[] books)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.books = books;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">getHobbies</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hobbies;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHobbies</span><span class="params">(List&lt;String&gt; hobbies)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.hobbies = hobbies;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Map&lt;String, String&gt; <span class="title">getCard</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> card;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCard</span><span class="params">(Map&lt;String, String&gt; card)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.card = card;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Set&lt;String&gt; <span class="title">getGames</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> games;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setGames</span><span class="params">(Set&lt;String&gt; games)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.games = games;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getWife</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> wife;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setWife</span><span class="params">(String wife)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.wife = wife;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Properties <span class="title">getInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> info;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setInfo</span><span class="params">(Properties info)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.info = info;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Address</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">                           https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;无名氏&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试类</p>   <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;bean.xml&quot;</span>);</span><br><span class="line">    Student student = (Student) context.getBean(<span class="string">&quot;student&quot;</span>);</span><br><span class="line">    System.out.println(student.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>完善bean</p>   <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;address&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.Address&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">value</span>=<span class="string">&quot;顺德&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;student&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--第一种，普通值注入--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;无名氏&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;address&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;books&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>三国演义<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>红楼梦<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>西游记<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>水浒传<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;hobbies&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>打机<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>看电视<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;card&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">map</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;身份证&quot;</span> <span class="attr">value</span>=<span class="string">&quot;223422432432432&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">entry</span> <span class="attr">key</span>=<span class="string">&quot;学生证&quot;</span> <span class="attr">value</span>=<span class="string">&quot;34565543212345&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">entry</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">map</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;games&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>LOL<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>COC<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>BOB<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;wife&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">null</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;info&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;账号&quot;</span>&gt;</span>admmmm<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">&quot;密码&quot;</span>&gt;</span>12456<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>   <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;Userbean.xml&quot;</span>);</span><br><span class="line">    User user = context.getBean(<span class="string">&quot;user&quot;</span>, User.class);</span><br><span class="line">    User user2 = context.getBean(<span class="string">&quot;user2&quot;</span>, User.class);</span><br><span class="line">    System.out.println(user.toString());</span><br><span class="line">    System.out.println(user2.toString());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h2 id="拓展方式注入"><a href="#拓展方式注入" class="headerlink" title="拓展方式注入"></a>拓展方式注入</h2><p>我们可以使用P命名空间和C命名空间注入</p><p>官方解释：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:p</span>=<span class="string">&quot;http://www.springframework.org/schema/p&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:c</span>=<span class="string">&quot;http://www.springframework.org/schema/c&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">        https://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.User&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;大侠&quot;</span> <span class="attr">p:age</span>=<span class="string">&quot;32&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.User&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;西门吹水&quot;</span> <span class="attr">c:age</span>=<span class="string">&quot;99&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意点：p命名空间和c命名空间不能直接使用，需要导入xml约束！</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xmlns:p=&quot;http://www.springframework.org/schema/p&quot;</span><br><span class="line">xmlns:c=&quot;http://www.springframework.org/schema/c&quot;</span><br></pre></td></tr></table></figure></li></ol><h2 id="bean的作用域"><a href="#bean的作用域" class="headerlink" title="bean的作用域"></a>bean的作用域</h2><p><img src="image-20220623163136818.png" alt="image-20220623163136818"></p><ol><li><p>单例模式（Spring默认机制）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.User&quot;</span> <span class="attr">p:name</span>=<span class="string">&quot;大侠&quot;</span> <span class="attr">p:age</span>=<span class="string">&quot;32&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;singleton&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>原型模式：每次从容器中get的时候，都会产生一个新对象</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;user2&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.User&quot;</span> <span class="attr">c:name</span>=<span class="string">&quot;西门吹水&quot;</span> <span class="attr">c:age</span>=<span class="string">&quot;99&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;prototype&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>其余的request、session、application这些只能在web开发中使用</p></li></ol><h1 id="Bean的自动装配"><a href="#Bean的自动装配" class="headerlink" title="Bean的自动装配"></a>Bean的自动装配</h1><ul><li>自动装配是Spring满足bean依赖的一种方式</li><li>Spring会在上下文中自动寻找，并自动给bean装配属性</li></ul><p>在Spring中有3中装配方式</p><ol><li>在xml中显示的配置</li><li>在Java中显示配置</li><li>隐式的自动装配【<strong>重要</strong>】</li></ol><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;bean.xml&quot;</span>);</span><br><span class="line">    People people = context.getBean(<span class="string">&quot;people&quot;</span>, People.class);</span><br><span class="line">    people.getCat().shout();</span><br><span class="line">    people.getDog().shout();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ByName自动装配"><a href="#ByName自动装配" class="headerlink" title="ByName自动装配"></a>ByName自动装配</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--ByName:会自动在容器的上下文中查找，和自己对象set方法后面的值对应的bean id--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;people&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.People&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byName&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;笨蛋&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="ByType自动装配"><a href="#ByType自动装配" class="headerlink" title="ByType自动装配"></a>ByType自动装配</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cat&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.Cat&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dog&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.Dog&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--ByName:会自动在容器的上下文中查找，和自己对象set方法后面的值对应的bean id</span></span><br><span class="line"><span class="comment">    ByType:会自动在容器的上下文中查找，和自己对象属性类型相同的bean</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;people&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.pojo.People&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;byType&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;笨蛋&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><ul><li>ByName的时候，需保证所有bean的id唯一，并且这个bean需要和自动注入的属性的set方法的值保持一致</li><li>ByType的时候，需要保证所有bean的class唯一，并且这个bean需要和自动注入的属性的类型保持一致</li></ul><h2 id="使用注解实现自动装配"><a href="#使用注解实现自动装配" class="headerlink" title="使用注解实现自动装配"></a>使用注解实现自动装配</h2><p>jdk1.5支持的注解，Spring2.5就支持注解了</p><p>要使用注解须知：</p><ol><li><p>导入约束：context约束</p></li><li><p>配置注解的支持：<code>&lt;context:annotation-config/&gt;</code>【<strong>重要</strong>】</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">&quot;http://www.springframework.org/schema/context&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">                           https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">                           http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="string"><span class="tag">                           https://www.springframework.org/schema/context/spring-context.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    开启注解支持--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p><strong>@Autowired</strong>注解</p><p>直接在属性上使用即可，也可以在set方法上使用</p><p>使用Autowired 我们可以不用编写set方法，前提是这个自动装配的属性在IOC（Spring）容器中存在，且符合名字ByName</p><p>科普：</p><p><code>@Nullable  字段编辑了这个注解，说明这个字段可以为null  </code>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Autowired &#123;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">required</span><span class="params">()</span> <span class="keyword">default</span> <span class="keyword">true</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">    <span class="comment">//如果显式定义Autowired的required为false，说明在这个对象·可以为null，否则不允许为空</span></span><br><span class="line">    <span class="meta">@Autowired(required = false)</span></span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果@Autowired自动装配的环境比较复杂，自动装配无法通过一个注解【@Autowired】完成的时候，我们可以使用@Qualifier(value = “XXX” ) 去配置@Autowired的使用，指定一个唯一的bean对象注入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">    <span class="comment">//如果显式定义Autowired的required为false，说明在这个对象·可以为null，否则不允许为空</span></span><br><span class="line">    <span class="meta">@Autowired(required = false)</span></span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier(value = &quot;dog123&quot; )</span></span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>@Resource</strong>注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Resource(name = &quot;cat12&quot;)</span></span><br><span class="line">    <span class="keyword">private</span> Cat cat;</span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> Dog dog;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><p>@Resource 和@Autowired 的区别：</p><ul><li>都是用来自动装配的，都可以放在属性字段上</li><li>@Autowired 通过ByType 的方式实现，而且必须要求这个对象存在【<strong>常用</strong>】</li><li>@Resource 默认通过ByName 的方式实现，如果找不到名字，则通过ByType 实现，如果两个都找不到的情况下，则报错【<strong>常用</strong>】</li><li>执行顺序不同：@Autowired 通过ByType 的方式实现。@Resource 默认通过ByName 的方式实现。</li></ul><h1 id="使用注解开发"><a href="#使用注解开发" class="headerlink" title="使用注解开发"></a>使用注解开发</h1><p>在Spring4之后，要使用注解开发，必须确保aop的包导入了</p><p><img src="image-20220627114534902.png" alt="image-20220627114534902"></p><p>使用注解需要导入context约束，增加注解的支持</p><ol><li><p>bean</p></li><li><p>属性如何注入</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;无名氏&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>衍生的注解</p><p>@Component 有几个衍生注解，我们在web开发中，会按照mvc三层架构分层</p><ul><li><p>dao【@Repository】</p></li><li><p>service【@Service】</p></li><li><p>controller【@Controller】</p><p>这四个注解功能都是一样，都是代表将某个类注册到Spring中，装配Bean</p></li></ul></li><li><p>自动装配</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">- @Autowired 自动装配，通过类型，名字</span><br><span class="line">如果Autowired不能唯一自动装配属性，则需要通过 `@Qualifier(value = &quot;XXX&quot; )`</span><br><span class="line">- @Nullable 注解标记的这个字段，可以为null</span><br><span class="line">- @Resource 自动装配，通过名字，类型</span><br><span class="line">- @Component 组件，放在类上，说明这个类被Spring管理了，就是bean</span><br></pre></td></tr></table></figure></li><li><p>作用域</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Scope(value = &quot;singleton&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;无名氏&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>小结</p><p>xml与注解</p><ul><li>xml更加万能，适用于任何场合，维护简单方便</li><li>注解 不是自己类使用不了，维护相对复杂</li></ul><p>xml与注解最佳实践：</p><ul><li><p>xml用来管理bean</p></li><li><p>注解只负责完成属性的注入</p></li><li><p>我们在使用的过程中，只需注意一个问题，就需要开启注解的支持</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--指定要扫描的包，这个包下的注解都会生效--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">&quot;com.kya&quot;</span>/&gt;</span></span><br><span class="line"><span class="comment">&lt;!--开启注解支持--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h1 id="使用java的方式配置Spring"><a href="#使用java的方式配置Spring" class="headerlink" title="使用java的方式配置Spring"></a>使用java的方式配置Spring</h1><p>我们现在要完全不使用Spring的xml配置了，全权交给java来做 </p><p>javaConfig是Spring的一个子项目，在Spring 4之后，成为了核心项目</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value(&quot;无名氏&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">            <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">            <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//这个也会Spring容器托管，注册到容器中，因为他本来就是一个@Component</span></span><br><span class="line"><span class="comment">//@Configuration 代表这是个配置类，就和之前的beans.xml一样</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.kya.pojo&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//注册一个bean，就相当于之前的一个bean标签</span></span><br><span class="line">    <span class="comment">//这个方法的名字，就相当于bean标签的id</span></span><br><span class="line">    <span class="comment">//这个方法的返回值，就相当于bean标签的class</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> User();<span class="comment">//返回要注入的bean对象</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//如果完全使用了配置类的方式去做，我们就只能通过AnnotationConfig 上下文来获取容器，通过配置类的class对象加载</span></span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> AnnotationConfigApplicationContext(UserConfig.class);</span><br><span class="line">        User getUser = (User) context.getBean(<span class="string">&quot;getUser&quot;</span>);</span><br><span class="line">        System.out.println(getUser.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种纯java的配置方式，在SpringBoot中随处可见</p><h1 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h1><h2 id="静态代理"><a href="#静态代理" class="headerlink" title="静态代理"></a>静态代理</h2><p>角色分析：</p><ul><li>抽象角色：一般会使用接口或者抽象类来解决</li><li>真实角色：被代理的角色</li><li>代理角色：代理真实角色，代理真实角色后，我们一般会做一些附属操作</li><li>客户：访问代理对象的人</li></ul><p>代码步骤：</p><ol><li><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Rent</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>真实角色</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Host</span> <span class="keyword">implements</span> <span class="title">Rent</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我要出租房子！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>代理角色</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Proxy</span> <span class="keyword">implements</span> <span class="title">Rent</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Host host;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Proxy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Proxy</span><span class="params">(Host host)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.host = host;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">rent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        seeHouse();</span><br><span class="line">        host.rent();</span><br><span class="line">        fare();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">seeHouse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;带你去看房&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">fare</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;收房租&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>客户端访问代理角色</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Host host = <span class="keyword">new</span> Host();</span><br><span class="line">        Proxy proxy = <span class="keyword">new</span> Proxy(host);</span><br><span class="line">        proxy.rent();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>代理模式的好处：</p><ul><li>可以使真实角色的操作更加纯粹，不用去关注一些公共业务</li><li>公共业务可以交给代理角色，实现了业务的分工</li><li>公共业务发生扩展时，方便集中管理</li></ul><p>缺点：</p><ul><li>一个正式角色就要产生一个代理角色，代码量会翻倍，开发效率会降低</li></ul><p><img src="image-20220629150903745.png" alt="image-20220629150903745"></p><h2 id="动态代理"><a href="#动态代理" class="headerlink" title="动态代理"></a>动态代理</h2><ul><li>动态代理和静态代理角色一样</li><li>动态代理的代理类是动态生成的，不是我们直接写好的</li><li>动态代理分为两大类：基于接口的动态代理，基于类的动态代理<ul><li>基于接口—JDK动态代理【我们在此使用】</li><li>基于类：cglib</li><li>java字节码实现：javasist</li></ul></li></ul><p>需要了解两个类：Proxy：代理，InvocationHandler：调用处理程序</p><p>动态代理的好处：</p><ul><li>可以使真实角色的操作更加纯粹，不用去关注一些公共业务</li><li>公共业务可以交给代理角色，实现了业务的分工</li><li>公共业务发生扩展时，方便集中管理</li><li>一个动态代理类代理的是一个接口，一般就是对应的一类业务</li><li>一个动态代理类可以代理多个类，只要是实现了同一个接口即可</li></ul><p>ProxyInvocationHandler （可当成工具类来使用）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ProxyInvocationHandler</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line">    <span class="comment">//被代理的接口</span></span><br><span class="line">    <span class="keyword">private</span> Object target;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTarget</span><span class="params">(Object target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//生成得到代理类</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">getProxy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Proxy.newProxyInstance(<span class="keyword">this</span>.getClass().getClassLoader(), target.getClass().getInterfaces(), <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//处理代理实例，并返回结果</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        log(method.getName());</span><br><span class="line">        Object result = method.invoke(target, args);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">log</span><span class="params">(String msg)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;[DEBUG]执行了&quot;</span> + msg + <span class="string">&quot;操作&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//真实角色</span></span><br><span class="line">        UserServiceImpl userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        <span class="comment">//代理角色，不存在</span></span><br><span class="line">        ProxyInvocationHandler pih = <span class="keyword">new</span> ProxyInvocationHandler();</span><br><span class="line">        <span class="comment">//设置要代理的对象</span></span><br><span class="line">        pih.setTarget(userService);</span><br><span class="line">        <span class="comment">//动态生成代理类</span></span><br><span class="line">        UserService proxy = (UserService) pih.getProxy();</span><br><span class="line">        proxy.delete();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h1><h2 id="什么是AOP"><a href="#什么是AOP" class="headerlink" title="什么是AOP"></a>什么是AOP</h2><p>AOP（Aspect Oriented Programming）意为：面向切面编程，通过预编译方式和运行期动态代理实现程序功能的统一维护的一种技术。AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，是函数式编程的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。</p><p><img src="C:/Users/Kayeung/blog/source/img/640.png" alt="图片"></p><h2 id="Aop在Spring中的作用"><a href="#Aop在Spring中的作用" class="headerlink" title="Aop在Spring中的作用"></a>Aop在Spring中的作用</h2><p>提供声明式事务；允许用户自定义切面</p><p>以下名词需要了解下：</p><ul><li>横切关注点：跨越应用程序多个模块的方法或功能。即是，与我们业务逻辑无关的，但是我们需要关注的部分，就是横切关注点。如日志 , 安全 , 缓存 , 事务等等 ….</li><li>切面（ASPECT）：横切关注点 被模块化 的特殊对象。即，它是一个类。</li><li>通知（Advice）：切面必须要完成的工作。即，它是类中的一个方法。</li><li>目标（Target）：被通知对象。</li><li>代理（Proxy）：向目标对象应用通知之后创建的对象。</li><li>切入点（PointCut）：切面通知 执行的 “地点”的定义。</li><li>连接点（JointPoint）：与切入点匹配的执行点。</li></ul><p><img src="C:/Users/Kayeung/blog/source/img/640-16565108639611.png" alt="图片"></p><p>SpringAOP中，通过Advice定义横切逻辑，Spring中支持5种类型的Advice:</p><p><img src="C:/Users/Kayeung/blog/source/img/640-16565108639612.png" alt="图片"></p><p>即 Aop 在 不改变原有代码的情况下 , 去增加新的功能 .</p><h2 id="使用Spring实现Aop"><a href="#使用Spring实现Aop" class="headerlink" title="使用Spring实现Aop"></a>使用Spring实现Aop</h2><p>【重点】使用AOP织入，需要导入一个依赖包！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.aspectj/aspectjweaver --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>方式一：使用Spring的API接口【主要是Spring API接口实现】</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--方式一：使用原生Spring API接口--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--配置aop：需要导入aop约束--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--切入点:expression表达式，execution(要执行的位置 * * * * *)--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;poincut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.kya.service.UserServiceImpl.*(..))&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--执行环绕增加--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;log&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;poincut&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:advisor</span> <span class="attr">advice-ref</span>=<span class="string">&quot;afterLog&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;poincut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>log.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Log</span> <span class="keyword">implements</span> <span class="title">MethodBeforeAdvice</span> </span>&#123;</span><br><span class="line">    <span class="comment">//method:要执行的目标对象的方法</span></span><br><span class="line">    <span class="comment">//args：参数</span></span><br><span class="line">    <span class="comment">//target：目标对象</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">(Method method, Object[] args, Object target)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(target.getClass().getName() + <span class="string">&quot;的&quot;</span> + method.getName() + <span class="string">&quot;被执行了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>afterLog.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AfterLog</span> <span class="keyword">implements</span> <span class="title">AfterReturningAdvice</span> </span>&#123;</span><br><span class="line">    <span class="comment">//returnValue 返回值</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterReturning</span><span class="params">(Object returnValue, Method method, Object[] args, Object target)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行了&quot;</span> + method.getName() + <span class="string">&quot;方法，返回结果为：&quot;</span> + returnValue);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>方式二：自定义类来实现【主要是切面定义】</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--方式二：自定义类--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;diy&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.diy.DiyPointCut&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">aop:config</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--自定义切面 ref:要引用的类--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">aop:aspect</span> <span class="attr">ref</span>=<span class="string">&quot;diy&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--切入点--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:pointcut</span> <span class="attr">id</span>=<span class="string">&quot;pointcut&quot;</span> <span class="attr">expression</span>=<span class="string">&quot;execution(* com.kya.service.UserServiceImpl.*(..))&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--通知--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:after</span> <span class="attr">method</span>=<span class="string">&quot;after&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">aop:before</span> <span class="attr">method</span>=<span class="string">&quot;before&quot;</span> <span class="attr">pointcut-ref</span>=<span class="string">&quot;pointcut&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">aop:aspect</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">aop:config</span>&gt;</span></span><br></pre></td></tr></table></figure><p>方式三：使用注解实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Aspect</span> <span class="comment">//标注这个类是一个切面</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AnnotationPointCut</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Before(&quot;execution(* com.kya.service.UserServiceImpl.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">before</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;======执行前=====&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@After(&quot;execution(* com.kya.service.UserServiceImpl.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;======执行后=====&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在环绕增强中，我们可以给定一个参数，代表我们要获取处理切入的点</span></span><br><span class="line">    <span class="meta">@Around(&quot;execution(* com.kya.service.UserServiceImpl.*(..))&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">around</span><span class="params">(ProceedingJoinPoint jp)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;环绕前&quot;</span>);</span><br><span class="line">        Signature signature = jp.getSignature();<span class="comment">//获得签名</span></span><br><span class="line">        System.out.println(<span class="string">&quot;signature:&quot;</span> + signature);</span><br><span class="line">        <span class="comment">//执行方法</span></span><br><span class="line">        Object proceed = jp.proceed();</span><br><span class="line">        System.out.println(<span class="string">&quot;环绕后&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="整合Mybatis"><a href="#整合Mybatis" class="headerlink" title="整合Mybatis"></a>整合Mybatis</h1><p>步骤：</p><ol><li><p>导入相关jar包 </p><ul><li>junit</li><li>mybatis</li><li>mysql数据库</li><li>Spring相关的</li><li>aop织入</li><li>mybatis-spring【new】</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.29<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写配置文件</p></li><li><p>测试</p></li></ol><h2 id="整合Mybatis-1"><a href="#整合Mybatis-1" class="headerlink" title="整合Mybatis"></a>整合Mybatis</h2><p>步骤：</p><ol><li>导入相关jar包<ul><li>junit</li><li>mybatis</li><li>mysql数据库</li><li>spring相关的</li><li>aop织入</li><li>mybatis-spring【new】</li></ul></li><li>编写配置文件</li><li>测试</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.29<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.2.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="回忆Mybatis"><a href="#回忆Mybatis" class="headerlink" title="回忆Mybatis"></a>回忆Mybatis</h2><ol><li>编写实体类</li><li>编写核心配置文件</li><li>编写接口</li><li>编写Mapper.xml</li><li>测试</li></ol><h2 id="Mybatis-spring"><a href="#Mybatis-spring" class="headerlink" title="Mybatis-spring"></a>Mybatis-spring</h2><ol><li><p>编写数据源配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:aop</span>=<span class="string">&quot;http://www.springframework.org/schema/aop&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">                           https://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="string"><span class="tag">                           http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="string"><span class="tag">                           https://www.springframework.org/schema/aop/spring-aop.xsd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--    DataSource:使用Spring的数据源替换Mybatis的配置 c3p0 dbcp druid</span></span><br><span class="line"><span class="comment">            我们这里使用Spring提供的JDBC--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.springframework.jdbc.datasource.DriverManagerDataSource&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driverClassName&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?useSSL=true<span class="symbol">&amp;amp;</span>useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1234&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--sqlSessionFactory--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSessionFactory&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionFactoryBean&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dataSource&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;dataSource&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--绑定Mybatis配置文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;configLocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:mybatis-config.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;mapperLocations&quot;</span> <span class="attr">value</span>=<span class="string">&quot;classpath:com/kya/mapper/*.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--SqlSessionTemplate:就是我们使用的sqlSession--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;sqlSession&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.mybatis.spring.SqlSessionTemplate&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--只能使用构造器注入sqlSessionFactory，因为他没有set方法--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">constructor-arg</span> <span class="attr">index</span>=<span class="string">&quot;0&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSessionFactory&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>sqlSessionFactory</p></li><li><p>sqlSessionTemplate</p></li><li><p>需要给接口加实现类【增】</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserMapperImpl</span> <span class="keyword">implements</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">//我们的所有操作，在原来都使用sqlSession来执行，现在都使用sqlSessionTemplate</span></span><br><span class="line">    <span class="keyword">private</span> SqlSessionTemplate sqlSession;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSqlSession</span><span class="params">(SqlSessionTemplate sqlSession)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sqlSession = sqlSession;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">selectUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="keyword">return</span> mapper.selectUser();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>将自己写的实现类，注入到Spring中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;userMapper&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.mapper.UserMapperImpl&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;sqlSession&quot;</span> <span class="attr">ref</span>=<span class="string">&quot;sqlSession&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p></li></ol><h1 id="声明式事务"><a href="#声明式事务" class="headerlink" title="声明式事务"></a>声明式事务</h1><ol><li><h2 id="回顾事务"><a href="#回顾事务" class="headerlink" title="回顾事务"></a>回顾事务</h2><ul><li>把一组业务当成一个业务来做，要么都成功，要么都失败</li><li>事务在项目开发中，十分重要，涉及到数据的一致性问题，不能马虎</li><li>确保完整性和一致性；</li></ul><p>事务ACID原则：</p><ul><li>原子性</li><li>一致性</li><li>隔离性<ul><li>多个业务可能操作同一个资源，防止数据损坏</li></ul></li><li>持久性<ul><li>事务一旦提交，无论系统发生什么问题，结构都不会被影响，被持久化地写到存储器中</li></ul></li></ul></li><li><h2 id="spring中的事务管理"><a href="#spring中的事务管理" class="headerlink" title="spring中的事务管理"></a>spring中的事务管理</h2><ul><li>声明式事务：AOP </li><li>编程式事务：需要在代码中进行事务的管理</li></ul></li></ol><p>思考：为什么需要事务？</p><ul><li>如果不配置事务，可能存在数据提交不一致的情况</li><li>如果我们不在spring中配置声明式事务，我们需要在代码中手动配置事务</li><li>事务在项目的开发中十分重要，涉及到数据的一致性和完整性的问题，不容马虎！</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis学习笔记</title>
      <link href="/2022/06/17/MyBatis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/06/17/MyBatis%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>环境：</p><ul><li>JDK1.8</li><li>MySQL 5.7</li><li>Maven 3.6.1</li><li>IDEA</li></ul><p>回顾：</p><ul><li>JDBC</li><li>MySQL</li><li>JAVA基础</li><li>Maven</li><li>Junit</li></ul><h1 id="1-简介"><a href="#1-简介" class="headerlink" title="1.  简介"></a>1.  简介</h1><h2 id="1-1-什么是MyBatis"><a href="#1-1-什么是MyBatis" class="headerlink" title="1.1 什么是MyBatis"></a>1.1 什么是MyBatis</h2><ul><li>MyBatis 是一款优秀的<strong>持久层框架</strong>，</li><li>它支持自定义 SQL、存储过程以及高级映射。</li><li>MyBatis 免除了几乎所有的 JDBC 代码以及设置参数和获取结果集的工作。</li><li>MyBatis 可以通过简单的 XML 或注解来配置和映射原始类型、接口和 Java POJO（Plain Old Java Objects，普通老式 Java 对象）为数据库中的记录。</li></ul><p>如何获得Mybatis？</p><ul><li>Maven仓库：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>Github：<a href="https://github.com/mybatis/mybatis-3/releases">https://github.com/mybatis/mybatis-3/releases</a></li><li>中文文档：<a href="https://mybatis.org/mybatis-3/zh/index.html">https://mybatis.org/mybatis-3/zh/index.html</a></li></ul><h2 id="1-2-持久化"><a href="#1-2-持久化" class="headerlink" title="1.2 持久化"></a>1.2 持久化</h2><p>数据持久化</p><ul><li>持久化就是将程序的数据在持久状态和瞬时状态转化的过程</li><li>内存：<strong>断电即失</strong></li><li>数据库(jdbc)，io文件持久化</li><li>生活：冷藏食物，罐头</li></ul><p><strong>为什么需要持久化？</strong></p><ul><li>有一些对象，不能让他丢掉</li><li>内存太贵了</li></ul><h2 id="1-3-持久层"><a href="#1-3-持久层" class="headerlink" title="1.3 持久层"></a>1.3 持久层</h2><p>Dao层、Service层、Controller层…</p><ul><li>完成持久化工作的代码块</li><li>层界限十分明显</li></ul><h2 id="1-4-为什么需要Mybatis？"><a href="#1-4-为什么需要Mybatis？" class="headerlink" title="1.4 为什么需要Mybatis？"></a>1.4 为什么需要Mybatis？</h2><ul><li>帮助程序员将数据存入到数据库中</li><li>方便</li><li>传统的JDBC代码太复杂了。简化、框架</li><li>不用Mybatis也可以，更容易上手。<strong>技术没有高低之分</strong> </li><li>优点：<ul><li>简单易学</li><li>灵活</li><li>sql和代码的分离，提高了可维护性。</li><li>提供映射标签，支持对象与数据库的orm字段关系映射。</li><li>提供对象关系映射标签，支持对象关系组建维护。</li><li>提供xml标签，支持编写动态sql。</li></ul></li></ul><p><strong>最重要的一点：使用的人多！</strong></p><p>Spring SpringMVC SpringBoot</p><h1 id="2-第一个Mybatis程序"><a href="#2-第一个Mybatis程序" class="headerlink" title="2. 第一个Mybatis程序"></a>2. 第一个Mybatis程序</h1><p>思路：搭建环境–》导入Mybatis–》编写代码–》测试</p><h2 id="2-1-搭建环境"><a href="#2-1-搭建环境" class="headerlink" title="2.1 搭建环境"></a>2.1 搭建环境</h2><p>搭建数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database `mybatis`;</span><br><span class="line">use `mybatis`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `<span class="keyword">user</span>`(</span><br><span class="line">`id` <span class="type">int</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">primary</span> key,</span><br><span class="line">    `name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">default</span> <span class="keyword">null</span>,</span><br><span class="line">    `pwd` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">default</span> <span class="keyword">null</span></span><br><span class="line">)engine<span class="operator">=</span>INNODB <span class="keyword">default</span> charset<span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> `<span class="keyword">user</span>`(`id`,`name`,`pwd`) <span class="keyword">values</span></span><br><span class="line">(<span class="number">1</span>,<span class="string">&#x27;张三&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>),</span><br><span class="line">(<span class="number">2</span>,<span class="string">&#x27;李四&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>),</span><br><span class="line">(<span class="number">3</span>,<span class="string">&#x27;王五&#x27;</span>,<span class="string">&#x27;123890&#x27;</span>)</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>新建项目</p><ol><li><p>新建一个普通的maven项目</p></li><li><p>删除src目录</p></li><li><p>导入maven依赖 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--导入依赖--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mysql驱动--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--mybatis--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--junit--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.13.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-2-创建模块"><a href="#2-2-创建模块" class="headerlink" title="2.2 创建模块"></a>2.2 创建模块</h2><ul><li>编写mybatis的核心配置文件</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--核心配置文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mybatis?useSSL=true<span class="symbol">&amp;amp;</span>useUnicode=true<span class="symbol">&amp;amp;</span>characterEncoding=UTF-8&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1234&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>编写mybatis工具类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//sqlSessionFactory --&gt;sqlSession</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory sqlSessionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//获取sqlSessionFactory对象</span></span><br><span class="line">            String resource = <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">            InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">            sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">//    既然有了 SqlSessionFactory，顾名思义，我们可以从中获得 SqlSession 的实例。</span></span><br><span class="line"><span class="comment">//    SqlSession 提供了在数据库执行 SQL 命令所需的所有方法。你可以通过 SqlSession 实例来直接执行已映射的 SQL 语句。</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSqlSession</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sqlSessionFactory.openSession();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-编写代码"><a href="#2-3-编写代码" class="headerlink" title="2.3 编写代码"></a>2.3 编写代码</h2><ul><li>实体类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//实体类</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String pwd;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">User</span><span class="params">(<span class="keyword">int</span> id, String name, String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPwd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPwd</span><span class="params">(String pwd)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.pwd = pwd;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;User&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, pwd=&#x27;&quot;</span> + pwd + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Dao接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">getUserList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>接口实现类由原来的UserDaoImpl转变为一个Mapper配置文件</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span><br><span class="line">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span><br><span class="line">&lt;!--namespace绑定一个对应的Dao/Mapper接口--&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">&quot;com.kya.dao.UserDao&quot;</span>&gt;</span><br><span class="line">    &lt;!--select查询语句--&gt;</span><br><span class="line">    &lt;select id=<span class="string">&quot;getUserList&quot;</span> resultType=<span class="string">&quot;com.kya.dao.UserDao&quot;</span>&gt;</span><br><span class="line">        select * from mybatis.user</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure><h2 id="2-4-测试"><a href="#2-4-测试" class="headerlink" title="2.4 测试"></a>2.4 测试</h2><p>注意点：</p><p>org.apache.ibatis.bindingBindingException:Type interface com.kya.dao.UserDao is not known to the MapperRegistry.</p><p><strong>MapperRegistry是什么？</strong></p><p>核心配置文件中注册mappers</p><ul><li><p>junit测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//第一步：获得SqlSession对象</span></span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line"></span><br><span class="line">    <span class="comment">//方式一：getMapper</span></span><br><span class="line">    UserDao userDao = sqlSession.getMapper(UserDao.class);</span><br><span class="line">    List&lt;User&gt; userList = userDao.getUserList();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//关闭SqlSession</span></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可能会遇到的问题：</p><ol><li>配置文件没有注册</li><li>绑定接口错误</li><li>方法名不对</li><li>返回类型不对</li><li>Maven导出资源问题</li></ol></li></ul></li></ol><h1 id="3-CRUD"><a href="#3-CRUD" class="headerlink" title="3.CRUD"></a>3.CRUD</h1><h2 id="1-namespace"><a href="#1-namespace" class="headerlink" title="1. namespace"></a>1. namespace</h2><p>namespace中的包名要和 Dao/Mapper 接口的报名一致！</p><h2 id="2-select"><a href="#2-select" class="headerlink" title="2. select"></a>2. select</h2><p>选择，查询语句</p><ul><li>id：就是对应的namespace中的方法名；</li><li>resultType：Sql语句执行的返回值！</li><li>parameterType：参数类型</li></ul><p>步骤：</p><ol><li><p>编写接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    根据ID查询用户</span></span><br><span class="line"><span class="function">User <span class="title">getUserById</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>编写对应的mapper中的sql语句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.kya.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    select *</span><br><span class="line">    from mybatis.user</span><br><span class="line">    where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//第一步：获得SqlSession对象</span></span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line"></span><br><span class="line"><span class="comment">//        方式一：getMapper</span></span><br><span class="line">        UserMapper userMapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        List&lt;User&gt; userList = userMapper.getUserList();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        关闭SqlSession</span></span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        User user = mapper.getUserById(<span class="number">1</span>);</span><br><span class="line">        System.out.println(user);</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="keyword">int</span> res = mapper.addUser(<span class="keyword">new</span> User(<span class="number">4</span>, <span class="string">&quot;无名氏&quot;</span>, <span class="string">&quot;122233333&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span> (res &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;提交成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//      提交事务</span></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="keyword">int</span> res = mapper.updateUser(<span class="keyword">new</span> User(<span class="number">3</span>, <span class="string">&quot;LLL&quot;</span>, <span class="string">&quot;6666&quot;</span>));</span><br><span class="line">        <span class="keyword">if</span> (res &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;修改后的数据：&quot;</span>);</span><br><span class="line">            System.out.println(mapper.getUserById(<span class="number">3</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        <span class="keyword">int</span> res = mapper.deleteUser(<span class="number">3</span>);</span><br><span class="line">        <span class="keyword">if</span> (res &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="3-insert"><a href="#3-insert" class="headerlink" title="3. insert"></a>3. insert</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.kya.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    insert into mybatis.user (id, name, pwd)</span><br><span class="line">    values (#&#123;id&#125;, #&#123;name&#125;, #&#123;pwd&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-update"><a href="#4-update" class="headerlink" title="4.update"></a>4.update</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.kya.pojo.User&quot;</span>&gt;</span></span><br><span class="line">    update mybatis.user</span><br><span class="line">    set name=#&#123;name&#125;,</span><br><span class="line">    pwd=#&#123;pwd&#125;</span><br><span class="line">    where id = #&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="5-delete"><a href="#5-delete" class="headerlink" title="5.delete"></a>5.delete</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span>&gt;</span></span><br><span class="line">    delete from mybatis.user where id=#&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="注意点："><a href="#注意点：" class="headerlink" title="注意点："></a>注意点：</h3><ul><li>增删改需要提交事务！ `sqlSession.commit();</li></ul><h2 id="6-分析错误"><a href="#6-分析错误" class="headerlink" title="6. 分析错误"></a>6. 分析错误</h2><ul><li>标签不要匹配错误</li><li>recurce绑定mapper，需要使用路径</li><li>程序配置文件必须符合规范</li><li>NullPointerException没有注册到资源</li><li>输出的xml文件中存在乱码问题</li><li>maven资源没有导出问题</li></ul><h2 id="7-万能Map"><a href="#7-万能Map" class="headerlink" title="7. 万能Map"></a>7. 万能Map</h2><p> 假设，实体类或者数据库中的表，字段或者参数过多，我们应当考虑使用Map！</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    万能Map</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">addUser2</span><span class="params">(Map&lt;String,Object&gt; map)</span></span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser2&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">    insert into mybatis.user (id,name) value (#&#123;userid&#125;,#&#123;userName&#125;);</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">    UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line"></span><br><span class="line">    HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;userid&quot;</span>, <span class="number">4</span>);</span><br><span class="line">    map.put(<span class="string">&quot;userName&quot;</span>, <span class="string">&quot;Hello&quot;</span>);</span><br><span class="line"></span><br><span class="line">    mapper.addUser2(map);</span><br><span class="line"></span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Map传递参数，直接在sql中取出key即可！【parameterType=”map”】</p><p>对象传递参数，直接在sql中取对象得属性即可！【parameterType=”Object”】</p><p>只有一个基本类型参数的情况下，可以直接在sql中取到！</p><p>多个参数用Map，<strong>或者注解！</strong></p><h2 id="8-思考题"><a href="#8-思考题" class="headerlink" title="8.思考题"></a>8.思考题</h2><p>模糊查询怎么写？</p><ol><li><p>java代码执行的时候，传递通配符%%</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;User&gt; userList = mapper.getUserLike(<span class="string">&quot;%李%&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>在sql拼接中使用通配符</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from mybatis.user where name like <span class="string">&quot;%&quot;</span>#&#123;value&#125;<span class="string">&quot;%&quot;</span>;</span><br></pre></td></tr></table></figure></li></ol><h1 id="4-配置解析"><a href="#4-配置解析" class="headerlink" title="4.配置解析"></a>4.配置解析</h1><h2 id="1-核心配置文件"><a href="#1-核心配置文件" class="headerlink" title="1. 核心配置文件"></a>1. 核心配置文件</h2><ul><li><p>mybatis-config.xml</p></li><li><p>MyBatis 的配置文件包含了会深深影响 MyBatis 行为的设置和属性信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">configuration（配置）</span><br><span class="line">properties（属性）</span><br><span class="line">settings（设置）</span><br><span class="line">typeAliases（类型别名）</span><br><span class="line">typeHandlers（类型处理器）</span><br><span class="line">objectFactory（对象工厂）</span><br><span class="line">plugins（插件）</span><br><span class="line">environments（环境配置）</span><br><span class="line">environment（环境变量）</span><br><span class="line">transactionManager（事务管理器）</span><br><span class="line">dataSource（数据源）</span><br><span class="line">databaseIdProvider（数据库厂商标识）</span><br><span class="line">mappers（映射器）</span><br></pre></td></tr></table></figure></li></ul><h2 id="2-环境配置（environments）"><a href="#2-环境配置（environments）" class="headerlink" title="2. 环境配置（environments）"></a>2. 环境配置（environments）</h2><p>Mybatis可以配置成适应多种环境</p><p><strong>不过要记住：尽管可以配置多个环境，但每个SqlSessionFactory实例只能选择一种环境。</strong></p><p>学会使用配置多套运行环境！</p><p>Mybatis默认的事务管理器是JDBC，连接池：POOLED</p><h2 id="3-属性（properties）"><a href="#3-属性（properties）" class="headerlink" title="3.属性（properties）"></a>3.属性（properties）</h2><p> 我们可以通过properties属性来实现引用配置文件</p><p>这些属性可以在外部进行配置，并可以进行动态替换。你既可以在典型的 Java 属性文件中配置这些属性，也可以在 properties 元素的子元素中设置。【db.properties】</p><p><img src="C:\Users\KY-Desktop\AppData\Roaming\Typora\typora-user-images\image-20220606211708223.png" alt="image-20220606211708223"></p><p>编写一个配置文件</p><p>db.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/mybatis?useSSL=true&amp;useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">1234</span></span><br></pre></td></tr></table></figure><p>在核心配置文件中引入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--引入外部配置文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">&quot;db.properties&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">value</span>=<span class="string">&quot;1111&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>可以直接引入外部文件</li><li>可以在其中增加一些属性配置</li><li>如果两个文件有同一个字段，优先使用外部配置文件</li></ul><h2 id="4-类型别名（typeAliases）"><a href="#4-类型别名（typeAliases）" class="headerlink" title="4.类型别名（typeAliases）"></a>4.类型别名（typeAliases）</h2><ul><li>类型别名可为 Java 类型设置一个缩写名字</li><li>降低冗余的全限定类名书写</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--别名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.kya.pojo.User&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;User&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以指定一个包名，MyBatis 会在包名下面搜索需要的 Java Bean，比如：</p><p>扫描实体类的包，他的默认别名就为这个类的类名，首字母小写！</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--别名--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.kya.pojo&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在实体类比较少的时候，使用第一种方式。</p><p>如果实体类十分多，建议使用第二种。</p><p>第一种可以DIY别名，第二种则<strong>不行</strong>，如果非要改，需要在实体类上增加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Alias(&quot;user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;&#125;</span><br></pre></td></tr></table></figure><h2 id="5-设置"><a href="#5-设置" class="headerlink" title="5.设置"></a>5.设置</h2><p>这是 MyBatis 中极为重要的调整设置，它们会改变 MyBatis 的运行时行为。</p><table><thead><tr><th align="left">设置名</th><th align="left">描述</th><th align="left">有效值</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left">cacheEnabled</td><td align="left">全局性地开启或关闭所有映射器配置文件中已配置的任何缓存。</td><td align="left">true | false</td><td align="left">true</td></tr><tr><td align="left">lazyLoadingEnabled</td><td align="left">延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。 特定关联关系中可通过设置 <code>fetchType</code> 属性来覆盖该项的开关状态。</td><td align="left">true | false</td><td align="left">false</td></tr><tr><td align="left">logImpl</td><td align="left">指定 MyBatis 所用日志的具体实现，未指定时将自动查找。</td><td align="left">SLF4J | LOG4J（3.5.9 起废弃） | LOG4J2 | JDK_LOGGING | COMMONS_LOGGING | STDOUT_LOGGING | NO_LOGGING</td><td align="left">未设置</td></tr></tbody></table><h2 id="6-其他配置"><a href="#6-其他配置" class="headerlink" title="6.其他配置"></a>6.其他配置</h2><ul><li>typeHandlers（类型处理器）</li><li>objectFactory（对象工厂）</li><li>plugins（插件）<ul><li>MyBatis Generator Core</li><li>MyBatis Plus</li><li>通用Mapper</li></ul></li></ul><h2 id="7-映射器（mappers）"><a href="#7-映射器（mappers）" class="headerlink" title="7.映射器（mappers）"></a>7.映射器（mappers）</h2><p>MapperRegistry：注册绑定我们的Mapper文件；</p><p>方式一：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--每个mapper.xml都需要在mybatis核心配置文件中注册--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/kya/dao/UserMapper.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>方式二：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--每个mapper.xml都需要在mybatis核心配置文件中注册--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.dao.UserMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注意点：</p><ul><li>接口和他的Mapper配置文件必须同名</li><li>接口和他的Mapper配置文件必须在同一个包下</li></ul><p>方式三：使用扫描包进行注入绑定</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--每个mapper.xml都需要在mybatis核心配置文件中注册--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.kya.dao&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-作用域（Scope）和生命周期"><a href="#8-作用域（Scope）和生命周期" class="headerlink" title="8.作用域（Scope）和生命周期"></a>8.作用域（Scope）和生命周期</h2><p><img src="image-20220608115728214.png" alt="image-20220608115728214"></p><p>生命周期，和作用域是至关重要的，因为错误的使用会导致非常严重的<strong>并发问题</strong>。</p><p><strong>SqlSessionFactoryBuilder：</strong></p><ul><li>一旦创建了 SqlSessionFactory，就不再需要它了</li><li>局部变量</li></ul><p><strong>SqlSessionFactory：</strong></p><ul><li>说白了就是可以想象成：数据库连接池</li><li>SqlSessionFactory 一旦被创建就应该在应用的运行期间一直存在，<strong>没有任何理由丢弃它或重新创建另一个实例</strong></li><li>因此 SqlSessionFactory 的最佳作用域是应用作用域</li><li>最简单的就是使用<strong>单例模式</strong>或者静态单例模式</li></ul><p><strong>SqlSession：</strong></p><ul><li>连接到连接池的一个请求</li><li>SqlSession 的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域</li><li>用完立马关闭，否则资源被占用</li></ul><p><img src="image-20220608115639910.png" alt="image-20220608115639910"></p><p>这里的每一个Mapper，就代表一个具体业务</p><h1 id="5-解决属性名和字段名不一致的问题"><a href="#5-解决属性名和字段名不一致的问题" class="headerlink" title="5.解决属性名和字段名不一致的问题"></a>5.解决属性名和字段名不一致的问题</h1><h2 id="1-问题"><a href="#1-问题" class="headerlink" title="1. 问题"></a>1. 问题</h2><p>数据库中的字段</p><p>新建一个项目，拷贝之前的，测试实体类字段不一致的情况</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>出现的问题</p><p><img src="C:\Users\善联\AppData\Roaming\Typora\typora-user-images\image-20220608144332453.png" alt="image-20220608144332453"></p><p>解决方法</p><ul><li><p>起别名</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span><br><span class="line">    select id, name, pwd as password</span><br><span class="line">    from mybatis.user</span><br><span class="line">    where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="2-resultMap"><a href="#2-resultMap" class="headerlink" title="2. resultMap"></a>2. resultMap</h2><p>结果集映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;userMap&quot;</span> <span class="attr">type</span>=<span class="string">&quot;User&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- column数据库中的字段，property实体类中的类型--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;pwd&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserById&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span>&gt;</span></span><br><span class="line">    select id, name, pwd as password</span><br><span class="line">    from mybatis.user</span><br><span class="line">    where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><code>resultMap</code> 元素是 MyBatis 中最重要最强大的元素。</li><li>ResultMap 的设计思想是，对简单的语句做到零配置，对于复杂一点的语句，只需要描述语句之间的关系就行了。</li><li>在学习了上面的知识后，你会发现上面的例子没有一个需要显式配置 <code>ResultMap</code>，这就是 <code>ResultMap</code> 的优秀之处——你完全可以不用显式地配置它们。</li></ul><h1 id="6-日志"><a href="#6-日志" class="headerlink" title="6. 日志"></a>6. 日志</h1><h2 id="1-日志工厂"><a href="#1-日志工厂" class="headerlink" title="1. 日志工厂"></a>1. 日志工厂</h2><p>如果一个数据库操作，出现了异常，我们需要排错，日志是最好的助手</p><p>曾经：sout、debug</p><p>现在：日志工厂</p><ul><li>SLF4J</li><li>LOG4J（3.5.9 起废弃）【掌握】</li><li>LOG4J2</li><li>JDK_LOGGING</li><li>COMMONS_LOGGING</li><li>STDOUT_LOGGING【掌握】</li><li>NO_LOGGING</li></ul><p>在mybatis中具体使用哪一个日志实现，在设置中实现</p><p><strong>STDOUT_LOGGING 标准日志输出</strong></p><p>在mybatis核心配置文件中，配置我们的日志</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;STDOUT_LOGGING&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="C:\Users\善联\AppData\Roaming\Typora\typora-user-images\image-20220608155425998.png" alt="image-20220608155425998"></p><h2 id="2-Log4j"><a href="#2-Log4j" class="headerlink" title="2. Log4j"></a>2. Log4j</h2><h3 id="什么是Log4j"><a href="#什么是Log4j" class="headerlink" title="什么是Log4j"></a>什么是Log4j</h3><ul><li>Log4j是Apache的一个开源项目，通过使用Log4j，我们可以控制日志信息输送的目的地是控制台、文件、GUI组件</li><li>我们也可以控制每一条日志的输出格式</li><li>通过定义每一条日志信息的级别，我们能够更加细致地控制日志的生成过程</li><li>通过一个<a href="https://baike.baidu.com/item/%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/286550">配置文件</a>来灵活地进行配置，而不需要修改应用的代码</li></ul><ol><li><p>导入Log4j的包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/log4j/log4j --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>log4j.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将等级为DEBUG的日志信息输出到console和file这两个目的地，console和file的定义在下面的代码</span></span><br><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">DEBUG,console,file</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#控制台输出的相关设置</span></span><br><span class="line"><span class="meta">log4j.appender.console</span> = <span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.console.Target</span> = <span class="string">System.out</span></span><br><span class="line"><span class="meta">log4j.appender.console.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout</span> = <span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.console.layout.ConversionPattern</span>=<span class="string">[%c]-%m%n</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#文件输出的相关设置</span></span><br><span class="line"><span class="meta">log4j.appender.file</span> = <span class="string">org.apache.log4j.RollingFileAppender</span></span><br><span class="line"><span class="meta">log4j.appender.file.File</span>=<span class="string">./log/kya.log</span></span><br><span class="line"><span class="meta">log4j.appender.file.MaxFileSize</span>=<span class="string">10mb</span></span><br><span class="line"><span class="meta">log4j.appender.file.Threshold</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.file.layout.ConversionPattern</span>=<span class="string">[%p][%d&#123;yy-MM-dd&#125;][%c]%m%n</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#日志输出级别</span></span><br><span class="line"><span class="meta">log4j.logger.org.mybatis</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.Statement</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.ResultSet</span>=<span class="string">DEBUG</span></span><br><span class="line"><span class="meta">log4j.logger.java.sql.PreparedStatement</span>=<span class="string">DEBUG</span></span><br></pre></td></tr></table></figure></li><li><p>配置log4j为日志的实现</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;logImpl&quot;</span> <span class="attr">value</span>=<span class="string">&quot;LOG4J&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">settings</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>log4j的使用，直接测试运行刚才的查询</p><p><img src="image-20220608165752961.png" alt="image-20220608165752961"></p></li></ol><p><strong>简单使用</strong></p><ol><li><p>在要使用log4j的类中，导入包<code>org.apache.log4j.Logger</code></p></li><li><p>日志对象，参数为当前类的class</p><p><code>static Logger logger = Logger.getLogger(UserDaoTest.class);</code></p></li><li><p>日志级别</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">logger.info(<span class="string">&quot;info:进入了log4j&quot;</span>);</span><br><span class="line">logger.debug(<span class="string">&quot;debug:进入了log4j&quot;</span>);</span><br><span class="line">logger.error(<span class="string">&quot;error:进入了log4j&quot;</span>);</span><br></pre></td></tr></table></figure></li></ol><h1 id="7-分页"><a href="#7-分页" class="headerlink" title="7. 分页"></a>7. 分页</h1><p> <strong>思考：为什么要分页？</strong></p><ul><li>减少数据的处理量</li></ul><h2 id="1-使用Limit分页"><a href="#1-使用Limit分页" class="headerlink" title="1. 使用Limit分页"></a>1. 使用Limit分页</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">语法：<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mybatis.user limit startIndex,pageSize;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mybatis.user limit <span class="number">3</span>; #[<span class="number">0</span>,n]</span><br></pre></td></tr></table></figure><p>使用mybatis实现分页，核心SQL</p><ol><li><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    分页</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUserByLimit</span><span class="params">(Map&lt;String,Integer&gt; map)</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>Mapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByLimit&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;int&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.user limit #&#123;startIndex&#125;,#&#123;pageSize&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserByLimit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">    UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">    HashMap&lt;String, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    map.put(<span class="string">&quot;startIndex&quot;</span>, <span class="number">1</span>);</span><br><span class="line">    map.put(<span class="string">&quot;pageSize&quot;</span>, <span class="number">2</span>);</span><br><span class="line">    List&lt;User&gt; userList = mapper.getUserByLimit(map);</span><br><span class="line">    <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-RowBounds分页"><a href="#2-RowBounds分页" class="headerlink" title="2. RowBounds分页"></a>2. RowBounds分页</h2><p>不再使用SQl实现分页</p><ol><li><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//    分页2</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUserByRowBounds</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>Mapper.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getUserByRowBounds&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;userMap&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.user</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserByRowBounds</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">    RowBounds rowBounds = <span class="keyword">new</span> RowBounds(<span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    List&lt;User&gt; userList = sqlSession.selectList(<span class="string">&quot;com.kya.dao.UserMapper.getUserByRowBounds&quot;</span>, <span class="keyword">null</span>, rowBounds);</span><br><span class="line">    <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">        System.out.println(user);</span><br><span class="line">    &#125;</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="3-分页插件"><a href="#3-分页插件" class="headerlink" title="3. 分页插件"></a>3. 分页插件</h2><p>PageHelper ，了解即可，万一公司的架构师说要使用，需要知道这是什么东西！</p><h1 id="8-使用注解开发"><a href="#8-使用注解开发" class="headerlink" title="8. 使用注解开发"></a>8. 使用注解开发</h1><h2 id="1-面向接口编程"><a href="#1-面向接口编程" class="headerlink" title="1. 面向接口编程"></a>1. 面向接口编程</h2><ul><li>大家之前都学过面向对象编程，也学习过接口，但在真正的开发中，很多时候我们会选择面向接口编程</li><li><strong>根本原因 :  解耦 , 可拓展 , 提高复用 , 分层开发中 , 上层不用管具体的实现 , 大家都遵守共同的标准 , 使得开发变得容易 , 规范性更好</strong></li><li>在一个面向对象的系统中，系统的各种功能是由许许多多的不同对象协作完成的。在这种情况下，各个对象内部是如何实现自己的,对系统设计人员来讲就不那么重要了；</li><li>而各个对象之间的协作关系则成为系统设计的关键。小到不同类之间的通信，大到各模块之间的交互，在系统设计之初都是要着重考虑的，这也是系统设计的主要工作内容。面向接口编程就是指按照这种思想来编程。</li></ul><p><strong>关于接口的理解</strong></p><ul><li><p>接口从更深层次的理解，应是定义（规范，约束）与实现（名实分离的原则）的分离。</p></li><li><p>接口的本身反映了系统设计人员对系统的抽象理解。</p></li><li><p>接口应有两类：</p></li><li><ul><li>第一类是对一个个体的抽象，它可对应为一个抽象体(abstract class)；</li><li>第二类是对一个个体某一方面的抽象，即形成一个抽象面（interface）；</li></ul></li><li><p>一个体有可能有多个抽象面。抽象体与抽象面是有区别的。</p></li></ul><p><strong>三个面向区别</strong></p><ul><li>面向对象是指，我们考虑问题时，以对象为单位，考虑它的属性及方法 .</li><li>面向过程是指，我们考虑问题时，以一个具体的流程（事务过程）为单位，考虑它的实现 .</li><li>接口设计与非接口设计是针对复用技术而言的，与面向对象（过程）不是一个问题.更多的体现就是对系统整体的架构</li></ul><h2 id="2-使用注解开发"><a href="#2-使用注解开发" class="headerlink" title="2. 使用注解开发"></a>2. 使用注解开发</h2><ol><li><p>在接口上实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line"><span class="function">List&lt;User&gt; <span class="title">getUser</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure></li><li><p>需要在核心配置文件中绑定接口</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--    绑定接口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.dao.UserMapper&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p></li></ol><p>本质：反射机制实现</p><p>底层：动态代理</p><p>Mybatis详细的执行流程！</p><p><img src="640.png" alt="图片"></p><h2 id="3-CRUD-1"><a href="#3-CRUD-1" class="headerlink" title="3. CRUD"></a>3. CRUD</h2><p>我们可以在工具类创建的时候自动提交事务 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title">getSqlSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sqlSessionFactory.openSession(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编写接口，增加注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Select(&quot;select * from user&quot;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">getUser</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from user where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">getUserByID</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> <span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Insert(&quot;insert into user (id,name,pwd) values(#&#123;id&#125;,#&#123;name&#125;,#&#123;password&#125;)&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">addUser</span><span class="params">(Map&lt;String, Object&gt; map)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Update(&quot;update user set name=#&#123;name&#125;,pwd=#&#123;password&#125; where id=#&#123;id&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">updateUser</span><span class="params">(User user)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Delete(&quot;delete from user where id=#&#123;uid&#125;&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteUser</span><span class="params">(<span class="meta">@Param(&quot;uid&quot;)</span> <span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        List&lt;User&gt; userList = mapper.getUser();</span><br><span class="line">        <span class="keyword">for</span> (User user : userList) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUserByID</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        List&lt;User&gt; userByID = mapper.getUserByID(<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span> (User user : userByID) &#123;</span><br><span class="line">            System.out.println(user);</span><br><span class="line">        &#125;</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        HashMap&lt;String, Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;id&quot;</span>,<span class="number">5</span>);</span><br><span class="line">        map.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;hellpp&quot;</span>);</span><br><span class="line">        map.put(<span class="string">&quot;password&quot;</span>,<span class="string">&quot;2132132135&quot;</span>);</span><br><span class="line">        mapper.addUser(map);</span><br><span class="line">        System.out.println(<span class="string">&quot;done!&quot;</span>);</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        mapper.updateUser(<span class="keyword">new</span> User(<span class="number">5</span>,<span class="string">&quot;true&quot;</span>,<span class="string">&quot;e23423&quot;</span>));</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteUser</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SqlSession sqlSession = MybatisUtils.getSqlSession();</span><br><span class="line">        UserMapper mapper = sqlSession.getMapper(UserMapper.class);</span><br><span class="line">        mapper.deleteUser(<span class="number">5</span>);</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>【注意：我们必须要将接口注册绑定到核心配置文件中！！】</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--绑定Mapper--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.kya.dao.UserMapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--通配所有的mapper.xml--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;mapper resource=&quot;com/kya/dao/*Mapper.xml&quot;/&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>关于@Param()注解</strong></p><ul><li>基本类型的参数或者String，需要加上</li><li>引用类型不需要加</li><li>如果只有一个基本类型的话，可以忽略，但是建议大家都加上</li><li>在SQL中引用的就是<code>@Param()</code>中设定的属性名</li></ul><p>#{} ${} 区别</p><h1 id="9-Lombok"><a href="#9-Lombok" class="headerlink" title="9. Lombok"></a>9. Lombok</h1><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Project Lombok is a java library that automatically plugs into your editor and build tools, spicing up your java.</span><br><span class="line">Never write another getter or equals method again, with one annotation your class has a fully featured builder, Automate your logging variables, and much more.</span><br></pre></td></tr></table></figure><p>使用步骤：</p><ol><li><p>在IDEA中安装Lombok插件</p></li><li><p>在项目中导入lombok的jar包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>    </span><br><span class="line">       <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">3. 在实体类上加注解</span><br><span class="line"></span><br><span class="line">```tex</span><br><span class="line">@Getter and @Setter</span><br><span class="line">@FieldNameConstants</span><br><span class="line">@ToString</span><br><span class="line">@EqualsAndHashCode</span><br><span class="line">@AllArgsConstructor, @RequiredArgsConstructor and @NoArgsConstructor</span><br><span class="line">@Log, @Log4j, @Log4j2, @Slf4j, @XSlf4j, @CommonsLog, @JBossLog, @Flogger, @CustomLog</span><br><span class="line">@Data</span><br><span class="line">@Builder</span><br><span class="line">@SuperBuilder</span><br><span class="line">@Singular</span><br><span class="line">@Delegate</span><br><span class="line">@Value</span><br><span class="line">@Accessors</span><br><span class="line">@Wither</span><br><span class="line">@With</span><br><span class="line">@SneakyThrows</span><br><span class="line">@StandardException</span><br><span class="line">@val</span><br><span class="line">@var</span><br><span class="line">experimental @var</span><br><span class="line">@UtilityClass</span><br></pre></td></tr></table></figure></li></ol><p>说明：</p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@Data：无参构造、get、set、tostring、hashcode、equals</span><br><span class="line">@AllArgsConstructor</span><br><span class="line">@NoArgsConstructor</span><br><span class="line">@ToString</span><br><span class="line">@EqualsAndHashCode</span><br><span class="line">@Getter</span><br></pre></td></tr></table></figure><h1 id="10-多对一处理"><a href="#10-多对一处理" class="headerlink" title="10. 多对一处理"></a>10. 多对一处理</h1><p>多对一：</p><p><img src="image-20220614100321971.png" alt="image-20220614100321971"></p><ul><li>多个学生，对应一个老师</li><li>对于学生来说，<strong>关联</strong>，多个学生，关联一个老师【多对一】</li><li>对于老师而言，<strong>集合</strong>，和一个老师，有很多学生【一对多】</li></ul><p>SQL:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `teacher`(</span><br><span class="line">    `id` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="keyword">null</span> ,</span><br><span class="line">    `name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">default</span> <span class="keyword">null</span>,</span><br><span class="line">    <span class="keyword">primary</span> key (`id`)</span><br><span class="line">) engine <span class="operator">=</span>  INNODB <span class="keyword">DEFAULT</span> CHARSET <span class="operator">=</span>utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> teacher(`id`,`name`) <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">&#x27;咩老师&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `student` (</span><br><span class="line">    `id` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    `name` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">default</span> <span class="keyword">null</span>,</span><br><span class="line">    `tid` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">default</span> <span class="keyword">null</span>,</span><br><span class="line">    <span class="keyword">primary</span> key (`id`),</span><br><span class="line">    key `fktid` (`tid`),</span><br><span class="line">    <span class="keyword">constraint</span> `fktid` <span class="keyword">foreign</span> key (`tid`) <span class="keyword">references</span> `teacher` (`id`)</span><br><span class="line">) engine <span class="operator">=</span> INNODB <span class="keyword">DEFAULT</span>  CHARSET <span class="operator">=</span>UTF8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (id, name, tid) <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">&#x27;小明&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (id, name, tid) <span class="keyword">VALUES</span> (<span class="number">2</span>,<span class="string">&#x27;小红&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (id, name, tid) <span class="keyword">VALUES</span> (<span class="number">3</span>,<span class="string">&#x27;小白&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (id, name, tid) <span class="keyword">VALUES</span> (<span class="number">4</span>,<span class="string">&#x27;小李&#x27;</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `student` (id, name, tid) <span class="keyword">VALUES</span> (<span class="number">5</span>,<span class="string">&#x27;小张&#x27;</span>,<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h3 id="测试环境搭建"><a href="#测试环境搭建" class="headerlink" title="测试环境搭建"></a>测试环境搭建</h3><ol><li>导入lombok</li><li>新建实体类Teacher、Student</li><li>建立Mapper接口</li><li>建立Mapper.xml文件</li><li>在核心配置文件中绑定注册我们的Mapper接口或者文件【方式很多，随心选】</li><li>测试查询是否能够成功</li></ol><h3 id="按照查询嵌套处理"><a href="#按照查询嵌套处理" class="headerlink" title="按照查询嵌套处理"></a>按照查询嵌套处理</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--思路：</span></span><br><span class="line"><span class="comment">    1.查询所有学生信息</span></span><br><span class="line"><span class="comment">    2.根据查询出来的学生tid，寻找对应的老师</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudent&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;studentTeacher&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.student;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;studentTeacher&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--复杂的属性，需要单独处理 association 对象  collection 集合 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Teacher&quot;</span> <span class="attr">select</span>=<span class="string">&quot;getTeacher&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.teacher where id=#&#123;id&#125;;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="按照结果嵌套处理"><a href="#按照结果嵌套处理" class="headerlink" title="*按照结果嵌套处理"></a>*按照结果嵌套处理</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudent2&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;studentTeacher2&quot;</span>&gt;</span></span><br><span class="line">    select s.id sid, s.name sname, t.name tname</span><br><span class="line">    from mybatis.student s,</span><br><span class="line">    mybatis.teacher t</span><br><span class="line">    where s.tid = t.id;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;studentTeacher2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;teacher&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tname&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><p>回顾Mysql多对一查询方式：</p><ul><li>子查询</li><li>联表查询</li></ul><h1 id="11-一对多处理"><a href="#11-一对多处理" class="headerlink" title="11. 一对多处理"></a>11. 一对多处理</h1><p>比如：一个老师拥有多个学生</p><p>对于老师而言，就是一对多的关系</p><ol><li><p>环境搭建</p><p><strong>实体类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> tid;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Teacher</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//一个老师拥有多个学生</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Student&gt; students;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="按照结果嵌套处理-1"><a href="#按照结果嵌套处理-1" class="headerlink" title="按照结果嵌套处理"></a>按照结果嵌套处理</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher2&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;teacherStudent&quot;</span>&gt;</span></span><br><span class="line">    select s.id sid, s.name sname, t.name tname, t.id tid</span><br><span class="line">    from mybatis.student s,</span><br><span class="line">    mybatis.teacher t</span><br><span class="line">    where t.id = s.tid</span><br><span class="line">    and t.id = #&#123;tid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;teacherStudent&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tname&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--集合：collection</span></span><br><span class="line"><span class="comment">     javaType=“” 指定属性的类型</span></span><br><span class="line"><span class="comment">     集合中的泛型信息，使用ofType获取--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;students&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sname&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span> <span class="attr">column</span>=<span class="string">&quot;sid&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">&quot;tid&quot;</span> <span class="attr">column</span>=<span class="string">&quot;tid&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="按照查询嵌套处理-1"><a href="#按照查询嵌套处理-1" class="headerlink" title="按照查询嵌套处理"></a>按照查询嵌套处理</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getTeacher3&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;teacherStudent2&quot;</span>&gt;</span></span><br><span class="line">    select *</span><br><span class="line">    from mybatis.teacher</span><br><span class="line">    where id = #&#123;tid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;teacherStudent2&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Teacher&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;students&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;ArrayList&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Student&quot;</span> <span class="attr">select</span>=<span class="string">&quot;getStudentByTeacherId&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">column</span>=<span class="string">&quot;id&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getStudentByTeacherId&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Student&quot;</span>&gt;</span></span><br><span class="line">    select *</span><br><span class="line">    from mybatis.student</span><br><span class="line">    where tid = #&#123;tid&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ol><li>关联 - association 【多对一】</li><li>集合 - collection 【一对多】</li><li>javaType &amp; ofType<ol><li>javaType 用来指定实体类中属性的类型</li><li>ofType 用来指定映射到List或者集合中的pojo类型，泛型中的约束类型</li></ol></li></ol><p>注意点：</p><ul><li>保证SQL的可读性，尽量保证通俗易懂</li><li>注意一对多和多对一，属性名和字段的问题</li><li>如果问题不好排查错误，可以使用日志，建议使用log4j</li></ul><p><strong>面试高频</strong></p><ul><li>Mysql引擎</li><li>InnoDB底层原理</li><li>索引</li><li>索引优化</li></ul><h1 id="12-动态SQL"><a href="#12-动态SQL" class="headerlink" title="12. 动态SQL"></a>12. 动态SQL</h1><p><strong>什么是动态SQL：动态SQL就是指根据不同的条件生成不同的SQL语句</strong></p><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">如果你之前用过 JSTL 或任何基于类 XML 语言的文本处理器，你对动态 SQL 元素可能会感觉似曾相识。在 MyBatis 之前的版本中，需要花时间了解大量的元素。借助功能强大的基于 OGNL 的表达式，MyBatis 3 替换了之前的大部分元素，大大精简了元素种类，现在要学习的元素种类比原来的一半还要少。</span><br><span class="line"></span><br><span class="line">if</span><br><span class="line">choose (when, otherwise)</span><br><span class="line">trim (where, set)</span><br><span class="line">foreach</span><br></pre></td></tr></table></figure><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> `blog`(</span><br><span class="line">    `id` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;博客id&#x27;</span>,</span><br><span class="line">    `title` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;博客标题&#x27;</span>,</span><br><span class="line">    `author` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;博客作者&#x27;</span>,</span><br><span class="line">    `create_time` datetime <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">    `<span class="keyword">view</span>` <span class="type">int</span>(<span class="number">30</span>) <span class="keyword">not</span> <span class="keyword">null</span> comment <span class="string">&#x27;浏览量&#x27;</span></span><br><span class="line">)engine <span class="operator">=</span> innoDB <span class="keyword">DEFAULT</span> CHARSET <span class="operator">=</span> UTF8</span><br></pre></td></tr></table></figure><p>创建一个基础工程</p><ol><li><p>导包</p></li><li><p>编写配置文件</p></li><li><p>编写实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">blog</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> String author;</span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> views;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写实体类对应Mapper接口和Mapper.xml文件</p></li></ol><h2 id="IF"><a href="#IF" class="headerlink" title="IF"></a>IF</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogIF&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.blog where 1=1</span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">        and title = #&#123;title&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author != null&quot;</span>&gt;</span></span><br><span class="line">        and author = #&#123;author&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="choose、when、otherwise"><a href="#choose、when、otherwise" class="headerlink" title="choose、when、otherwise"></a>choose、when、otherwise</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogChoose&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.blog</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">                title = #&#123;title&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">&quot;author != null&quot;</span>&gt;</span></span><br><span class="line">                and author = #&#123;author&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">                and views = #&#123;views&#125;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">otherwise</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">choose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="trim、where、set"><a href="#trim、where、set" class="headerlink" title="trim、where、set"></a>trim、where、set</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogIF&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.blog</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">            and title = #&#123;title&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author != null&quot;</span>&gt;</span></span><br><span class="line">            and author = #&#123;author&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateBlog&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">    update mybatis.blog</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">            title = #&#123;title&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author != null&quot;</span>&gt;</span></span><br><span class="line">            author = #&#123;author&#125;,</span><br><span class="line">        <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">    where id=#&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>所谓的动态SQL，本质还是SQL语句，只是我们在SQL层面上，执行一个逻辑代码</strong></p><h2 id="SQL片段"><a href="#SQL片段" class="headerlink" title="SQL片段"></a>SQL片段</h2><p>有时候，我们可能会将一些功能的部分抽取出来，方便复用</p><ol><li><p>使用SQL标签抽取公众的部分</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sql</span> <span class="attr">id</span>=<span class="string">&quot;if-title-author&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;title != null&quot;</span>&gt;</span></span><br><span class="line">        and title = #&#123;title&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;author != null&quot;</span>&gt;</span></span><br><span class="line">        and author = #&#123;author&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">sql</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在需要使用的地方使用include标签引用即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogIF&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.blog</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;if-title-author&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p>注意事项：</p><ul><li>最好基于单表来定义SQL片段</li><li>不要存在where标签</li></ul><h2 id="Foreach"><a href="#Foreach" class="headerlink" title="Foreach"></a>Foreach</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--select * from mybatis.blog where 1=1 and (id=1 or id=2 or id=3)</span></span><br><span class="line"><span class="comment">    现传一个万能Map，Map中可以存在一个集合--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryBlogForeach&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;blog&quot;</span>&gt;</span></span><br><span class="line">    select * from mybatis.blog</span><br><span class="line">    <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;ids&quot;</span> <span class="attr">item</span>=<span class="string">&quot;id&quot;</span> <span class="attr">open</span>=<span class="string">&quot;and (&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;or&quot;</span>&gt;</span></span><br><span class="line">            id = #&#123;id&#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>动态SQL就是在拼接SQL语句，我们只要保证SQL的正确性，按照SQL的格式，去排列组合即可</strong></p><p>建议：</p><ul><li>先在Mysql中写出完整的SQL，再对应的去修改成为我们的动态SQL实现通用即可</li></ul><h1 id="13-缓存"><a href="#13-缓存" class="headerlink" title="13. 缓存"></a>13. 缓存</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>1、什么是缓存 [ Cache ]？</p><ul><li>存在内存中的临时数据。</li><li>将用户经常查询的数据放在缓存（内存）中，用户去查询数据就不用从磁盘上(关系型数据库数据文件)查询，从缓存中查询，从而提高查询效率，解决了高并发系统的性能问题。</li></ul><p>2、为什么使用缓存？</p><ul><li>减少和数据库的交互次数，减少系统开销，提高系统效率。</li></ul><p>3、什么样的数据能使用缓存？</p><ul><li>经常查询并且不经常改变的数据。【可以使用缓存】</li></ul><h2 id="Mybatis缓存"><a href="#Mybatis缓存" class="headerlink" title="Mybatis缓存"></a>Mybatis缓存</h2><ul><li><p>MyBatis包含一个非常强大的查询缓存特性，它可以非常方便地定制和配置缓存。缓存可以极大的提升查询效率。</p></li><li><p>MyBatis系统中默认定义了两级缓存：<strong>一级缓存</strong>和<strong>二级缓存</strong></p></li><li><ul><li>默认情况下，只有一级缓存开启。（SqlSession级别的缓存，也称为本地缓存）</li><li>二级缓存需要手动开启和配置，他是基于namespace级别的缓存。</li><li>为了提高扩展性，MyBatis定义了缓存接口Cache。我们可以通过实现Cache接口来自定义二级缓存</li></ul></li></ul><h2 id="一级缓存"><a href="#一级缓存" class="headerlink" title="一级缓存"></a>一级缓存</h2><p>一级缓存也叫本地缓存：</p><ul><li>与数据库同一次会话期间查询到的数据会放在本地缓存中。</li><li>以后如果需要获取相同的数据，直接从缓存中拿，没必须再去查询数据库；</li></ul><p>测试步骤：</p><ol><li><p>开启日志</p></li><li><p>测试在一个session中查询两次相同记录</p></li><li><p>查看日志输出</p><p><img src="image-20220617112201372.png" alt="image-20220617112201372"></p></li></ol><p>缓存失效的情况：</p><ol><li>查询不同的东西</li><li>增删改操作，可能会改变原来的数据，所以必定会刷新缓存</li><li>查询不同的Mapper.xml</li><li>手动清理缓存 <code>sqlSession.clearCache();</code></li></ol><p>小结：一级缓存默认开始的，只在一次sqlSession中有效，也就是拿到连接到关闭连接这个区间段</p><p>一级缓存就是一个Map。</p><h2 id="二级缓存"><a href="#二级缓存" class="headerlink" title="二级缓存"></a>二级缓存</h2><ul><li><p>二级缓存也叫全局缓存，一级缓存作用域太低了，所以诞生了二级缓存</p></li><li><p>基于namespace级别的缓存，一个名称空间，对应一个二级缓存；</p></li><li><p>工作机制</p></li><li><ul><li>一个会话查询一条数据，这个数据就会被放在当前会话的一级缓存中；</li><li>如果当前会话关闭了，这个会话对应的一级缓存就没了；但是我们想要的是，会话关闭了，一级缓存中的数据被保存到二级缓存中；</li><li>新的会话查询信息，就可以从二级缓存中获取内容；</li><li>不同的mapper查出的数据会放在自己对应的缓存（map）中；</li></ul></li><li></li></ul><p>步骤：</p><ol><li><p>开启全局缓存</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--显式的开启全局缓存--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">&quot;cacheEnabled&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>在要使用二级缓存的Mapper中开启(也可以自定义参数)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在当前Mapper.xml中使用二级缓存--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">cache</span></span></span><br><span class="line"><span class="tag">       <span class="attr">eviction</span>=<span class="string">&quot;FIFO&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">flushInterval</span>=<span class="string">&quot;60000&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">size</span>=<span class="string">&quot;512&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">readOnly</span>=<span class="string">&quot;true&quot;</span></span></span><br><span class="line"><span class="tag">       /&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>测试</p><ol><li><p>问题，我们需要将实体类序列化，否则会报错！</p><p><code>Cause by: java.io.NotSerializableException: com.kya.dao.User</code></p></li></ol></li></ol><p>小结：</p><ul><li>只要开启了二级缓存，在同一个Mapper下就有效</li><li>所有的数据都会先放在一级缓存中</li><li>只有当会话提交，或者关闭的时候，才会提交到二级缓存中</li></ul><h2 id="Mybatis缓存原理"><a href="#Mybatis缓存原理" class="headerlink" title="Mybatis缓存原理"></a>Mybatis缓存原理</h2><p><img src="image-20220617120350595.png" alt="image-20220617120350595"></p><h2 id="自定义缓存-ehcache"><a href="#自定义缓存-ehcache" class="headerlink" title="自定义缓存-ehcache"></a>自定义缓存-ehcache</h2><p>Ehcache是一种广泛使用的开源Java分布式缓存。主要面向通用缓存</p><p>导包：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.caches<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-ehcache<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在mapper中指定使用ehcache缓存实现</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cache</span> <span class="attr">type</span>=<span class="string">&quot;org.mybatis.caches.ehcache.EhcacheCache&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>ehcache.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ehcache</span> <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:noNamespaceSchemaLocation</span>=<span class="string">&quot;http://ehcache.org/ehcache.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">updateCheck</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      diskStore：为缓存路径，ehcache分为内存和磁盘两级，此属性定义磁盘的缓存位置。参数解释如下：</span></span><br><span class="line"><span class="comment">      user.home – 用户主目录</span></span><br><span class="line"><span class="comment">      user.dir – 用户当前工作目录</span></span><br><span class="line"><span class="comment">      java.io.tmpdir – 默认临时文件路径</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">diskStore</span> <span class="attr">path</span>=<span class="string">&quot;./tmpdir/Tmp_EhCache&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">defaultCache</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">eternal</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">maxElementsInMemory</span>=<span class="string">&quot;10000&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">overflowToDisk</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">diskPersistent</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">timeToIdleSeconds</span>=<span class="string">&quot;1800&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">timeToLiveSeconds</span>=<span class="string">&quot;259200&quot;</span></span></span><br><span class="line"><span class="tag">                  <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">&quot;LRU&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">cache</span></span></span><br><span class="line"><span class="tag">           <span class="attr">name</span>=<span class="string">&quot;cloud_user&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">eternal</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">maxElementsInMemory</span>=<span class="string">&quot;5000&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">overflowToDisk</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">diskPersistent</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToIdleSeconds</span>=<span class="string">&quot;1800&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">timeToLiveSeconds</span>=<span class="string">&quot;1800&quot;</span></span></span><br><span class="line"><span class="tag">           <span class="attr">memoryStoreEvictionPolicy</span>=<span class="string">&quot;LRU&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">      defaultCache：默认缓存策略，当ehcache找不到定义的缓存时，则使用这个缓存策略。只能定义一个。</span></span><br><span class="line"><span class="comment">    --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">     name:缓存名称。</span></span><br><span class="line"><span class="comment">     maxElementsInMemory:缓存最大数目</span></span><br><span class="line"><span class="comment">     maxElementsOnDisk：硬盘最大缓存个数。</span></span><br><span class="line"><span class="comment">     eternal:对象是否永久有效，一但设置了，timeout将不起作用。</span></span><br><span class="line"><span class="comment">     overflowToDisk:是否保存到磁盘，当系统当机时</span></span><br><span class="line"><span class="comment">     timeToIdleSeconds:设置对象在失效前的允许闲置时间（单位：秒）。仅当eternal=false对象不是永久有效时使用，可选属性，默认值是0，也就是可闲置时间无穷大。</span></span><br><span class="line"><span class="comment">     timeToLiveSeconds:设置对象在失效前允许存活时间（单位：秒）。最大时间介于创建时间和失效时间之间。仅当eternal=false对象不是永久有效时使用，默认是0.，也就是对象存活时间无穷大。</span></span><br><span class="line"><span class="comment">     diskPersistent：是否缓存虚拟机重启期数据 Whether the disk store persists between restarts of the Virtual Machine. The default value is false.</span></span><br><span class="line"><span class="comment">     diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区。</span></span><br><span class="line"><span class="comment">     diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒。</span></span><br><span class="line"><span class="comment">     memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使用）。你可以设置为FIFO（先进先出）或是LFU（较少使用）。</span></span><br><span class="line"><span class="comment">     clearOnFlush：内存数量最大时是否清除。</span></span><br><span class="line"><span class="comment">     memoryStoreEvictionPolicy:可选策略有：LRU（最近最少使用，默认策略）、FIFO（先进先出）、LFU（最少访问次数）。</span></span><br><span class="line"><span class="comment">     FIFO，first in first out，这个是大家最熟的，先进先出。</span></span><br><span class="line"><span class="comment">     LFU， Less Frequently Used，就是上面例子中使用的策略，直白一点就是讲一直以来最少被使用的。如上面所讲，缓存的元素有一个hit属性，hit值最小的将会被清出缓存。</span></span><br><span class="line"><span class="comment">     LRU，Least Recently Used，最近最少使用的，缓存的元素有一个时间戳，当缓存容量满了，而又需要腾出地方来缓存新的元素的时候，那么现有缓存元素中时间戳离当前时间最远的元素将被清出缓存。</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">ehcache</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="开发中可能会遇到的问题"><a href="#开发中可能会遇到的问题" class="headerlink" title="开发中可能会遇到的问题"></a>开发中可能会遇到的问题</h1><h2 id="资源过滤"><a href="#资源过滤" class="headerlink" title="资源过滤"></a>资源过滤</h2><p>maven由于他的约定大于配置，我们之后可能遇到我们写的配置文件，无法被导出或者生效的问题，解决方法：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在build中配置resources,来防止我们资源导出失败的问题--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>插件（IDEA）：</p><p>自动生成数据库表字段的实体类插件——easycode</p><h1 id="29道练习题"><a href="#29道练习题" class="headerlink" title="29道练习题"></a>29道练习题</h1><p>数据库:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Navicat MySQL Data Transfer</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Source Server         : localhost_3306</span></span><br><span class="line"><span class="comment">Source Server Version : 50555</span></span><br><span class="line"><span class="comment">Source Host           : 127.0.0.1:3306</span></span><br><span class="line"><span class="comment">Source Database       : smbms</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Target Server Type    : MYSQL</span></span><br><span class="line"><span class="comment">Target Server Version : 50555</span></span><br><span class="line"><span class="comment">File Encoding         : 65001</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">Date: 2019-04-19 17:54:33</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> FOREIGN_KEY_CHECKS<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for smbms_address</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `smbms_address`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `smbms_address` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `contact` <span class="type">varchar</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系人姓名&#x27;</span>,</span><br><span class="line">  `addressDesc` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;收货地址明细&#x27;</span>,</span><br><span class="line">  `postCode` <span class="type">varchar</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮编&#x27;</span>,</span><br><span class="line">  `tel` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系人电话&#x27;</span>,</span><br><span class="line">  `createdBy` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者&#x27;</span>,</span><br><span class="line">  `creationDate` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `modifyBy` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改者&#x27;</span>,</span><br><span class="line">  `modifyDate` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  `userId` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户ID&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">7</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_unicode_ci;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of smbms_address</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_address` <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;王丽&#x27;</span>, <span class="string">&#x27;北京市东城区东交民巷44号&#x27;</span>, <span class="string">&#x27;100010&#x27;</span>, <span class="string">&#x27;13678789999&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_address` <span class="keyword">VALUES</span> (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;张红丽&#x27;</span>, <span class="string">&#x27;北京市海淀区丹棱街3号&#x27;</span>, <span class="string">&#x27;100000&#x27;</span>, <span class="string">&#x27;18567672312&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_address` <span class="keyword">VALUES</span> (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;任志强&#x27;</span>, <span class="string">&#x27;北京市东城区美术馆后街23号&#x27;</span>, <span class="string">&#x27;100021&#x27;</span>, <span class="string">&#x27;13387906742&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_address` <span class="keyword">VALUES</span> (<span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;曹颖&#x27;</span>, <span class="string">&#x27;北京市朝阳区朝阳门南大街14号&#x27;</span>, <span class="string">&#x27;100053&#x27;</span>, <span class="string">&#x27;13568902323&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;2&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_address` <span class="keyword">VALUES</span> (<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;李慧&#x27;</span>, <span class="string">&#x27;北京市西城区三里河路南三巷3号&#x27;</span>, <span class="string">&#x27;100032&#x27;</span>, <span class="string">&#x27;18032356666&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;3&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_address` <span class="keyword">VALUES</span> (<span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;王国强&#x27;</span>, <span class="string">&#x27;北京市顺义区高丽营镇金马工业区18号&#x27;</span>, <span class="string">&#x27;100061&#x27;</span>, <span class="string">&#x27;13787882222&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;3&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for smbms_bill</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `smbms_bill`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `smbms_bill` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `billCode` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;账单编码&#x27;</span>,</span><br><span class="line">  `productName` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品名称&#x27;</span>,</span><br><span class="line">  `productDesc` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品描述&#x27;</span>,</span><br><span class="line">  `productUnit` <span class="type">varchar</span>(<span class="number">10</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品单位&#x27;</span>,</span><br><span class="line">  `productCount` <span class="type">decimal</span>(<span class="number">20</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品数量&#x27;</span>,</span><br><span class="line">  `totalPrice` <span class="type">decimal</span>(<span class="number">20</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品总额&#x27;</span>,</span><br><span class="line">  `isPayment` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;是否支付（1：未支付 2：已支付）&#x27;</span>,</span><br><span class="line">  `createdBy` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者（userId）&#x27;</span>,</span><br><span class="line">  `creationDate` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `modifyBy` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新者（userId）&#x27;</span>,</span><br><span class="line">  `modifyDate` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  `providerId` <span class="type">int</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;供应商ID&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">18</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_unicode_ci;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of smbms_bill</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;BILL2016_001&#x27;</span>, <span class="string">&#x27;洗发水、护发素&#x27;</span>, <span class="string">&#x27;日用品-洗发、护发&#x27;</span>, <span class="string">&#x27;瓶&#x27;</span>, <span class="string">&#x27;500.00&#x27;</span>, <span class="string">&#x27;25000.00&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2014-12-14 13:02:03&#x27;</span>, <span class="string">&#x27;15&#x27;</span>, <span class="string">&#x27;2019-04-16 21:43:12&#x27;</span>, <span class="string">&#x27;13&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;BILL2016_002&#x27;</span>, <span class="string">&#x27;香皂、肥皂、药皂&#x27;</span>, <span class="string">&#x27;日用品-皂类&#x27;</span>, <span class="string">&#x27;块&#x27;</span>, <span class="string">&#x27;1000.00&#x27;</span>, <span class="string">&#x27;10000.00&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-03-23 04:20:40&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;13&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;BILL2016_003&#x27;</span>, <span class="string">&#x27;大豆油&#x27;</span>, <span class="string">&#x27;食品-食用油&#x27;</span>, <span class="string">&#x27;斤&#x27;</span>, <span class="string">&#x27;300.00&#x27;</span>, <span class="string">&#x27;5890.00&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2014-12-14 13:02:03&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;6&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;BILL2016_004&#x27;</span>, <span class="string">&#x27;橄榄油&#x27;</span>, <span class="string">&#x27;食品-进口食用油&#x27;</span>, <span class="string">&#x27;斤&#x27;</span>, <span class="string">&#x27;200.00&#x27;</span>, <span class="string">&#x27;9800.00&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2013-10-10 03:12:13&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;7&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;BILL2016_005&#x27;</span>, <span class="string">&#x27;洗洁精&#x27;</span>, <span class="string">&#x27;日用品-厨房清洁&#x27;</span>, <span class="string">&#x27;瓶&#x27;</span>, <span class="string">&#x27;500.00&#x27;</span>, <span class="string">&#x27;7000.00&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2014-12-14 13:02:03&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;9&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;BILL2016_006&#x27;</span>, <span class="string">&#x27;美国大杏仁&#x27;</span>, <span class="string">&#x27;食品-坚果&#x27;</span>, <span class="string">&#x27;袋&#x27;</span>, <span class="string">&#x27;300.00&#x27;</span>, <span class="string">&#x27;5000.00&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-14 06:08:09&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;4&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;BILL2016_007&#x27;</span>, <span class="string">&#x27;沐浴液、精油&#x27;</span>, <span class="string">&#x27;日用品-沐浴类&#x27;</span>, <span class="string">&#x27;瓶&#x27;</span>, <span class="string">&#x27;500.00&#x27;</span>, <span class="string">&#x27;23000.00&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-07-22 10:10:22&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;14&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;BILL2016_008&#x27;</span>, <span class="string">&#x27;不锈钢盘碗&#x27;</span>, <span class="string">&#x27;日用品-厨房用具&#x27;</span>, <span class="string">&#x27;个&#x27;</span>, <span class="string">&#x27;600.00&#x27;</span>, <span class="string">&#x27;6000.00&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-14 05:12:13&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;14&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;BILL2016_009&#x27;</span>, <span class="string">&#x27;塑料杯&#x27;</span>, <span class="string">&#x27;日用品-杯子&#x27;</span>, <span class="string">&#x27;个&#x27;</span>, <span class="string">&#x27;350.00&#x27;</span>, <span class="string">&#x27;1750.00&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-02-04 11:40:20&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;14&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;10&#x27;</span>, <span class="string">&#x27;BILL2016_010&#x27;</span>, <span class="string">&#x27;豆瓣酱&#x27;</span>, <span class="string">&#x27;食品-调料&#x27;</span>, <span class="string">&#x27;瓶&#x27;</span>, <span class="string">&#x27;200.00&#x27;</span>, <span class="string">&#x27;2000.00&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2013-10-29 05:07:03&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;8&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;11&#x27;</span>, <span class="string">&#x27;BILL2016_011&#x27;</span>, <span class="string">&#x27;海之蓝&#x27;</span>, <span class="string">&#x27;饮料-国酒&#x27;</span>, <span class="string">&#x27;瓶&#x27;</span>, <span class="string">&#x27;50.00&#x27;</span>, <span class="string">&#x27;10000.00&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-14 16:16:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;12&#x27;</span>, <span class="string">&#x27;BILL2016_012&#x27;</span>, <span class="string">&#x27;芝华士&#x27;</span>, <span class="string">&#x27;饮料-洋酒&#x27;</span>, <span class="string">&#x27;瓶&#x27;</span>, <span class="string">&#x27;20.00&#x27;</span>, <span class="string">&#x27;6000.00&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-09-09 17:00:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;13&#x27;</span>, <span class="string">&#x27;BILL2016_013&#x27;</span>, <span class="string">&#x27;长城红葡萄酒&#x27;</span>, <span class="string">&#x27;饮料-红酒&#x27;</span>, <span class="string">&#x27;瓶&#x27;</span>, <span class="string">&#x27;60.00&#x27;</span>, <span class="string">&#x27;800.00&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-11-14 15:23:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;14&#x27;</span>, <span class="string">&#x27;BILL2016_014&#x27;</span>, <span class="string">&#x27;泰国香米&#x27;</span>, <span class="string">&#x27;食品-大米&#x27;</span>, <span class="string">&#x27;斤&#x27;</span>, <span class="string">&#x27;400.00&#x27;</span>, <span class="string">&#x27;5000.00&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-10-09 15:20:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;3&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;15&#x27;</span>, <span class="string">&#x27;BILL2016_015&#x27;</span>, <span class="string">&#x27;东北大米&#x27;</span>, <span class="string">&#x27;食品-大米&#x27;</span>, <span class="string">&#x27;斤&#x27;</span>, <span class="string">&#x27;600.00&#x27;</span>, <span class="string">&#x27;4000.00&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-11-14 14:00:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;3&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;16&#x27;</span>, <span class="string">&#x27;BILL2016_016&#x27;</span>, <span class="string">&#x27;可口可乐&#x27;</span>, <span class="string">&#x27;饮料&#x27;</span>, <span class="string">&#x27;瓶&#x27;</span>, <span class="string">&#x27;2000.00&#x27;</span>, <span class="string">&#x27;6000.00&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2012-03-27 13:03:01&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;2&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_bill` <span class="keyword">VALUES</span> (<span class="string">&#x27;17&#x27;</span>, <span class="string">&#x27;BILL2016_017&#x27;</span>, <span class="string">&#x27;脉动&#x27;</span>, <span class="string">&#x27;饮料&#x27;</span>, <span class="string">&#x27;瓶&#x27;</span>, <span class="string">&#x27;1500.00&#x27;</span>, <span class="string">&#x27;4500.00&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-05-10 12:00:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="string">&#x27;2&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for smbms_provider</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `smbms_provider`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `smbms_provider` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `proCode` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;供应商编码&#x27;</span>,</span><br><span class="line">  `proName` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;供应商名称&#x27;</span>,</span><br><span class="line">  `proDesc` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;供应商详细描述&#x27;</span>,</span><br><span class="line">  `proContact` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;供应商联系人&#x27;</span>,</span><br><span class="line">  `proPhone` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系电话&#x27;</span>,</span><br><span class="line">  `proAddress` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;地址&#x27;</span>,</span><br><span class="line">  `proFax` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;传真&#x27;</span>,</span><br><span class="line">  `createdBy` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者（userId）&#x27;</span>,</span><br><span class="line">  `creationDate` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `modifyDate` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  `modifyBy` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新者（userId）&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">14</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_unicode_ci;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of smbms_provider</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_provider` <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;BJ_GYS001&#x27;</span>, <span class="string">&#x27;北京三木堂商贸有限公司&#x27;</span>, <span class="string">&#x27;长期合作伙伴，主营产品:茅台、五粮液、郎酒、酒鬼酒、泸州老窖、赖茅酒、法国红酒等&#x27;</span>, <span class="string">&#x27;张国强&#x27;</span>, <span class="string">&#x27;13566669999&#x27;</span>, <span class="string">&#x27;北京市丰台区育芳园北路&#x27;</span>, <span class="string">&#x27;010-58858787&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2013-03-21 16:52:07&#x27;</span>, <span class="string">&#x27;2019-04-12 16:44:03&#x27;</span>, <span class="string">&#x27;10&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_provider` <span class="keyword">VALUES</span> (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;HB_GYS001&#x27;</span>, <span class="string">&#x27;石家庄帅益食品贸易有限公司&#x27;</span>, <span class="string">&#x27;长期合作伙伴，主营产品:饮料、水饮料、植物蛋白饮料、休闲食品、果汁饮料、功能饮料等&#x27;</span>, <span class="string">&#x27;王军&#x27;</span>, <span class="string">&#x27;13309094212&#x27;</span>, <span class="string">&#x27;河北省石家庄新华区&#x27;</span>, <span class="string">&#x27;0311-67738876&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-13 04:20:40&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_provider` <span class="keyword">VALUES</span> (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;GZ_GYS001&#x27;</span>, <span class="string">&#x27;深圳市泰香米业有限公司&#x27;</span>, <span class="string">&#x27;初次合作伙伴，主营产品：良记金轮米,龙轮香米等&#x27;</span>, <span class="string">&#x27;郑程瀚&#x27;</span>, <span class="string">&#x27;13402013312&#x27;</span>, <span class="string">&#x27;广东省深圳市福田区深南大道6006华丰大厦&#x27;</span>, <span class="string">&#x27;0755-67776212&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2014-03-21 16:56:07&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_provider` <span class="keyword">VALUES</span> (<span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;GZ_GYS002&#x27;</span>, <span class="string">&#x27;深圳市喜来客商贸有限公司&#x27;</span>, <span class="string">&#x27;长期合作伙伴，主营产品：坚果炒货.果脯蜜饯.天然花茶.营养豆豆.特色美食.进口食品.海味零食.肉脯肉&#x27;</span>, <span class="string">&#x27;林妮&#x27;</span>, <span class="string">&#x27;18599897645&#x27;</span>, <span class="string">&#x27;广东省深圳市福龙工业区B2栋3楼西&#x27;</span>, <span class="string">&#x27;0755-67772341&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2013-03-22 16:52:07&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_provider` <span class="keyword">VALUES</span> (<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;JS_GYS001&#x27;</span>, <span class="string">&#x27;兴化佳美调味品厂&#x27;</span>, <span class="string">&#x27;长期合作伙伴，主营产品：天然香辛料、鸡精、复合调味料&#x27;</span>, <span class="string">&#x27;徐国洋&#x27;</span>, <span class="string">&#x27;13754444221&#x27;</span>, <span class="string">&#x27;江苏省兴化市林湖工业区&#x27;</span>, <span class="string">&#x27;0523-21299098&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2015-11-22 16:52:07&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_provider` <span class="keyword">VALUES</span> (<span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;BJ_GYS002&#x27;</span>, <span class="string">&#x27;北京纳福尔食用油有限公司&#x27;</span>, <span class="string">&#x27;长期合作伙伴，主营产品：山茶油、大豆油、花生油、橄榄油等&#x27;</span>, <span class="string">&#x27;马莺&#x27;</span>, <span class="string">&#x27;13422235678&#x27;</span>, <span class="string">&#x27;北京市朝阳区珠江帝景1号楼&#x27;</span>, <span class="string">&#x27;010-588634233&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2012-03-21 17:52:07&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_provider` <span class="keyword">VALUES</span> (<span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;BJ_GYS003&#x27;</span>, <span class="string">&#x27;北京国粮食用油有限公司&#x27;</span>, <span class="string">&#x27;初次合作伙伴，主营产品：花生油、大豆油、小磨油等&#x27;</span>, <span class="string">&#x27;王驰&#x27;</span>, <span class="string">&#x27;13344441135&#x27;</span>, <span class="string">&#x27;北京大兴青云店开发区&#x27;</span>, <span class="string">&#x27;010-588134111&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_provider` <span class="keyword">VALUES</span> (<span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;ZJ_GYS001&#x27;</span>, <span class="string">&#x27;慈溪市广和绿色食品厂&#x27;</span>, <span class="string">&#x27;长期合作伙伴，主营产品：豆瓣酱、黄豆酱、甜面酱，辣椒，大蒜等农产品&#x27;</span>, <span class="string">&#x27;薛圣丹&#x27;</span>, <span class="string">&#x27;18099953223&#x27;</span>, <span class="string">&#x27;浙江省宁波市慈溪周巷小安村&#x27;</span>, <span class="string">&#x27;0574-34449090&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2013-11-21 06:02:07&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_provider` <span class="keyword">VALUES</span> (<span class="string">&#x27;9&#x27;</span>, <span class="string">&#x27;GX_GYS001&#x27;</span>, <span class="string">&#x27;优百商贸有限公司&#x27;</span>, <span class="string">&#x27;长期合作伙伴，主营产品：日化产品&#x27;</span>, <span class="string">&#x27;李立国&#x27;</span>, <span class="string">&#x27;13323566543&#x27;</span>, <span class="string">&#x27;广西南宁市秀厢大道42-1号&#x27;</span>, <span class="string">&#x27;0771-98861134&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2013-03-21 19:52:07&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_provider` <span class="keyword">VALUES</span> (<span class="string">&#x27;10&#x27;</span>, <span class="string">&#x27;JS_GYS002&#x27;</span>, <span class="string">&#x27;南京火头军信息技术有限公司&#x27;</span>, <span class="string">&#x27;长期合作伙伴，主营产品：不锈钢厨具等&#x27;</span>, <span class="string">&#x27;陈女士&#x27;</span>, <span class="string">&#x27;13098992113&#x27;</span>, <span class="string">&#x27;江苏省南京市浦口区浦口大道1号新城总部大厦A座903室&#x27;</span>, <span class="string">&#x27;025-86223345&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2013-03-25 16:52:07&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_provider` <span class="keyword">VALUES</span> (<span class="string">&#x27;11&#x27;</span>, <span class="string">&#x27;GZ_GYS003&#x27;</span>, <span class="string">&#x27;广州市白云区美星五金制品厂&#x27;</span>, <span class="string">&#x27;长期合作伙伴，主营产品：海绵床垫、坐垫、靠垫、海绵枕头、头枕等&#x27;</span>, <span class="string">&#x27;梁天&#x27;</span>, <span class="string">&#x27;13562276775&#x27;</span>, <span class="string">&#x27;广州市白云区钟落潭镇福龙路20号&#x27;</span>, <span class="string">&#x27;020-85542231&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-12-21 06:12:17&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_provider` <span class="keyword">VALUES</span> (<span class="string">&#x27;12&#x27;</span>, <span class="string">&#x27;BJ_GYS004&#x27;</span>, <span class="string">&#x27;北京隆盛日化科技&#x27;</span>, <span class="string">&#x27;长期合作伙伴，主营产品：日化环保清洗剂，家居洗涤专卖、洗涤用品网、墙体除霉剂、墙面霉菌清除剂等&#x27;</span>, <span class="string">&#x27;孙欣&#x27;</span>, <span class="string">&#x27;13689865678&#x27;</span>, <span class="string">&#x27;北京市大兴区旧宫&#x27;</span>, <span class="string">&#x27;010-35576786&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2014-11-21 12:51:11&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_provider` <span class="keyword">VALUES</span> (<span class="string">&#x27;13&#x27;</span>, <span class="string">&#x27;SD_GYS001&#x27;</span>, <span class="string">&#x27;山东豪克华光联合发展有限公司&#x27;</span>, <span class="string">&#x27;长期合作伙伴，主营产品：洗衣皂、洗衣粉、洗衣液、洗洁精、消杀类、香皂等&#x27;</span>, <span class="string">&#x27;吴洪转&#x27;</span>, <span class="string">&#x27;13245468787&#x27;</span>, <span class="string">&#x27;山东济阳济北工业区仁和街21号&#x27;</span>, <span class="string">&#x27;0531-53362445&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2015-01-28 10:52:07&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for smbms_role</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `smbms_role`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `smbms_role` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `roleCode` <span class="type">varchar</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;角色编码&#x27;</span>,</span><br><span class="line">  `roleName` <span class="type">varchar</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;角色名称&#x27;</span>,</span><br><span class="line">  `createdBy` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者&#x27;</span>,</span><br><span class="line">  `creationDate` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `modifyBy` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改者&#x27;</span>,</span><br><span class="line">  `modifyDate` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;修改时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">4</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_unicode_ci;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of smbms_role</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_role` <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;SMBMS_ADMIN&#x27;</span>, <span class="string">&#x27;系统管理员&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_role` <span class="keyword">VALUES</span> (<span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;SMBMS_MANAGER&#x27;</span>, <span class="string">&#x27;经理&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_role` <span class="keyword">VALUES</span> (<span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;SMBMS_EMPLOYEE&#x27;</span>, <span class="string">&#x27;普通员工&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-13 00:00:00&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Table structure for smbms_user</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `smbms_user`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `smbms_user` (</span><br><span class="line">  `id` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;主键ID&#x27;</span>,</span><br><span class="line">  `userCode` <span class="type">varchar</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户编码&#x27;</span>,</span><br><span class="line">  `userName` <span class="type">varchar</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户名称&#x27;</span>,</span><br><span class="line">  `userPassword` <span class="type">varchar</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户密码&#x27;</span>,</span><br><span class="line">  `gender` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;性别（1:女、 2:男）&#x27;</span>,</span><br><span class="line">  `birthday` <span class="type">date</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;出生日期&#x27;</span>,</span><br><span class="line">  `phone` <span class="type">varchar</span>(<span class="number">15</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;手机&#x27;</span>,</span><br><span class="line">  `address` <span class="type">varchar</span>(<span class="number">30</span>) <span class="keyword">COLLATE</span> utf8_unicode_ci <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;地址&#x27;</span>,</span><br><span class="line">  `userRole` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户角色（取自角色表-角色id）&#x27;</span>,</span><br><span class="line">  `createdBy` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者（userId）&#x27;</span>,</span><br><span class="line">  `creationDate` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `modifyBy` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新者（userId）&#x27;</span>,</span><br><span class="line">  `modifyDate` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB AUTO_INCREMENT<span class="operator">=</span><span class="number">16</span> <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_unicode_ci;</span><br><span class="line"></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="comment">-- Records of smbms_user</span></span><br><span class="line"><span class="comment">-- ----------------------------</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_user` <span class="keyword">VALUES</span> (<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;wen&#x27;</span>, <span class="string">&#x27;系统管理员&#x27;</span>, <span class="string">&#x27;123&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1997-01-01&#x27;</span>, <span class="string">&#x27;15200981234&#x27;</span>, <span class="string">&#x27;湖南省衡阳市蒸湘区南华大学&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2019-04-07 10:15:55&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_user` <span class="keyword">VALUES</span> (<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;hanlubiao&#x27;</span>, <span class="string">&#x27;韩路彪&#x27;</span>, <span class="string">&#x27;0000000&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1984-06-05&#x27;</span>, <span class="string">&#x27;18567542321&#x27;</span>, <span class="string">&#x27;北京市朝阳区北辰中心12号&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2014-12-31 19:52:09&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_user` <span class="keyword">VALUES</span> (<span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;zhanghua&#x27;</span>, <span class="string">&#x27;张华&#x27;</span>, <span class="string">&#x27;0000000&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1983-06-15&#x27;</span>, <span class="string">&#x27;13544561111&#x27;</span>, <span class="string">&#x27;北京市海淀区学院路61号&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2013-02-11 10:51:17&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_user` <span class="keyword">VALUES</span> (<span class="string">&#x27;7&#x27;</span>, <span class="string">&#x27;wangyang&#x27;</span>, <span class="string">&#x27;王洋&#x27;</span>, <span class="string">&#x27;0000000&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1982-12-31&#x27;</span>, <span class="string">&#x27;13444561124&#x27;</span>, <span class="string">&#x27;北京市海淀区西二旗辉煌国际16层&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2014-06-11 19:09:07&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_user` <span class="keyword">VALUES</span> (<span class="string">&#x27;8&#x27;</span>, <span class="string">&#x27;zhaoyan&#x27;</span>, <span class="string">&#x27;赵燕&#x27;</span>, <span class="string">&#x27;0000000&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1986-03-07&#x27;</span>, <span class="string">&#x27;18098764545&#x27;</span>, <span class="string">&#x27;北京市海淀区回龙观小区10号楼&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-21 13:54:07&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_user` <span class="keyword">VALUES</span> (<span class="string">&#x27;10&#x27;</span>, <span class="string">&#x27;sunlei&#x27;</span>, <span class="string">&#x27;孙磊&#x27;</span>, <span class="string">&#x27;0000000&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1981-01-04&#x27;</span>, <span class="string">&#x27;13387676765&#x27;</span>, <span class="string">&#x27;北京市朝阳区管庄新月小区12楼&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2015-05-06 10:52:07&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_user` <span class="keyword">VALUES</span> (<span class="string">&#x27;11&#x27;</span>, <span class="string">&#x27;sunxing&#x27;</span>, <span class="string">&#x27;孙兴&#x27;</span>, <span class="string">&#x27;0000000&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1978-03-12&#x27;</span>, <span class="string">&#x27;13367890900&#x27;</span>, <span class="string">&#x27;北京市朝阳区建国门南大街10号&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-11-09 16:51:17&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_user` <span class="keyword">VALUES</span> (<span class="string">&#x27;12&#x27;</span>, <span class="string">&#x27;zhangchen&#x27;</span>, <span class="string">&#x27;张晨&#x27;</span>, <span class="string">&#x27;0000000&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1986-03-28&#x27;</span>, <span class="string">&#x27;18098765434&#x27;</span>, <span class="string">&#x27;朝阳区管庄路口北柏林爱乐三期13号楼&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-08-09 05:52:37&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-04-14 14:15:36&#x27;</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_user` <span class="keyword">VALUES</span> (<span class="string">&#x27;13&#x27;</span>, <span class="string">&#x27;dengchao&#x27;</span>, <span class="string">&#x27;邓超&#x27;</span>, <span class="string">&#x27;0000000&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1981-11-04&#x27;</span>, <span class="string">&#x27;13689674534&#x27;</span>, <span class="string">&#x27;北京市海淀区北航家属院10号楼&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2016-07-11 08:02:47&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_user` <span class="keyword">VALUES</span> (<span class="string">&#x27;14&#x27;</span>, <span class="string">&#x27;yangguo&#x27;</span>, <span class="string">&#x27;杨过&#x27;</span>, <span class="string">&#x27;0000000&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;1980-01-01&#x27;</span>, <span class="string">&#x27;13388886623&#x27;</span>, <span class="string">&#x27;北京市朝阳区北苑家园茉莉园20号楼&#x27;</span>, <span class="string">&#x27;3&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2015-02-01 03:52:07&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `smbms_user` <span class="keyword">VALUES</span> (<span class="string">&#x27;15&#x27;</span>, <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;test&#x27;</span>, <span class="string">&#x27;111&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2019-04-16&#x27;</span>, <span class="string">&#x27;123456789&#x27;</span>, <span class="string">&#x27;南华大学&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2019-04-16 19:52:37&#x27;</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue框架引入JQuery与Bootstrap</title>
      <link href="/2022/04/05/Vue%E5%BC%95%E5%85%A5JQuery/"/>
      <url>/2022/04/05/Vue%E5%BC%95%E5%85%A5JQuery/</url>
      
        <content type="html"><![CDATA[<p>前言：总所周知，Bootstrap框架是依赖JQuery，但是Vue中又不内置JQuery，由此诞生出这篇笔记</p><h2 id="引入JQuery"><a href="#引入JQuery" class="headerlink" title="引入JQuery"></a>引入JQuery</h2><h3 id="npm安装JQuery"><a href="#npm安装JQuery" class="headerlink" title="npm安装JQuery"></a>npm安装JQuery</h3><p><code>npm i jquery -S</code></p><h3 id="配置vue-config-js"><a href="#配置vue-config-js" class="headerlink" title="配置vue.config.js"></a>配置vue.config.js</h3><p>在vue.config.js文件中（在vue 中没有这个文件需要手动创建在项目主目录下）写入以下代码进行配置：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> webpack = <span class="built_in">require</span>(<span class="string">&#x27;webpack&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    <span class="attr">chainWebpack</span>: <span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">        config.plugin(<span class="string">&#x27;provide&#x27;</span>).use(webpack.ProvidePlugin, [&#123;</span><br><span class="line">            <span class="attr">$</span>: <span class="string">&#x27;jquery&#x27;</span>,</span><br><span class="line">            <span class="attr">jquery</span>: <span class="string">&#x27;jquery&#x27;</span>,</span><br><span class="line">            <span class="attr">jQuery</span>: <span class="string">&#x27;jquery&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;window.jQuery&#x27;</span>: <span class="string">&#x27;jquery&#x27;</span></span><br><span class="line">        &#125;])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="在main-js中引入jQuery"><a href="#在main-js中引入jQuery" class="headerlink" title="在main.js中引入jQuery"></a>在main.js中引入jQuery</h3><p><code>import $ from &#39;jquery&#39;</code></p><h3 id="重启vue"><a href="#重启vue" class="headerlink" title="重启vue"></a>重启vue</h3><p><code>npm run serve</code></p><h3 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h3><p>网上很多教程提及到<code>webpack.base.conf.js</code>这个文件，但是最新版的vue模仿react实现零配置，所以<code>build / webpack.base.conf.js</code> 整个build文件夹都被隐藏。</p><p>因此，现在<code>webpack.base.conf.js</code>的真实路径：<code>node_modules/@vue/cli-service/webpack.config.js</code></p><h2 id="引入Bootstrap"><a href="#引入Bootstrap" class="headerlink" title="引入Bootstrap"></a>引入Bootstrap</h2><h3 id="npm安装Bootstrap"><a href="#npm安装Bootstrap" class="headerlink" title="npm安装Bootstrap"></a>npm安装Bootstrap</h3><p><code>npm install bootstrap@3</code></p><h3 id="复制Bootstrap核心文件"><a href="#复制Bootstrap核心文件" class="headerlink" title="复制Bootstrap核心文件"></a>复制Bootstrap核心文件</h3><p>复制<code>node_modules\bootstrap\dist</code>内的3个文件（css,fonts,js）到 <code>src\assets</code></p><h3 id="引入核心文件"><a href="#引入核心文件" class="headerlink" title="引入核心文件"></a>引入核心文件</h3><p>在<code>main.js</code>里引入：<code>import &#39;./assets/css/bootstrap.min.css&#39;</code>和<code>import &#39;./assets/js/bootstrap.min&#39;</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>服务器管理笔记</title>
      <link href="/2022/03/30/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/03/30/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AE%A1%E7%90%86%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h1><h2 id="文件结构解释"><a href="#文件结构解释" class="headerlink" title="文件结构解释"></a>文件结构解释</h2><h3 id="data"><a href="#data" class="headerlink" title="/data"></a>/data</h3><ul><li><h4 id="tmp-安装包"><a href="#tmp-安装包" class="headerlink" title="/tmp  安装包"></a>/tmp  安装包</h4></li><li><h4 id="service-环境"><a href="#service-环境" class="headerlink" title="/service  环境"></a>/service  环境</h4></li><li><h4 id="gitee-代码"><a href="#gitee-代码" class="headerlink" title="/gitee  代码"></a>/gitee  代码</h4></li><li><h4 id="app-项目部署"><a href="#app-项目部署" class="headerlink" title="/app  项目部署"></a>/app  项目部署</h4></li><li><h4 id="docker-容器"><a href="#docker-容器" class="headerlink" title="/docker  容器"></a>/docker  容器</h4></li></ul><h2 id="进入数据库"><a href="#进入数据库" class="headerlink" title="进入数据库"></a>进入数据库</h2><ol><li><code>cd docker</code></li><li><code>docker exec -it mysql env LANG=C.UTF-8 bash</code>  启动mysql服务</li><li><code>mysql -u root -p</code> 连接数据库 <code>-u</code>是·用户名，<code>-p</code>是密码（下一行再输入）</li></ol><h2 id="打包项目"><a href="#打包项目" class="headerlink" title="打包项目"></a>打包项目</h2><p>假设项目名为abc</p><ol><li>将代码从仓库克隆下来到<code>/gitee/abc</code></li><li><code>cd /gitee/abc</code></li><li><code>mvn install</code> 开始打包</li><li>打包完成后，存放在<code>/gitee/abc/target</code>里，<code>***.war</code>就是打包文件</li></ol><h2 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h2><ol><li><p><code>cp /data/gitee/abc/target/***.war /data/app/abc/***.war</code>  将打包好的项目复制到项目部署文件</p></li><li><p><code>cd /data/app/charity_benefit/</code> </p></li><li><p><code>nohup java -jar ***.war &amp;</code> 启动！（nohup和&amp;用来表示本命令需要在后台执行，这样退出命令行程序后，java程序也不会停止。）</p></li></ol><h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><h2 id="存放项目代码"><a href="#存放项目代码" class="headerlink" title="存放项目代码"></a>存放项目代码</h2><p>在vue项目中执行<code>vue run build</code>，生成的代码在dist里，复制里面的文件到服务器<code>/data/app/**</code>里（不要整个dist文件夹复制）</p><h2 id="配置访问路径"><a href="#配置访问路径" class="headerlink" title="配置访问路径"></a>配置访问路径</h2><p><code>cd /etc/nginx</code></p><p><code>vim nginx.conf</code></p><p>点击 <strong>i键</strong> 进入insert模式，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> server &#123;</span><br><span class="line">        listen       80 default_server;</span><br><span class="line">        listen       [::]:80 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">        # Load configuration files for the default server block.</span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">                root /data/app/fs-donate-h5;</span><br><span class="line">                index index.html;</span><br><span class="line">        &#125;</span><br><span class="line">        location / &#123;</span><br><span class="line">                root /data/app/month-donate;</span><br><span class="line">                index index.html;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>listen 是监听的端口号</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">        root /data/app/month-donate; //前端项目存放地址</span><br><span class="line">        index index.html; //默认打开的首页html</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>点击 <strong>ESC</strong> 退出insert模式，输入<code>:wq</code>保存更改并退出</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/03/14/%E4%BA%A7%E5%93%81%E5%8F%82%E6%95%B0%E5%AD%97%E6%AE%B5/"/>
      <url>/2022/03/14/%E4%BA%A7%E5%93%81%E5%8F%82%E6%95%B0%E5%AD%97%E6%AE%B5/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="title：产品参数字段记录"><a href="#title：产品参数字段记录" class="headerlink" title="title：产品参数字段记录"></a>title：产品参数字段记录</h2><ul><li>分类</li><li>名称、型号</li><li>尺寸重量：高、宽、厚、重                                                                                     5</li><li>存储：RAM容量+ROM容量、Ram规格、Rom规格                                            4</li><li>显示：尺寸、屏占比、分辨率、刷新率、触控采样率、像素密度                      7</li><li>摄像头：后置、前置                                                                                               3</li><li>处理平台：CPU、GPU                                                                                            3</li><li>电池：电池容量、快充                                                                                          3</li><li>感应器</li><li>数据功能：是否支持双卡、SIM卡类型、WLAN功能、蓝牙、数据接口、耳机插孔、NFC     8  </li><li>定位功能：卫星定位、双频双天线定位、其他                                                   4</li></ul><p>English:</p><ul><li>classification</li><li>goodName、model</li><li>尺寸重量：height、width、thickness、weight</li><li>存储：ram_rom、ramType、romSpe</li><li>显示：screenSize、screenRatio、resolution、refreshRate、touchRate、pixelDensity</li><li>摄像头：cameraRear、cameraFront</li><li>处理平台：cpu、gpu</li><li>电池：battery、fastCharge</li><li>sensors</li><li>数据功能：isDoubleSIM、type-SIM、wlan、bluetooth、interface、earphoneJack、nfc</li><li>定位功能：gps、frequencyAntenna、otherLocation</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序移植HTML笔记</title>
      <link href="/2022/03/10/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%A7%BB%E6%A4%8DHTML%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/03/10/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%A7%BB%E6%A4%8DHTML%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="rpx转px-rem问题"><a href="#rpx转px-rem问题" class="headerlink" title="rpx转px/rem问题"></a>rpx转px/rem问题</h2><p>由于微信小程序使用rpx作为像素单位，rpx可根据设备分辨率动态调整实际的px值</p><p>移植小程序rpx最好使用rem作目标转换，rem是根据当页面的行高来设置，也会与屏幕分辨率有一丁点关系（但是实际效果不佳）。</p><p>使用vscode里的<code>px to rem &amp; rpx (cssrem)</code>插件，快速将rpx转为rem，再根据实际情况调整值（一般转换出来rem的值特别小，*10倍才差不多）</p><h2 id="HTML标签转换问题"><a href="#HTML标签转换问题" class="headerlink" title="HTML标签转换问题"></a>HTML标签转换问题</h2><p><code>&lt;view&gt;</code> -&gt; <code>&lt;div&gt;</code></p><p><code>&lt;image&gt;</code> -&gt; <code>&lt;img&gt;</code> （记得在CSS文件里也要改）</p><p><code>&lt;navigator&gt;</code> -&gt; <code>&lt;a&gt;</code></p><p><code>&lt;text&gt;</code> -&gt; <code>&lt;span&gt;</code> （这个不一定转换）</p><p><code>&lt;page&gt;</code> -&gt; <code>&lt;body&gt;</code>或body下第一个div （特指在CSS里改）</p><h2 id="通过JavaScript-实现各页面互相传值"><a href="#通过JavaScript-实现各页面互相传值" class="headerlink" title="通过JavaScript 实现各页面互相传值"></a>通过JavaScript 实现各页面互相传值</h2><h3 id="通过URL传值"><a href="#通过URL传值" class="headerlink" title="通过URL传值"></a>通过URL传值</h3><p>以下JS函数用于获取url参数:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getQueryVariable</span>(<span class="params">variable</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       <span class="keyword">var</span> query = <span class="built_in">window</span>.location.search.substring(<span class="number">1</span>);</span><br><span class="line">       <span class="keyword">var</span> vars = query.split(<span class="string">&quot;&amp;&quot;</span>);</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;vars.length;i++) &#123;</span><br><span class="line">               <span class="keyword">var</span> pair = vars[i].split(<span class="string">&quot;=&quot;</span>);</span><br><span class="line">               <span class="keyword">if</span>(pair[<span class="number">0</span>] == variable)&#123;<span class="keyword">return</span> pair[<span class="number">1</span>];&#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span>(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="使用实例"><a href="#使用实例" class="headerlink" title="使用实例"></a>使用实例</h3><p>url 实例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.runoob.com/index.php?id=1&amp;image=awesome.jpg</span><br></pre></td></tr></table></figure><p>调用 <strong>getQueryVariable(“id”)</strong> 返回 1。</p><p>调用 <strong>getQueryVariable(“image”)</strong> 返回 “awesome.jpg”。</p><h2 id="只允许手机端打开页面，禁止PC端"><a href="#只允许手机端打开页面，禁止PC端" class="headerlink" title="只允许手机端打开页面，禁止PC端"></a>只允许手机端打开页面，禁止PC端</h2><p>有此需求的页面，在<code>body</code>标签加上 <code>onload =&quot; checkDevice()&quot;</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;noMobile&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pc&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;noMobileContainer&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">svg</span> <span class="attr">t</span>=<span class="string">&quot;1646900706993&quot;</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 1024 1024&quot;</span> <span class="attr">version</span>=<span class="string">&quot;1.1&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">p-id</span>=<span class="string">&quot;2097&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">path</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">d</span>=<span class="string">&quot;M512 0C229.254842 0 0.010628 229.244214 0.010628 511.989372c0 282.766414 229.244214 512.010628 511.989372 512.010628 282.766414 0 511.989372-229.244214 511.989372-512.010628C1024.010628 229.244214 794.78767 0 512 0zM580.146217 804.23589l-136.271178 0L443.875039 687.626362l136.271178 0L580.146217 804.23589zM580.146217 591.443695l-136.271178 0L443.875039 219.76411l136.271178 0L580.146217 591.443695z&quot;</span></span></span><br><span class="line"><span class="tag">                    <span class="attr">p-id</span>=<span class="string">&quot;2098&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#1296db&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;noMobileTip&quot;</span>&gt;</span>请使用手机设备打开本网站<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;mobile&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-id">#pc</span>,</span></span><br><span class="line"><span class="css"><span class="selector-id">#mobile</span> &#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">display</span>: none;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.noMobileContainer</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">width</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin</span>: <span class="number">50px</span> auto;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"><span class="selector-class">.noMobileTip</span>&#123;</span></span><br><span class="line"><span class="css">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span></span><br><span class="line"><span class="css">    <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">    <span class="attribute">color</span>: black;</span></span><br><span class="line"><span class="css">    <span class="attribute">line-height</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="css">&#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">    <span class="function"><span class="keyword">function</span> <span class="title">checkDevice</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">        <span class="comment">// 对浏览器的UserAgent进行正则匹配，不含有微信独有标识的则为其他浏览器</span></span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> useragent = navigator.userAgent;</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> pc = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;pc&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">var</span> mobile = <span class="built_in">document</span>.getElementById(<span class="string">&#x27;mobile&#x27;</span>);</span></span><br><span class="line"><span class="javascript">        <span class="keyword">if</span> (useragent.match(<span class="regexp">/Mobile/i</span>) != <span class="string">&#x27;Mobile&#x27;</span>) &#123;</span></span><br><span class="line"><span class="javascript">            pc.style.display = <span class="string">&quot;block&quot;</span>;</span></span><br><span class="line"><span class="javascript">            <span class="comment">// undefined</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 这里警告框会阻塞当前页面继续加载</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// alert(&#x27;已禁止本次访问:您必须使用微信内置浏览器访问本页面！&#x27;+ useragent);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// 以下代码是用javascript强行关闭当前页面</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// var opened = window.open(&#x27;about: blank&#x27;, &#x27;_self&#x27;);</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// opened.opener = null;</span></span></span><br><span class="line"><span class="javascript">            <span class="comment">// opened.close();</span></span></span><br><span class="line"><span class="javascript">        &#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="javascript">            mobile.style.display = <span class="string">&quot;block&quot;</span>;</span></span><br><span class="line"><span class="javascript">            openStatus();</span></span><br><span class="line"><span class="javascript">        &#125;</span></span><br><span class="line"><span class="javascript">    &#125;</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="使用UserAgent判断目前设备类型（电脑-手机-微信内置浏览器）"><a href="#使用UserAgent判断目前设备类型（电脑-手机-微信内置浏览器）" class="headerlink" title="使用UserAgent判断目前设备类型（电脑/手机/微信内置浏览器）"></a>使用UserAgent判断目前设备类型（电脑/手机/微信内置浏览器）</h3><p>手机匹配关键字：Mobile</p><p>微信浏览器匹配关键字：MicroMessage</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>后台管理系统笔记</title>
      <link href="/2022/02/27/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/02/27/%E5%90%8E%E5%8F%B0%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="后台管理系统"><a href="#后台管理系统" class="headerlink" title="后台管理系统"></a>后台管理系统</h2><p>​    某个后台管理系统，包含页面编辑、商品管理、用户管理、订单等等信息。</p><h2 id="技术栈"><a href="#技术栈" class="headerlink" title="技术栈"></a>技术栈</h2><p>​    Vue + Vue-Router + VueX + ElementUI + Axios + Express.js + 第三方库</p><h2 id="项目准备"><a href="#项目准备" class="headerlink" title="项目准备"></a>项目准备</h2><ol><li>xammp (apache, mysql)</li><li>iconfont</li></ol><h2 id="关于同步可能会出现的错误"><a href="#关于同步可能会出现的错误" class="headerlink" title="关于同步可能会出现的错误"></a>关于同步可能会出现的错误</h2><ol><li><p>OneDrive同步项目去其他电脑上打开可能会报<code>&#39;vue-cli-service&#39; 不是内部或外部命令，也不是可运行的程序</code>或者其他<code>code ENOENTE</code>之类的错误</p><p>解决办法:（记得进入项目文件夹里操作）</p><ol><li><code>npm uninstall @vue/cli-service </code> 卸载vue脚手架</li><li><code>npm install -g @vue/cli-service</code> 重装脚手架（此步骤也适用于新电脑未装Vue导致无法识别vue命令）</li></ol></li><li><p> 又因为上面的原因，可能导致服务端也会出问题，无法代理做跨域请求</p></li></ol><p>   解决办法：进入<code>server</code>文件夹，全局重装nodemon：<code>npm install nodemon -g</code></p><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><p>全局安装vue-cli</p><p><code>npm install -g @vue/cli@4</code></p><h2 id="形目搭建"><a href="#形目搭建" class="headerlink" title="形目搭建"></a>形目搭建</h2><ol><li><p><code>vue create XXX</code> </p><p>删除views里的所有文件  home.vue  about.vue</p><p>删除路由index.js里有关views里两个文件的路由</p><p>删除App.vue里<code>&lt;div id=&quot;app&quot;&gt;</code>内部的东西</p><p>创建assets/css 和 assets/images</p><hr><p>before下一步，记得将终端路径进入到新创的项目文件夹内！！</p></li><li><p><code>npm i axios -S</code></p></li><li><p><code>vue add element</code>—(按需导入)</p></li><li><p>前往 <a href="https://element.eleme.cn/#/zh-CN/component/quickstart">https://element.eleme.cn/#/zh-CN/component/quickstart</a> 将按需引入全部复制到plugins/element.js 中</p><p>删除App.vue里自动添加的东西</p></li><li><p>初始化css  reset.css</p><p>reset.css中可引入iconfont</p></li><li><p>main.js中导入reset.css</p></li></ol><h2 id="页面布局搭建"><a href="#页面布局搭建" class="headerlink" title="页面布局搭建"></a>页面布局搭建</h2><ol><li>登录界面与布局界面是同级，因此分别创建两个页面后，在路由<code>router/index.js</code>内导入两个页面，并写好路由</li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Layout <span class="keyword">from</span> <span class="string">&#x27;../views/Layout/index.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Login <span class="keyword">from</span> <span class="string">&#x27;../views/Login/Login.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: Layout,</span><br><span class="line">  &#125;, &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;Login&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: Login</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>   在App.vue内写入路由出口</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id=&quot;app&quot;&gt;</span><br><span class="line">    &lt;router-view/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li><p>在Layout内增加菜单栏和内容页（左右分栏）</p><p><code>Layout/index.vue</code>内引入两个页面，当成组件来使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;layout&quot;&gt;</span><br><span class="line">    &lt;!-- 左侧 --&gt;</span><br><span class="line">    &lt;Menu class=&quot;menu&quot; /&gt;</span><br><span class="line">    &lt;!-- 右侧 --&gt;</span><br><span class="line">    &lt;Content class=&quot;content&quot; /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Menu from &quot;./Menu.vue&quot;;</span><br><span class="line">import Content from &quot;./content.vue&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    Menu,</span><br><span class="line">    Content,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;less&#x27; scoped&gt;</span><br><span class="line">.layout &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  .menu &#123;</span><br><span class="line">    width: 200px;</span><br><span class="line">    min-height: 500px;</span><br><span class="line">    background: rgb(48, 65, 86);</span><br><span class="line">    position: fixed;</span><br><span class="line">    top: 0;</span><br><span class="line">    bottom: 0;</span><br><span class="line">  &#125;</span><br><span class="line">  .content &#123;</span><br><span class="line">    margin-left: 200px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>设置CSS，使用less语言，用flex布局，menu固定一个宽度，content用<code> margin-left:200px</code>撑开，避免被menu遮住（开发前期是这样操作，后期要移除固定宽度，实现折叠功能）</p></li><li><p>左侧导航栏注意点：</p><ol><li>（/Layout/index.vue）使用<code>position: fixed;</code> <code>top: 0;</code> <code> bottom: 0;</code> 将整个导航栏撑高，只需在此设置<code>background-color</code>即可</li><li>（/Layout/Menu.vue）由于element的.el-menu默认会有1px的border-right，因此要设置为0，才能避免看起来导航栏宽度少了1px</li><li>（/Layout/Menu.vue）选中栏的背景色必须加<code>!important</code>才能生效</li><li>（/Layout/Menu.vue）如何导航栏有子栏，对应的父栏要做重定向，指向第一个子栏的页面</li></ol></li><li><p>右侧内容页，顶部区域注意点：</p><ol><li>（/Layout/index.vue）.layout使用<code>display:flex</code>布局，<code>.cntent</code>设置<code>flex:1</code>才能实现宽度撑满整个屏幕，否则内容有多少就只有多宽</li><li>（/Layout/index.vue）用<code> margin-left:200px</code>撑开，避免被menu遮住（后期需要移除此属性）</li></ol></li><li><p>导航栏放置垂直菜单</p><p>（/Layout/Menu.vue）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-menu</span><br><span class="line">      default-active=&quot;/&quot;</span><br><span class="line">      class=&quot;el-menu-vertical-demo&quot;</span><br><span class="line">      @open=&quot;handleOpen&quot;</span><br><span class="line">      @close=&quot;handleClose&quot;</span><br><span class="line">      background-color=&quot;rgb(48, 65, 86)&quot;</span><br><span class="line">      text-color=&quot;rgb(191,203,217)&quot;</span><br><span class="line">      active-text-color=&quot;rgb(64,158,255)&quot;</span><br><span class="line">      router</span><br><span class="line">      :collapse=&quot;isCollapse&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-menu-item disabled&gt;</span><br><span class="line">        &lt;span slot=&quot;title&quot;&gt;OPPO 后台管理系统&lt;/span&gt;</span><br><span class="line">      &lt;/el-menu-item&gt;</span><br><span class="line">      &lt;el-menu-item index=&quot;/&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;span slot=&quot;title&quot;&gt;仪表盘&lt;/span&gt;</span><br><span class="line">      &lt;/el-menu-item&gt;</span><br><span class="line">      &lt;el-menu-item index=&quot;/frontpage&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;span slot=&quot;title&quot;&gt;首页管理&lt;/span&gt;</span><br><span class="line">      &lt;/el-menu-item&gt;</span><br><span class="line">    &lt;/el-menu&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props:[&#x27;isCollapse&#x27;],</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      // isCollapse: false,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleOpen(key, keyPath) &#123;</span><br><span class="line">      console.log(key, keyPath);</span><br><span class="line">    &#125;,</span><br><span class="line">    handleClose(key, keyPath) &#123;</span><br><span class="line">      console.log(key, keyPath);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;less&#x27; scoped&gt;</span><br><span class="line">.el-menu &#123;</span><br><span class="line">  border-right: 0;</span><br><span class="line">  .is-active &#123;</span><br><span class="line">    background: rgb(31, 45, 61) !important;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">  .el-menu-vertical-demo:not(.el-menu--collapse) &#123;</span><br><span class="line">    width: 200px;</span><br><span class="line">    min-height: 400px;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li>el-menu内router属性使点击菜单，右侧内容跳转到对应的页面</li><li>collapse是否折叠</li></ul></li></ol><h3 id="6-折叠功能"><a href="#6-折叠功能" class="headerlink" title="6. 折叠功能"></a>6. 折叠功能</h3><p>   此功能需要3个页面的共同配合，注意页面之间参数的传递！注意<strong>理解</strong>！</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><ol><li><p>内容页顶部有向左向右推的icon，点击icon触发<code>changeMenu()</code>（意思是要折叠），发送<code>this.$emit(&quot;changeCollapse&quot;);</code>到父组件<code>index.vue</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;i v-if=&quot;!isCollapse&quot;  @click=&quot;changeMenu&quot; class=&quot;iconfont icon-right-indent&quot;&gt;&lt;/i&gt;</span><br><span class="line">&lt;i v-else @click=&quot;changeMenu&quot; class=&quot;iconfont icon-left-indent&quot;&gt;&lt;/i&gt;</span><br></pre></td></tr></table></figure></li><li><p>父组件<code>index.vue</code>的内容子组件<code>@ changeCollapse =&quot;changeCollapse&quot;</code>接收事件，将父组件内默认为<code>false</code>的<code>isCollapse</code>取反（意为将左侧导航栏折叠），导航栏通过<code>: isCollapse =&quot;isCollapse&quot;</code> 将<code>isCollapse</code>的值(true)传入Menu子组件内</p></li><li><p>Menu子组件内，通过<code>props:[&#39;isCollapse&#39;],</code>接收父组件传入的值(true)，<code>el-menu</code>的<code>collapse</code>属性与<code>isCollapse</code>进行绑定，<code>: collapse =&quot;isCollapse&quot;</code> ，导航栏完成折叠。</p></li><li><p>记得添加折叠对应的样式：</p><p>下面这个的意思是：在没有被collapse折叠时，左侧导航栏的宽度为200px（Menu.vue）</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.el-menu-vertical-demo</span><span class="selector-pseudo">:not</span>(.el-menu--collapse) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">400px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>折叠后的样式，ElementUI已自带，无需再写样式（<code>width: 64px</code>）;</p><p>由于左侧折叠后，原本的位置就会留空，需要右侧内容页填充，即在父组件（index.vue）内设置右侧内容子组件为<code>margin-left: 64px;</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;Content</span><br><span class="line">      class=&quot;content&quot;</span><br><span class="line">      :class=&quot;&#123; isActive: isCollapse &#125;&quot;</span><br><span class="line">      @changeCollapse=&quot;changeCollapse&quot;</span><br><span class="line">      :isCollapse=&quot;isCollapse&quot;</span><br><span class="line">    /&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;less&#x27; scoped&gt;</span><br><span class="line">    content &#123;</span><br><span class="line">    margin-left: 200px;</span><br><span class="line">    flex: 1;</span><br><span class="line">  &#125;</span><br><span class="line">   .isActive&#123;</span><br><span class="line">    margin-left: 64px;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>此处类进行了绑定，通过<code>isCollapse</code>的值来决定到底用哪个样式</p></li><li><p>到目前为止，剩下最后一个问题，右侧顶部区域有两个icon，分别是向左推和向右推，需要实现的效果为，只有一个icon显示，默认显示向左推，点击后，向右推icon显示，向左推icon隐藏，反之如此。</p><p>这里只需在index.vue传递<code>isCollapse</code>的值给Content.vue子组件，子组件接收后，通过<code>isCollapse</code>的值来判断到底显示哪个icon（用 <code>v-if</code> 和 <code>v-else</code>）</p></li></ol><p>   附最终代码</p><p>   index.vue</p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;layout&quot;&gt;</span><br><span class="line">    &lt;!-- 左侧 --&gt;</span><br><span class="line">    &lt;Menu class=&quot;menu&quot; :isCollapse=&quot;isCollapse&quot; /&gt;</span><br><span class="line">    &lt;!-- 右侧 --&gt;</span><br><span class="line">    &lt;Content</span><br><span class="line">      class=&quot;content&quot;</span><br><span class="line">      :class=&quot;&#123; isActive: isCollapse &#125;&quot;</span><br><span class="line">      @changeCollapse=&quot;changeCollapse&quot;</span><br><span class="line">      :isCollapse=&quot;isCollapse&quot;</span><br><span class="line">    /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import Menu from &quot;./Menu.vue&quot;;</span><br><span class="line">import Content from &quot;./Content.vue&quot;;</span><br><span class="line">export default &#123;</span><br><span class="line">  components: &#123;</span><br><span class="line">    Menu,</span><br><span class="line">    Content,</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      isCollapse: false,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    changeCollapse() &#123;</span><br><span class="line">      this.isCollapse = !this.isCollapse;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;less&#x27; scoped&gt;</span><br><span class="line">.layout &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">  .menu &#123;</span><br><span class="line">    // width: 200px;</span><br><span class="line">    min-height: 500px;</span><br><span class="line">    background: rgb(48, 65, 86);</span><br><span class="line">    position: fixed;</span><br><span class="line">    top: 0;</span><br><span class="line">    bottom: 0;</span><br><span class="line">  &#125;</span><br><span class="line">  .content &#123;</span><br><span class="line">    margin-left: 200px;</span><br><span class="line">    flex: 1;</span><br><span class="line">  &#125;</span><br><span class="line">  .isActive&#123;</span><br><span class="line">    margin-left: 64px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>   Menu.vue</p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-menu</span><br><span class="line">      default-active=&quot;/&quot;</span><br><span class="line">      class=&quot;el-menu-vertical-demo&quot;</span><br><span class="line">      @open=&quot;handleOpen&quot;</span><br><span class="line">      @close=&quot;handleClose&quot;</span><br><span class="line">      background-color=&quot;rgb(48, 65, 86)&quot;</span><br><span class="line">      text-color=&quot;rgb(191,203,217)&quot;</span><br><span class="line">      active-text-color=&quot;rgb(64,158,255)&quot;</span><br><span class="line">      router</span><br><span class="line">      :collapse=&quot;isCollapse&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-menu-item disabled&gt;</span><br><span class="line">        &lt;span slot=&quot;title&quot;&gt;OPPO 后台管理系统&lt;/span&gt;</span><br><span class="line">      &lt;/el-menu-item&gt;</span><br><span class="line">      &lt;el-menu-item index=&quot;/&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;span slot=&quot;title&quot;&gt;仪表盘&lt;/span&gt;</span><br><span class="line">      &lt;/el-menu-item&gt;</span><br><span class="line">      &lt;el-menu-item index=&quot;/frontpage&quot;&gt;</span><br><span class="line">        &lt;i class=&quot;el-icon-menu&quot;&gt;&lt;/i&gt;</span><br><span class="line">        &lt;span slot=&quot;title&quot;&gt;首页管理&lt;/span&gt;</span><br><span class="line">      &lt;/el-menu-item&gt;</span><br><span class="line">    &lt;/el-menu&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: [&quot;isCollapse&quot;],</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      // isCollapse: false,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleOpen(key, keyPath) &#123;</span><br><span class="line">      console.log(key, keyPath);</span><br><span class="line">    &#125;,</span><br><span class="line">    handleClose(key, keyPath) &#123;</span><br><span class="line">      console.log(key, keyPath);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;less&#x27; scoped&gt;</span><br><span class="line">.el-menu &#123;</span><br><span class="line">  border-right: 0;</span><br><span class="line">  .is-active &#123;</span><br><span class="line">    background: rgb(31, 45, 61) !important;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">.el-menu-vertical-demo:not(.el-menu--collapse) &#123;</span><br><span class="line">  width: 200px;</span><br><span class="line">  min-height: 400px;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>   Content.vue</p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;header&quot;&gt;</span><br><span class="line">      &lt;i v-if=&quot;!isCollapse&quot;  @click=&quot;changeMenu&quot; class=&quot;iconfont icon-right-indent&quot;&gt;&lt;/i&gt;</span><br><span class="line">      &lt;i v-else @click=&quot;changeMenu&quot; class=&quot;iconfont icon-left-indent&quot;&gt;&lt;/i&gt;</span><br><span class="line">      顶部</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">      &lt;router-view /&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: [&quot;isCollapse&quot;],</span><br><span class="line">  methods: &#123;</span><br><span class="line">    changeMenu() &#123;</span><br><span class="line">      this.$emit(&quot;changeCollapse&quot;);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;less&quot; scoped&gt;</span><br><span class="line">.header &#123;</span><br><span class="line">  line-height: 56px;</span><br><span class="line">  height: 56px;</span><br><span class="line">  background: skyblue;</span><br><span class="line">  color: white;</span><br><span class="line">  .iconfont &#123;</span><br><span class="line">    font-size: 24px;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="后台服务"><a href="#后台服务" class="headerlink" title="后台服务"></a>后台服务</h2><ol><li><code>npm i express -S</code></li><li><code>npm install nodemon -S</code></li></ol><h2 id="路由搭建"><a href="#路由搭建" class="headerlink" title="路由搭建"></a>路由搭建</h2><pre><code> 1. 页面布局配置 同级登录界面 2. </code></pre><p>​    </p><hr><h2 id="动态数据"><a href="#动态数据" class="headerlink" title="动态数据"></a>动态数据</h2><p>此部分在开发中应倒序进行，此顺序只是整理思路</p><p>下面的所有操作默认已安装好所需要的插件（axios,nodemon,mysql,express等等）</p><ol><li><p>具体页面发起请求（Goods.vue）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      input: &quot;&quot;,</span><br><span class="line">      tableData: [],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    /**</span><br><span class="line">     * 编辑操作</span><br><span class="line">     */</span><br><span class="line">    handleEdit() &#123;&#125;,</span><br><span class="line">    /**</span><br><span class="line">     * 删除操作</span><br><span class="line">     */</span><br><span class="line">    handleDelete() &#123;&#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  //生命周期函数</span><br><span class="line">  created() &#123;</span><br><span class="line">    this.$api</span><br><span class="line">      .getGoodsList(&#123;</span><br><span class="line">        page: 1,</span><br><span class="line">      &#125;)</span><br><span class="line">      .then((res) =&gt; &#123;</span><br><span class="line">        console.log(res.data);</span><br><span class="line">        if (res.data.status === 200) &#123;</span><br><span class="line">          this.tableData = res.data.data; //数据列表</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>注意<code>created()</code> 里的<code>.getGoodsList</code></p></li><li><p>api请求方法   (/api/index.js)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 请求方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&quot;axios&quot;</span></span><br><span class="line"><span class="keyword">import</span> base <span class="keyword">from</span> <span class="string">&quot;./base&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> api = &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 商品列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">getGoodsList</span>(<span class="params">params</span>)</span> &#123; <span class="comment">//&#123;page:xx&#125;</span></span><br><span class="line">        <span class="keyword">return</span> axios.get(base.goodsList, &#123;</span><br><span class="line">            params</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="function"><span class="title">getTest</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> axios.get(base.test)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> api</span><br></pre></td></tr></table></figure><p>这里的<code>getGoodList()</code>是具体的请求方法，传值到对应的接口（page：1，第一页）</p><p>注意这里的<code>base</code></p><p>记得在<code>main.js</code>导入api的包</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> api <span class="keyword">from</span> <span class="string">&quot;./api/index&quot;</span></span><br><span class="line"></span><br><span class="line">Vue.prototype.$api=api;</span><br></pre></td></tr></table></figure></li><li><p>接口路径 (/api/base.js)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 接口路径配置：</span></span><br><span class="line"><span class="comment"> * 一般文件目录：base.js index.js</span></span><br><span class="line"><span class="comment"> * 但是公司不一定</span></span><br><span class="line"><span class="comment"> *      config</span></span><br><span class="line"><span class="comment"> *          login index.js</span></span><br><span class="line"><span class="comment"> *      index.js</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> base = &#123;</span><br><span class="line">    <span class="attr">test</span>:<span class="string">&#x27;/api/api/test&#x27;</span>,<span class="comment">//测试</span></span><br><span class="line">    <span class="attr">goodsList</span>: <span class="string">&#x27;/api/api/goodsList&#x27;</span>,<span class="comment">//商品列表</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> base;</span><br></pre></td></tr></table></figure><p>注意这里的<code>/api/api/goodsList</code> ，因为需要跨域请求，所以多了一个<code>/api</code></p></li><li><p>跨域请求 (vue.config.js)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="attr">devServer</span>: &#123;</span><br><span class="line">    <span class="attr">proxy</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;api&#x27;</span>: &#123;     <span class="comment">//这里是公共部分，在调用接口时后面接不相同的部分，</span></span><br><span class="line">        <span class="attr">target</span>: <span class="string">&#x27;http://localhost:9090/&#x27;</span>, <span class="comment">//这里写的是访问接口的域名和端口号</span></span><br><span class="line">        <span class="attr">changeOrigin</span>: <span class="literal">true</span>, <span class="comment">// 必须加上这个才能跨域请求</span></span><br><span class="line">        <span class="attr">pathRewrite</span>: &#123;  <span class="comment">// 重命名</span></span><br><span class="line">          <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    因为在开发过程中，一台电脑需要充当客户机和服务机，所以发送请求到端口需要跨域，例如客户机（<code>localhost:8080</code>）、服务机（<code>localhost:9090</code>），客户机请求服务机上的接口由于端口已变，相当于跨域，所以需要做代理，将所有由<code>8080</code>发出的请求代理成<code>9090</code>来接收。</p><p>​    在浏览器通过开发者工具可以看到请求的URL为<code>http://localhost:8080/api/api/goodsList?page=1</code> ,因为做了代理才会有2个<code>/api</code>(2个/api 的问题可以自行解决)</p></li><li><p>路由接口  (/server/router.js)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入express框架</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> router = express.Router()</span><br><span class="line"><span class="comment">// 导入数据库 sqlF n(&#x27;sql&#x27;,[],res=&gt;&#123;&#125;)</span></span><br><span class="line"><span class="keyword">const</span> sqlFn = <span class="built_in">require</span>(<span class="string">&#x27;./mysql&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试接口</span></span><br><span class="line">router.get(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    res.send(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 路由接口</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 商品列表：获取分页&#123;total:&#x27;&#x27;,arr:[&#123;&#125;,&#123;&#125;,&#123;&#125;],pagesize:8,&#125;</span></span><br><span class="line"><span class="comment"> * 参数:page 页码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.get(<span class="string">&#x27;/goodsList&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> page = req.query.page || <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> sqlLen = <span class="string">&quot;select * from project where id&quot;</span>;</span><br><span class="line">    sqlFn(sqlLen, <span class="literal">null</span>, <span class="function"><span class="params">data</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> len = data.length;</span><br><span class="line">        <span class="keyword">const</span> sql = <span class="string">&#x27;select * from project order by id desc limit 8 offset &#x27;</span> + (page - <span class="number">1</span>) * <span class="number">8</span>;</span><br><span class="line">        sqlFn(sql, <span class="literal">null</span>, <span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (result.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                res.send(&#123;</span><br><span class="line">                    <span class="attr">status</span>: <span class="number">200</span>,</span><br><span class="line">                    <span class="attr">data</span>: result,</span><br><span class="line">                    <span class="attr">pageSize</span>: <span class="number">8</span>,</span><br><span class="line">                    <span class="attr">total</span>: len</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                res.send(&#123;</span><br><span class="line">                    <span class="attr">status</span>: <span class="number">500</span>,</span><br><span class="line">                    <span class="attr">msg</span>: <span class="string">&#x27;暂无数据&#x27;</span></span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = router</span><br></pre></td></tr></table></figure><p>写服务端的接口业务，SQL语句查询数据库，再返回数据</p></li><li><p>连接数据库 （/server/mysql.js）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 连接数据库 1.安装mysql 2.创建连接</span></span><br><span class="line"><span class="keyword">const</span> mysql = <span class="built_in">require</span>(<span class="string">&quot;mysql&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建数据库连接</span></span><br><span class="line"><span class="keyword">const</span> client = mysql.createConnection(&#123;</span><br><span class="line">    <span class="attr">host</span>:<span class="string">&#x27;localhost&#x27;</span>,<span class="comment">//数据域名 地址</span></span><br><span class="line">    <span class="attr">user</span>:<span class="string">&#x27;root&#x27;</span>,<span class="comment">//数据库名称</span></span><br><span class="line">    <span class="attr">password</span>:<span class="string">&#x27;&#x27;</span>,<span class="comment">//数据库密码 xampp集成</span></span><br><span class="line">    <span class="attr">database</span>:<span class="string">&#x27;ego&#x27;</span>,</span><br><span class="line">    <span class="comment">// port:3306,</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装数据库操作语句 sql语句 参数数组arr callback成功函数结果</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sqlFun</span>(<span class="params">sql,arr,callback</span>)</span>&#123;</span><br><span class="line">    client.query(sql,arr,<span class="function"><span class="keyword">function</span>(<span class="params">error,result</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(error)&#123;</span><br><span class="line">            <span class="built_in">console</span>.log(<span class="string">&quot;数据库语句错误&quot;</span>);</span><br><span class="line">            <span class="built_in">console</span>.log(error.toString())</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        callback(result)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports=sqlFun</span><br></pre></td></tr></table></figure></li><li><p>服务配置 （/server/indexl.js）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 搭建express服务</span></span><br><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()</span><br><span class="line"><span class="comment">//路由</span></span><br><span class="line"><span class="keyword">const</span> router=<span class="built_in">require</span>(<span class="string">&#x27;../server/router&#x27;</span>)</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">&#x27;/api&#x27;</span>,router)</span><br><span class="line"></span><br><span class="line">app.listen(<span class="number">9090</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">9090</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这里的<code>9090</code>就是服务机监听的端口号</p></li></ol><h2 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h2><h3 id="手动上传"><a href="#手动上传" class="headerlink" title="手动上传"></a>手动上传</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-upload</span><br><span class="line">  class=&quot;upload-demo&quot;</span><br><span class="line">  ref=&quot;upload&quot;</span><br><span class="line">  :action=&quot;url&quot;</span><br><span class="line">  :on-preview=&quot;handlePreview&quot;</span><br><span class="line">  :on-remove=&quot;handleRemove&quot;</span><br><span class="line">  :file-list=&quot;fileList&quot;</span><br><span class="line">  :auto-upload=&quot;false&quot;</span><br><span class="line">  :on-success=&#x27;successUpload&#x27;</span><br><span class="line">&gt;</span><br><span class="line">  &lt;el-button slot=&quot;trigger&quot; size=&quot;small&quot; type=&quot;primary&quot;&gt;选取文件&lt;/el-button&gt;</span><br><span class="line">  &lt;el-button style=&quot;margin-left: 10px;&quot; size=&quot;small&quot; type=&quot;success&quot; @click=&quot;submitUpload&quot;&gt;上传到服务器&lt;/el-button&gt;</span><br><span class="line">  &lt;div slot=&quot;tip&quot; class=&quot;el-upload__tip&quot;&gt;只能上传jpg/png文件，且不超过500kb&lt;/div&gt;</span><br><span class="line">&lt;/el-upload&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import base from &#x27;../../api/base&#x27;;</span><br><span class="line">  export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        fileList: [],</span><br><span class="line">        url:base.uploadUrl,</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      submitUpload() &#123;</span><br><span class="line">        this.$refs.upload.submit();</span><br><span class="line">      &#125;,</span><br><span class="line">      handleRemove(file, fileList) &#123;</span><br><span class="line">        console.log(file, fileList);</span><br><span class="line">      &#125;,</span><br><span class="line">      handlePreview(file) &#123;</span><br><span class="line">        console.log(file);</span><br><span class="line">      &#125;,</span><br><span class="line">     /***</span><br><span class="line">     * 上传图片成功</span><br><span class="line">     */</span><br><span class="line">    successUpload(res,file,fileList)&#123;</span><br><span class="line">      console.log(&quot;上传成功&quot;,res,file,fileList);</span><br><span class="line">    &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="服务端-server-router-js"><a href="#服务端-server-router-js" class="headerlink" title="服务端 /server/router.js"></a>服务端 /server/router.js</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 上传图片 post请求 upload</span></span><br><span class="line"><span class="comment"> * 说明：</span></span><br><span class="line"><span class="comment"> * 1.后台安装 multer模块，同时引入fs模块</span></span><br><span class="line"><span class="comment"> * 2.router.js入口文件导入模块</span></span><br><span class="line"><span class="comment"> *      const fs=require(&#x27;fs&#x27;)</span></span><br><span class="line"><span class="comment"> *      const multer=require(&#x27;multer&#x27;)</span></span><br><span class="line"><span class="comment"> * 3.上传图片</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">var</span> storage = multer.diskStorage(&#123;</span><br><span class="line">    <span class="attr">destination</span>: <span class="function"><span class="keyword">function</span> (<span class="params">req, file, cb</span>) </span>&#123;</span><br><span class="line">        cb(<span class="literal">null</span>, <span class="string">&quot;./upload/&quot;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">filename</span>: <span class="function"><span class="keyword">function</span> (<span class="params">req, file, cb</span>) </span>&#123;</span><br><span class="line">        cb(<span class="literal">null</span>, <span class="built_in">Date</span>.now() + <span class="string">&quot;-&quot;</span> + file.originalname)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> createFolder = <span class="function"><span class="keyword">function</span> (<span class="params">folder</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        fs.accessSync(folder);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">        fs.mkdirSync(folder);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> uploadFolder = <span class="string">&#x27;./upload/&#x27;</span>;</span><br><span class="line">createFolder(uploadFolder);</span><br><span class="line"><span class="keyword">var</span> upload = multer(&#123; <span class="attr">storage</span>: storage &#125;);</span><br><span class="line"></span><br><span class="line">router.post(<span class="string">&#x27;/upload&#x27;</span>, upload.single(<span class="string">&#x27;file&#x27;</span>), <span class="function"><span class="keyword">function</span> (<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> file = req.file;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;文件类型：%s&#x27;</span>, file.mimetype);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;原始文件名：%s&#x27;</span>, file.originalname);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;文件大小：%s&#x27;</span>, file.size);</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;文件保存路径：%s&#x27;</span>, file.path);</span><br><span class="line">    res.json(&#123; <span class="attr">res_code</span>: <span class="string">&#x27;0&#x27;</span>, <span class="attr">name</span>: file.originalname, <span class="attr">url</span>: file.path &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p> 需要自行安装multer模块。fs模块自带，只需引入即可</p><p><code>npm i mlter -S</code></p><p>在/server/router.js 中引入：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//图片需要的模块</span></span><br><span class="line"><span class="keyword">const</span> multer = <span class="built_in">require</span>(<span class="string">&#x27;multer&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在/server/index.js 中加入post 请求</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//post 请求表单数据</span></span><br><span class="line">app.use(express.urlencoded(&#123;<span class="attr">extended</span>:<span class="literal">true</span>&#125;))</span><br></pre></td></tr></table></figure><p>增加api接口 /api/base.js</p><p><code>uploadUrl:&#39;/api/api/upload&#39;, //图片上传 post请求</code></p><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><p>在Goods.vue页面通过el-upload组件发送上传图片的请求，</p><p>其中的action属性是接口的地址，这里绑定了url，url为路由base.js里面接收图片的接口地址，</p><p>最后通过触发on-success事件，调用successUpload方法，打印出上传的文件信息。</p><p>其中的文件信息是通过在服务端设置好的json格式打印出来。</p><p>最终在<code>/server/upload/</code>中看到刚刚上传的图片。</p><p>图片在服务器中存放的地址也是自己定义的。</p><p>到实际面试的时候回答应该是说图片存放在阿里云服务器里面，而不是本地服务器。</p><h3 id="图片上传成功后，在页面上显示"><a href="#图片上传成功后，在页面上显示" class="headerlink" title="图片上传成功后，在页面上显示"></a>图片上传成功后，在页面上显示</h3><ol><li>在on-success调用的方法内实现消息提醒</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">successUpload</span>(<span class="params">res,file,fileList</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">&quot;上传成功&quot;</span>,res,file,fileList);</span><br><span class="line">   <span class="built_in">this</span>.$message(&#123;</span><br><span class="line">      <span class="attr">message</span>: <span class="string">&#x27;上传成功&#x27;</span>,</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&#x27;success&#x27;</span></span><br><span class="line">    &#125;);</span><br><span class="line">   <span class="built_in">this</span>.imgUrl=base.host+<span class="string">&#x27;/&#x27;</span>+res.url.slice(<span class="number">7</span>);</span><br><span class="line">  <span class="comment">// this.$emit(&#x27;sendImg&#x27;,imgUrl);   发送图片地址给父组件</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ol start="2"><li>静态文件托管 — 访问<a href="http://localhost:9090/%E5%9B%BE%E7%89%87.jpg">http://localhost:9090/图片.jpg</a></li></ol><p>​    意思就是将项目内部的文件夹地址暴露到域名，使外界可以访问到文件夹</p><p>​    (/server/index.js)</p><p><code>    app.use(expres.static(&#39;upload&#39;))</code></p><ol start="3"><li>路由(/api/base.js)内需存放一个基础域名，方便接下来使用</li></ol><p>​    <code>host:&#39;http://localhost:9090&#39;,*//基础域名*</code></p><ol start="4"><li>将上传图片的临时地址做个拼接：</li></ol><p><code>        this.imgUrl=base.host+&#39;/&#39;+res.url.slice(7);</code></p><p>​    在需要放图片的位置src引用上面地址即可</p><ol start="5"><li>如果将要图片显示在父组件内，则需要<code>$emit()</code>，父组件接收到传过来的imgUrl后再做处理</li></ol><h2 id="富文本编译"><a href="#富文本编译" class="headerlink" title="富文本编译"></a>富文本编译</h2><ol><li>百度编译器</li><li>wangEditor</li></ol><h3 id="wangEditor使用步骤："><a href="#wangEditor使用步骤：" class="headerlink" title="wangEditor使用步骤："></a>wangEditor使用步骤：</h3><ol><li><p>官网：<a href="https://www.wangeditor.com/">https://www.wangeditor.com/</a></p></li><li><p>使用方法：</p><ol><li><p>npm 安装 <code>npm i wangeditor --save</code></p><p>CDN 链接 <code>https://cdn.jsdelivr.net/npm/wangeditor@latest/dist/wangEditor.min.js</code></p></li><li><p>引入模块</p><p><code>import E from &#39;wangeditor&#39;</code></p></li><li><p>使用wangEditor</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> editor = <span class="keyword">new</span> E(<span class="string">&#x27;#div1&#x27;</span>)</span><br><span class="line"><span class="comment">// 或者 const editor = new E( document.getElementById(&#x27;div1&#x27;) )</span></span><br><span class="line">editor.create()</span><br></pre></td></tr></table></figure></li></ol></li><li><p>常用配置</p><ol><li><p>清空内容</p><p>使用 <code>editor.txt.clear()</code> 清空编辑器内容。</p></li><li><p>设置内容</p><p>使用 <code>editor.txt.html()</code> 获取 html 。</p></li><li><p>配置菜单</p><p>使用 <code>editor.config.menus</code> 定义显示哪些菜单和菜单的顺序。</p></li><li><p>配置 onchange 回调函数</p><p>配置 <code>onchange</code> 函数之后，用户操作（鼠标点击、键盘打字等）导致的内容变化之后，会自动触发 <code>onchange</code> 函数执行。</p></li></ol></li></ol><h2 id="列表（树形表格）"><a href="#列表（树形表格）" class="headerlink" title="列表（树形表格）"></a>列表（树形表格）</h2><p>由于网上能查到树形表格的案例很少（树形控件或普通表格的就有很多），所以在此记录详细笔记避坑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;!-- bug：</span><br><span class="line">  0.删除未能少一行的解决方法：到时与接口对接时，在进行删除操作后才重新获取数据，即可实现少一行的效果</span><br><span class="line">   --&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;el-table</span><br><span class="line">      ref=&quot;linksTable&quot;</span><br><span class="line">      :data=&quot;this.status == &#x27;1&#x27; ? footerTable : navTable&quot;</span><br><span class="line">      style=&quot;width: 100%&quot;</span><br><span class="line">      row-key=&quot;id&quot;</span><br><span class="line">      border</span><br><span class="line">      :tree-props=&quot;&#123; children: &#x27;children&#x27;, hasChildren: &#x27;hasChildren&#x27; &#125;&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;title&quot; label=&quot;栏目&quot; width=&quot;180&quot;&gt; &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;label&quot; label=&quot;标签&quot; width=&quot;180&quot;&gt;</span><br><span class="line">        &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            v-model=&quot;scope.row.label&quot;</span><br><span class="line">            placeholder=&quot;请输入内容&quot;</span><br><span class="line">            :disabled=&quot;!scope.row.isEditting&quot;</span><br><span class="line">          &gt;&lt;/el-input&gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column prop=&quot;link&quot; label=&quot;链接&quot;</span><br><span class="line">        &gt;&lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;el-input</span><br><span class="line">            v-model=&quot;scope.row.link&quot;</span><br><span class="line">            placeholder=&quot;请输入内容&quot;</span><br><span class="line">            :disabled=&quot;!scope.row.isEditting&quot;</span><br><span class="line">          &gt;&lt;/el-input</span><br><span class="line">        &gt;&lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">      &lt;el-table-column label=&quot;操作&quot; width=&quot;180&quot; align=&quot;left&quot;&gt;</span><br><span class="line">        &lt;template slot-scope=&quot;scope&quot;&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            type=&quot;primary&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            icon=&quot;el-icon-edit&quot;</span><br><span class="line">            @click=&quot;editContent(scope)&quot;</span><br><span class="line">            v-if=&quot;!scope.row.isEditting&quot;</span><br><span class="line">            &gt;编辑&lt;/el-button</span><br><span class="line">          &gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            type=&quot;success&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            icon=&quot;el-icon-check&quot;</span><br><span class="line">            v-else</span><br><span class="line">            @click=&quot;submitEdit(scope)&quot;</span><br><span class="line">            &gt;提交&lt;/el-button</span><br><span class="line">          &gt;</span><br><span class="line">          &lt;el-popconfirm</span><br><span class="line">            icon=&quot;el-icon-warning&quot;</span><br><span class="line">            icon-color=&quot;red&quot;</span><br><span class="line">            title=&quot;真的要删除吗？&quot;</span><br><span class="line">            @confirm=&quot;() =&gt; remove(scope, scope.$index)&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            &lt;el-button</span><br><span class="line">              type=&quot;danger&quot;</span><br><span class="line">              size=&quot;mini&quot;</span><br><span class="line">              icon=&quot;el-icon-delete&quot;</span><br><span class="line">              slot=&quot;reference&quot;</span><br><span class="line">              style=&quot;margin-left: 10px&quot;</span><br><span class="line">              v-if=&quot;scope.row.id / 10 &gt;= 1&quot;</span><br><span class="line">              &gt;删除&lt;/el-button</span><br><span class="line">            &gt;</span><br><span class="line">          &lt;/el-popconfirm&gt;</span><br><span class="line">          &lt;el-button</span><br><span class="line">            type=&quot;info&quot;</span><br><span class="line">            size=&quot;mini&quot;</span><br><span class="line">            icon=&quot;el-icon-plus&quot;</span><br><span class="line">            v-if=&quot;scope.row.id / 10 &lt; 1&quot;</span><br><span class="line">            @click=&quot;() =&gt; append(scope.row)&quot;</span><br><span class="line">            style=&quot;margin-left: 10px&quot;</span><br><span class="line">            &gt;添加&lt;/el-button</span><br><span class="line">          &gt;</span><br><span class="line">        &lt;/template&gt;</span><br><span class="line">      &lt;/el-table-column&gt;</span><br><span class="line">    &lt;/el-table&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  props: [&quot;status&quot;],</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">        footerTable:[</span><br><span class="line">        &#123;</span><br><span class="line">          id: 1,</span><br><span class="line">          title: &quot;推荐产品22222&quot;,</span><br><span class="line">          label: &quot;推荐产品&quot;,</span><br><span class="line">          link: &quot;#&quot;,</span><br><span class="line">          isEditting: false,</span><br><span class="line">          children: [</span><br><span class="line">            &#123;</span><br><span class="line">              id: 11,</span><br><span class="line">              title: &quot;推荐产品&quot;,</span><br><span class="line">              label: &quot;Find N&quot;,</span><br><span class="line">              link: &quot;#&quot;,</span><br><span class="line">              isEditting: false,</span><br><span class="line">            &#125;,</span><br><span class="line">          ]</span><br><span class="line">         &#125;</span><br><span class="line">        ],</span><br><span class="line">        navTable:[],</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    editContent(scope) &#123;</span><br><span class="line">      console.log(scope);</span><br><span class="line">      scope.row.isEditting = !scope.row.isEditting;</span><br><span class="line">    &#125;,</span><br><span class="line">    //remove(scope, data) &#123;</span><br><span class="line">    //  console.log(</span><br><span class="line">    //    scope.store.states.data[parseInt(scope.row.id / 10) - 1].children[</span><br><span class="line">    //      (scope.row.id % 10) - 1</span><br><span class="line">    //    ]</span><br><span class="line">    //  );</span><br><span class="line">      //this.remove(node);</span><br><span class="line">      // scope.store.states.data[parseInt((scope.row.id)/10)-1].children[(scope.row.id%10)-1].splice();</span><br><span class="line">    &#125;,</span><br><span class="line">    submitEdit(scope) &#123;</span><br><span class="line">      scope.row.isEditting = !scope.row.isEditting;</span><br><span class="line">      //this.$api.</span><br><span class="line">    &#125;,</span><br><span class="line">    //追加子节点</span><br><span class="line">    append(scope) &#123;</span><br><span class="line">      console.log(&quot;parent:&quot;, scope);</span><br><span class="line">      if (scope.children.length &gt;= 7) &#123;</span><br><span class="line">        this.$message(&#123;</span><br><span class="line">          message: &quot;无法添加，单个栏目最多只能7条链接！&quot;,</span><br><span class="line">          type: &quot;warning&quot;,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        this.$refs.linksTable.toggleRowExpansion(scope, true); //展开子树</span><br><span class="line">        const newChild = &#123;</span><br><span class="line">          id: scope.id * 10 + scope.children.length + 1,</span><br><span class="line">          title: scope.title,</span><br><span class="line">          label: &quot;&quot;,</span><br><span class="line">          link: &quot;&quot;,</span><br><span class="line">          isEditting: true,</span><br><span class="line">        &#125;;</span><br><span class="line">        if (!scope.children) &#123;</span><br><span class="line">          this.$set(scope, &quot;children&quot;, []);</span><br><span class="line">        &#125;</span><br><span class="line">        scope.children.push(newChild);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>注意点：</p><ol><li>通过父组件向子组件传值，实现两个标签共用同一个表格</li><li>表格的<code>:data</code> 使用三目运算符可以实现同一表格，数据来源两个form</li><li>如需获取表格行内属性，可通过<code>scope.row</code>获取，<code>scope</code>内还有很多属性，具体自己去浏览器看</li><li><code>v-if</code>和<code>v-else</code>是最近匹配，所以如果有多个判断块，请调整各自的顺序</li><li> 展开子树的代码：<code>this.$refs.linksTable.toggleRowExpansion(scope, true);</code> 展开子树需获取到整个树形表格，所以使用<code>this.$refs.表格名</code>，在官方文档的属性介绍可查询到展开子树的方法</li><li>form记录里的<code>isEditting</code>字段仅仅是用来控制对应输入框的状态（是否禁用），所以没必要在数据库中储存此字段，只需在接口返回的字段里加入此字段（默认为false）即可</li><li>子树的id是两位数，十位是父节点的id，个位是自身在子树中的顺序。这样分配的好处是，在添加子节点时，分配规则可简单实现：<code>scope.id * 10 + scope.children.length + 1</code>。缺点是一旦子节点超过9个就会出问题，因此这里限制子节点最多7个。</li><li>更多的想到再补充</li></ol><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><ol><li>使用拦截器对页面进行拦截，如未登录一律跳转至登录页面</li><li>前端登录，发送请求至接口，接口返回token</li><li>解析token，设置vuex状态，表示目前已登录</li><li>退出登录，清除vuex状态，清楚本地储存，返回登录界面</li></ol><h3 id="拦截器"><a href="#拦截器" class="headerlink" title="拦截器"></a>拦截器</h3><p>顾名思义，拦截页面。不管用户自定义什么网址页面，判断如果需要登录的，统统全部拦截，转向登录界面。</p><ol><li><p>vue router，在与登录界面同级的另一界面内配置路由元信息</p></li><li><p>设置拦截器，通过遍历上一级地址meta内有无isLogin来判断是否需要拦截</p><p>（router/permission.js）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&quot;./index&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取vuex数据</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;../store/index&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//路由拦截</span></span><br><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">//判断是否需要登录</span></span><br><span class="line">    <span class="keyword">if</span> (to.matched.some(<span class="function"><span class="params">ele</span> =&gt;</span> ele.meta.isLogin)) &#123;</span><br><span class="line">      <span class="comment">//2.判断当前用户是否已经登录</span></span><br><span class="line">      <span class="keyword">let</span> token = store.state.loginModule.userinfo.token;</span><br><span class="line">      <span class="keyword">if</span> (token) &#123;</span><br><span class="line">        next();</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// next();</span></span><br><span class="line">        next(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;<span class="comment">//不需要登录</span></span><br><span class="line">      next()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure></li></ol><h3 id="登录接口"><a href="#登录接口" class="headerlink" title="登录接口"></a>登录接口</h3><h4 id="需要安装的模块"><a href="#需要安装的模块" class="headerlink" title="需要安装的模块"></a>需要安装的模块</h4><ul><li><p>jsonwebtoken (jwt)   生成token</p><p><code>npm i jsonwebtoken -S</code></p></li><li><p>querystring  将token转成字符串，用以发送接口参数</p><p><code>npm i querystring -S</code></p></li><li><p>jwt-decode  将接口返回的token解码回人类能看懂的字符</p><p><code>npm i jwt-decode -S</code></p></li></ul><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li><h4 id="登录逻辑"><a href="#登录逻辑" class="headerlink" title="登录逻辑"></a>登录逻辑</h4><p> (/server/router.js)</p>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录接口</span></span><br><span class="line"><span class="comment"> * 语法：</span></span><br><span class="line"><span class="comment"> * 如60，&quot;2 days&quot;,&quot;10h&quot;,&quot;7d&quot;,Expiration time,过期时间</span></span><br><span class="line"><span class="comment"> * jwt.sign(&#123;&#125;,&#x27;秘钥&#x27;,&#x27;过期时间，&#123;expiresIn:20*1,&#x27;1day&#x27;&#x27;1h&#x27;&#125;&#x27;)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录</span></span><br><span class="line"><span class="comment"> * 接受字段：username, password</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">router.post(<span class="string">&quot;/login&quot;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; username, password &#125; = req.body;</span><br><span class="line">    <span class="comment">//请求数据库</span></span><br><span class="line">    <span class="keyword">const</span> sql = <span class="string">&quot;select * from user where username=? and password=?&quot;</span>;</span><br><span class="line">    <span class="keyword">const</span> arr = [username, password];</span><br><span class="line">    sqlFn(sql, arr, <span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (result.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> token = jwt.sign(&#123;</span><br><span class="line">                <span class="attr">username</span>: result[<span class="number">0</span>].username,</span><br><span class="line">                <span class="attr">id</span>: result[<span class="number">0</span>].id</span><br><span class="line">            &#125;, config.jwtSecert, &#123;</span><br><span class="line">                <span class="attr">expiresIn</span>: <span class="number">20</span> * <span class="number">1</span></span><br><span class="line">            &#125;)</span><br><span class="line">            res.send(&#123;</span><br><span class="line">                <span class="attr">status</span>: <span class="number">200</span>,</span><br><span class="line">                <span class="attr">data</span>: token,</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            res.send(&#123;</span><br><span class="line">                <span class="attr">status</span>: <span class="number">404</span>,</span><br><span class="line">                <span class="attr">msg</span>: <span class="string">&quot;信息错误&quot;</span></span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>   <code>config.jwtSecert</code> 这个是生成token的关键，后面的意思是20天后过期</p></li><li><h4 id="配置密钥"><a href="#配置密钥" class="headerlink" title="配置密钥"></a>配置密钥</h4><p>（/server/secert.js）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports=&#123;</span><br><span class="line">    <span class="attr">jwtSecert</span>:<span class="string">&#x27;lalalalala&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="引入以上2个文件"><a href="#引入以上2个文件" class="headerlink" title="引入以上2个文件"></a>引入以上2个文件</h4><p>(/server/router.js)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入模块 jsonwebtoken 密钥</span></span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>)</span><br><span class="line"><span class="comment">// config.jwtSecert </span></span><br><span class="line"><span class="keyword">const</span> config=<span class="built_in">require</span>(<span class="string">&#x27;./secert&#x27;</span>)</span><br></pre></td></tr></table></figure><p>这里的<code>config</code>与第一步的<code>config</code>保持一致</p></li><li><h4 id="设置API"><a href="#设置API" class="headerlink" title="设置API"></a>设置API</h4><p>（/api/base.js）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">login:<span class="string">&#x27;/api/api/login&#x27;</span>,<span class="comment">//登录接口</span></span><br></pre></td></tr></table></figure><p>API方法 (/api/index.js)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登录接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="title">getLogin</span>(<span class="params">params</span>)</span>&#123;  <span class="comment">//params=&#123;username:&#x27;&#x27;,password:&#x27;&#x27;&#125;</span></span><br><span class="line">   <span class="keyword">return</span> axios.post(base.login,qs.stringify(params)) </span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>后台接收post请求的是表单，这里发送的是token，后台不支持，所以需要将token转成字符串（querystring）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//node&gt;js  node自带的方法</span></span><br><span class="line"><span class="keyword">const</span> qs=<span class="built_in">require</span>(<span class="string">&#x27;querystring&#x27;</span>) </span><br></pre></td></tr></table></figure></li><li><h4 id="编写登录请求"><a href="#编写登录请求" class="headerlink" title="编写登录请求"></a>编写登录请求</h4>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">submitForm</span>(<span class="params">formName</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.$refs[formName].validate(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">          <span class="keyword">let</span> &#123; username, password &#125; = <span class="built_in">this</span>.loginForm;</span><br><span class="line">          <span class="comment">//请求登录接口</span></span><br><span class="line">          <span class="built_in">this</span>.$api</span><br><span class="line">            .getLogin(&#123;</span><br><span class="line">              username,</span><br><span class="line">              password,</span><br><span class="line">            &#125;)</span><br><span class="line">            .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="built_in">console</span>.log(res.data);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&quot;error submit!!&quot;</span>);</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure><p>这里的<code>let &#123; username, password &#125; = this.loginForm;</code> 是将登录表单组成一个json（？不知道是不是叫json，反正就是发送这个整体去接口）</p></li><li><h4 id="处理接口返回的token"><a href="#处理接口返回的token" class="headerlink" title="处理接口返回的token"></a>处理接口返回的token</h4><p>上面<code>console.log(res.data); </code> 打印出来的token是一串乱七八糟的字符，所以需要<code>jwt-decode</code>插件将接口获取到的token解码成人类能看懂的信息</p><p>在Login.vue的script内引入<code>jwt-decode</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jwt <span class="keyword">from</span> <span class="string">&quot;jwt-decode&quot;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">submitForm</span>(<span class="params">formName</span>)</span> &#123;</span><br><span class="line">  <span class="built_in">this</span>.$refs[formName].validate(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">      <span class="keyword">let</span> &#123; username, password &#125; = <span class="built_in">this</span>.loginForm;</span><br><span class="line">      <span class="comment">//请求登录接口</span></span><br><span class="line">      <span class="built_in">this</span>.$api</span><br><span class="line">        .getLogin(&#123;</span><br><span class="line">          username,</span><br><span class="line">          password,</span><br><span class="line">        &#125;)</span><br><span class="line">        .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> (res.data.status === <span class="number">200</span>) &#123;</span><br><span class="line">            <span class="built_in">console</span>.log(jwt(res.data.data));</span><br><span class="line">            <span class="comment">//登录成功 1.存储登录信息  2.跳转网页  3.顶部区域显示用户信息  4.持久化</span></span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">//账号或者密码错误</span></span><br><span class="line">            <span class="built_in">this</span>.$message.error(<span class="string">&#x27;账号或者密码错误&#x27;</span>);</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;error submit!!&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>经过<code>jwt-decode</code>解析的token，就能看到用户名了</p></li><li><h4 id="登录成功后的操作"><a href="#登录成功后的操作" class="headerlink" title="登录成功后的操作"></a>登录成功后的操作</h4><ol><li><h5 id="存储登录信息"><a href="#存储登录信息" class="headerlink" title="存储登录信息"></a>存储登录信息</h5><p>之前用的传值都是父子组件之间互x相传，但是现在登录页面与layout页面是同级，无法普通的传值，所以需要用到 <strong>Vuex</strong></p><p>（Vuex 是一个专为 Vue.js 应用程序开发的<strong>状态管理模式 + 库</strong>。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。）</p><ol><li><h6 id="创建模块"><a href="#创建模块" class="headerlink" title="创建模块"></a>创建模块</h6><p>（/store/modules/loginModule.js）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">namespaced</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">state</span>: &#123;</span><br><span class="line">        <span class="attr">userinfo</span>: &#123;</span><br><span class="line">            <span class="attr">user</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="attr">token</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">mutations</span>: &#123;</span><br><span class="line">        <span class="comment">//设置用户信息</span></span><br><span class="line">        <span class="function"><span class="title">setUser</span>(<span class="params">state, payload</span>)</span> &#123;</span><br><span class="line">            state.userinfo = payload;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 清空</span></span><br><span class="line">        <span class="function"><span class="title">clearUser</span>(<span class="params">state</span>)</span>&#123;</span><br><span class="line">            state.userinfo=&#123;</span><br><span class="line">                <span class="attr">user</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">                <span class="attr">token</span>:<span class="string">&#x27;&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">actions</span>:&#123;</span><br><span class="line"></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">getters</span>:&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>payload</code> 是一个token的对象</p></li><li><h6 id="新模块引入到vuex内"><a href="#新模块引入到vuex内" class="headerlink" title="新模块引入到vuex内"></a>新模块引入到vuex内</h6><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> Vuex <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="keyword">import</span> loginModule <span class="keyword">from</span> <span class="string">&#x27;./modules/loginModule&#x27;</span></span><br><span class="line"></span><br><span class="line">Vue.use(Vuex)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vuex.Store(&#123;</span><br><span class="line">  <span class="attr">state</span>: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">getters</span>: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>: &#123;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">modules</span>: &#123;</span><br><span class="line">    loginModule</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>使用vuex存储登录信息</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">import</span> jwt <span class="keyword">from</span> <span class="string">&quot;jwt-decode&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> &#123;mapMutations&#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">    <span class="attr">methods</span>: &#123;</span><br><span class="line">    ...mapMutations(<span class="string">&#x27;loginModule&#x27;</span>,[<span class="string">&#x27;setUser&#x27;</span>]),</span><br><span class="line">    <span class="function"><span class="title">submitForm</span>(<span class="params">formName</span>)</span> &#123;</span><br><span class="line">      <span class="built_in">this</span>.$refs[formName].validate(<span class="function">(<span class="params">valid</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (valid) &#123;</span><br><span class="line">          <span class="keyword">let</span> &#123; username, password &#125; = <span class="built_in">this</span>.loginForm;</span><br><span class="line">          <span class="comment">//请求登录接口</span></span><br><span class="line">          <span class="built_in">this</span>.$api</span><br><span class="line">            .getLogin(&#123;</span><br><span class="line">              username,</span><br><span class="line">              password,</span><br><span class="line">            &#125;)</span><br><span class="line">            .then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">              <span class="keyword">if</span> (res.data.status === <span class="number">200</span>) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(jwt(res.data.data));</span><br><span class="line">                <span class="comment">//登录成功 1.存储登录信息  2.跳转网页  3.顶部区域显示用户信息  4.持久化</span></span><br><span class="line">                <span class="keyword">let</span> obj=&#123;</span><br><span class="line">                  <span class="attr">user</span>:jwt(res.data.data),</span><br><span class="line">                  <span class="attr">token</span>:res.data.data</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">this</span>.setUser(obj)</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//账号或者密码错误</span></span><br><span class="line">                <span class="built_in">this</span>.$message.error(<span class="string">&#x27;账号或者密码错误&#x27;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&quot;error submit!!&quot;</span>);</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><code>import &#123;mapMutations&#125; from &#39;vuex&#39;</code></p><p><code>...mapMutations(&#39;loginModule&#39;,[&#39;setUser&#39;]),</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj=&#123;</span><br><span class="line"><span class="attr">user</span>:jwt(res.data.data),</span><br><span class="line"><span class="attr">token</span>:res.data.data</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">this</span>.setUser(obj)</span><br></pre></td></tr></table></figure><p>将接口返回的token解析出来后的user、token组成一个obj，再传给vuex</p></li></ol></li><li><h5 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//存储本地</span></span><br><span class="line"><span class="built_in">localStorage</span>.setItem(<span class="string">&#x27;user&#x27;</span>,<span class="built_in">JSON</span>.stringify(obj))</span><br></pre></td></tr></table></figure><p>在 <code>/router/permission.js</code>里获取vuex数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取vuex数据</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;../store/index&#x27;</span></span><br></pre></td></tr></table></figure><p>路由拦截里通过token来判断是否已经登录了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> token = store.state.loginModule.userinfo.token;</span><br></pre></td></tr></table></figure><p>(完整代码看上面的拦截器)</p><p>持久化——将数据存在本地（/utils/localStorage.js）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;../store/index&#x27;</span></span><br><span class="line"><span class="comment">//持久化</span></span><br><span class="line"><span class="keyword">let</span> user = <span class="built_in">localStorage</span>.getItem(<span class="string">&#x27;user&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span>(user)&#123;</span><br><span class="line">  user=<span class="built_in">JSON</span>.parse(user);</span><br><span class="line">  store.commit(<span class="string">&#x27;loginModule/setUser&#x27;</span>,user)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在浏览器开发者工具中，Application&gt;Storage&gt;Local Storage 可以看到目前存在本地的token</p></li><li><h5 id="跳转网页"><a href="#跳转网页" class="headerlink" title="跳转网页"></a>跳转网页</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//跳转</span></span><br><span class="line"><span class="built_in">this</span>.$router.push(<span class="string">&#x27;/&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><h5 id="顶部区域显示用户信息"><a href="#顶部区域显示用户信息" class="headerlink" title="顶部区域显示用户信息"></a>顶部区域显示用户信息</h5><p>（/views/Layout/Content.vue）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;user&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml">        欢迎：&#123;&#123;userinfo.user.username&#125;&#125;</span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-tuichubianji-copy&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;loginout&quot;</span> <span class="attr">style</span>=<span class="string">&quot;cursor:pointer;margin-left:10px;font-size:22px;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line"><span class="xml">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">import</span> &#123;mapState,mapMutations&#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">computed</span>:&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    ...mapState(<span class="string">&#x27;loginModule&#x27;</span>,[<span class="string">&#x27;userinfo&#x27;</span>])</span></span></span><br><span class="line"><span class="javascript"><span class="xml">  &#125;,</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    <span class="attr">methods</span>: &#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    ...mapMutations(<span class="string">&#x27;loginModule&#x27;</span>,[<span class="string">&#x27;clearUser&#x27;</span>]),</span></span></span><br><span class="line"><span class="javascript"><span class="xml">        <span class="function"><span class="title">loginout</span>(<span class="params"></span>)</span>&#123;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="comment">//退出登录</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">     <span class="comment">//清空vuex数据</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">     <span class="built_in">this</span>.clearUser()</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="comment">//清空本地存储</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="built_in">localStorage</span>.removeItem(<span class="string">&#x27;user&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="comment">//返回登录</span></span></span></span><br><span class="line"><span class="javascript"><span class="xml">      <span class="built_in">this</span>.$router.push(<span class="string">&#x27;/login&#x27;</span>)</span></span></span><br><span class="line"><span class="javascript"><span class="xml">   &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">    &#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">&#125;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li></ol></li><li><h4 id="退出登录"><a href="#退出登录" class="headerlink" title="退出登录"></a>退出登录</h4><p>  需求：清空token、清空本地存储、退回登录界面（push退回可以防止用户退出后，点击浏览器的返回，回到登录状态）</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">loginout</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="comment">//退出登录</span></span><br><span class="line">     <span class="comment">//清空vuex数据</span></span><br><span class="line">     <span class="built_in">this</span>.clearUser()</span><br><span class="line">      <span class="comment">//清空本地存储</span></span><br><span class="line">      <span class="built_in">localStorage</span>.removeItem(<span class="string">&#x27;user&#x27;</span>)</span><br><span class="line">      <span class="comment">//返回登录</span></span><br><span class="line">      <span class="built_in">this</span>.$router.push(<span class="string">&#x27;/login&#x27;</span>)</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h4><p>  记得在<code>main.js</code>里引入提出去的各种模块</p>  <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//拦截器</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./router/permission&#x27;</span></span><br><span class="line"><span class="comment">//数据持久化</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./utils/localStorage&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="验证码（纯前端）"><a href="#验证码（纯前端）" class="headerlink" title="验证码（纯前端）"></a>验证码（纯前端）</h3><p>使用canvas画出数字和字母，再加上其他干扰元素</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">    &lt;el-form-item class=&quot;code&quot; prop=&quot;verifyCode&quot;&gt;</span><br><span class="line">              &lt;el-input</span><br><span class="line">                v-model=&quot;loginForm.verifyCode&quot;</span><br><span class="line">                placeholder=&quot;不区分大小写&quot;</span><br><span class="line">                :validate-event=&quot;false&quot;</span><br><span class="line">              &gt;</span><br><span class="line">                &lt;template slot=&quot;append&quot;&gt;</span><br><span class="line">                  &lt;div @click=&quot;reflash&quot; style=&quot;margin: 0 -16px&quot;&gt;</span><br><span class="line">                    &lt;canvas ref=&quot;canvas&quot; width=&quot;100&quot; height=&quot;30&quot;&gt;&lt;/canvas&gt;&lt;/div</span><br><span class="line">                &gt;&lt;/template&gt;</span><br><span class="line">              &lt;/el-input&gt;</span><br><span class="line">    &lt;/el-form-item&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">    data() &#123;</span><br><span class="line">        var validateCode = (rule, value, callback) =&gt; &#123;</span><br><span class="line">          var num = this.showNum.join(&quot;&quot;);//将字符数组转换成字符串</span><br><span class="line">          if (value === &quot;&quot;) &#123;</span><br><span class="line">            callback(new Error(&quot;请输入验证码&quot;));</span><br><span class="line">          &#125; else &#123;</span><br><span class="line">            if (value === num) &#123;</span><br><span class="line">              callback();</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">              this.reflash();</span><br><span class="line">              callback(new Error(&quot;验证码错误！&quot;));</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        return &#123;</span><br><span class="line">          showNum: [],</span><br><span class="line">        &#125;,</span><br><span class="line">          rules: &#123;</span><br><span class="line">            verifyCode: [&#123; validator: validateCode, trigger: &quot;blur&quot; &#125;],</span><br><span class="line">          &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">    mounted() &#123;</span><br><span class="line">       this.draw(this.showNum);</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        //刷新验证码</span><br><span class="line">        reflash() &#123;</span><br><span class="line">          this.draw(this.showNum);</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        //得到随机的颜色值</span><br><span class="line">        randomColor() &#123;</span><br><span class="line">          var r = Math.floor(Math.random() * 256);</span><br><span class="line">          var g = Math.floor(Math.random() * 256);</span><br><span class="line">          var b = Math.floor(Math.random() * 256);</span><br><span class="line">          return &quot;rgb(&quot; + r + &quot;,&quot; + g + &quot;,&quot; + b + &quot;)&quot;;</span><br><span class="line">        &#125;,</span><br><span class="line"></span><br><span class="line">        //生成并渲染出验证码图形</span><br><span class="line">        draw(showNum) &#123;</span><br><span class="line">          var canvas_width = this.$refs.canvas.offsetWidth;</span><br><span class="line">          var canvas_height = this.$refs.canvas.offsetHeight;</span><br><span class="line">          var canvas = this.$refs.canvas; //获取到canvas的对象，演员</span><br><span class="line">          var context = canvas.getContext(&quot;2d&quot;); //获取到canvas画图的环境，演员表演的舞台</span><br><span class="line">          canvas.width = canvas_width;</span><br><span class="line">          canvas.height = canvas_height;</span><br><span class="line">          var sCode =</span><br><span class="line">            &quot;a,b,c,d,e,f,g,h,i,j,k,m,n,p,q,r,s,t,u,v,w,x,y,z,A,B,C,E,F,G,H,J,K,L,M,N,P,Q,R,S,T,W,X,Y,Z,1,2,3,4,5,6,7,8,9,0&quot;;</span><br><span class="line">          var aCode = sCode.split(&quot;,&quot;);</span><br><span class="line">          var aLength = aCode.length; //获取到数组的长度</span><br><span class="line"></span><br><span class="line">          for (var i = 0; i &lt; 4; i++) &#123;</span><br><span class="line">            //这里的for循环可以控制验证码位数（如果想显示6位数，4改成6即可）</span><br><span class="line">            var j = Math.floor(Math.random() * aLength); //获取到随机的索引值</span><br><span class="line">            // var deg = Math.random() * 30 * Math.PI / 180;//产生0~30之间的随机弧度</span><br><span class="line">            var deg = Math.random() - 0.5; //产生一个随机弧度</span><br><span class="line">            var txt = aCode[j]; //得到随机的一个内容</span><br><span class="line">            // showNum[i] = txt; //区分大小写</span><br><span class="line">            showNum[i] = txt.toLowerCase(); //一律转为小写</span><br><span class="line">            var x = 10 + i * 20; //文字在canvas上的x坐标</span><br><span class="line">            var y = 20 + Math.random() * 8; //文字在canvas上的y坐标</span><br><span class="line">            context.font = &quot;bold 23px 微软雅黑&quot;;</span><br><span class="line"></span><br><span class="line">            context.translate(x, y);</span><br><span class="line">            context.rotate(deg);</span><br><span class="line"></span><br><span class="line">            context.fillStyle = this.randomColor();</span><br><span class="line">            context.fillText(txt, 0, 0);</span><br><span class="line"></span><br><span class="line">            context.rotate(-deg);</span><br><span class="line">            context.translate(-x, -y);</span><br><span class="line">          &#125;</span><br><span class="line">          for (var i = 0; i &lt;= 5; i++) &#123;</span><br><span class="line">            //验证码上显示线条</span><br><span class="line">            context.strokeStyle = this.randomColor();</span><br><span class="line">            context.beginPath();</span><br><span class="line">            context.moveTo(</span><br><span class="line">              Math.random() * canvas_width,</span><br><span class="line">              Math.random() * canvas_height</span><br><span class="line">            );</span><br><span class="line">            context.lineTo(</span><br><span class="line">              Math.random() * canvas_width,</span><br><span class="line">              Math.random() * canvas_height</span><br><span class="line">            );</span><br><span class="line">            context.stroke();</span><br><span class="line">          &#125;</span><br><span class="line">          for (var i = 0; i &lt;= 30; i++) &#123;</span><br><span class="line">            //验证码上显示小点</span><br><span class="line">            context.strokeStyle = this.randomColor();</span><br><span class="line">            context.beginPath();</span><br><span class="line">            var x = Math.random() * canvas_width;</span><br><span class="line">            var y = Math.random() * canvas_height;</span><br><span class="line">            context.moveTo(x, y);</span><br><span class="line">            context.lineTo(x + 1, y + 1);</span><br><span class="line">            context.stroke();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>注意点：</p><ul><li>将验证码内嵌到el-input里，由于element的slot有<code>padding-left:20px; padding-right:20px</code> 所以验证码放在里面会很难看，又由于上述属性不能重写，所以只能将验证码图片的<code>margin</code>设成负数，才能美观</li></ul><h2 id="URL传参"><a href="#URL传参" class="headerlink" title="URL传参"></a>URL传参</h2><p>使用params传参，router是识别<code>path</code>；使用query传参，router是识别<code>name</code>(如同时有path和name，path将被忽略)</p><h3 id="1-通过params"><a href="#1-通过params" class="headerlink" title="1. 通过params"></a>1. 通过params</h3><ul><li><p>在<code>router\index.js</code>里改造路由地址</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/goodscontent&amp;:status&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: GoodsContent,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>使用 <strong>&amp;</strong> 或 <strong>/</strong> 或者其他符号充当分隔符，<code>:status</code>为参数</p></li><li><p> 将跳转网页的url改造成：<code>/goodscontent&amp;phone</code>,</p></li><li><p>目标网页如下改造：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">data</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="attr">status</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line"><span class="attr">methods</span>: &#123;</span><br><span class="line">    <span class="function"><span class="title">setParams</span>(<span class="params">val</span>)</span> &#123;</span><br><span class="line">      <span class="comment">//获取url传过来的参数</span></span><br><span class="line">      <span class="built_in">this</span>.status = val.params.status;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">&quot;status:&quot;</span>, <span class="built_in">this</span>.status);</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="attr">watch</span>: &#123;</span><br><span class="line">    <span class="attr">$route</span>: <span class="string">&quot;setParams&quot;</span>, <span class="comment">//监控url里参数的变化</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>注意这里新增的<code>watch</code>（监听器），用于监听某个值或属性的变化。此案例中需要监听通过vue-router跳转过来的url里的参params，再把识别到的params设置变量。</p></li></ul><h3 id="2-通过query"><a href="#2-通过query" class="headerlink" title="2. 通过query"></a>2. 通过query</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JS瀑布流插件——salvattore</title>
      <link href="/2022/02/23/JS%E7%80%91%E5%B8%83%E6%B5%81%E6%8F%92%E4%BB%B6--salvattore/"/>
      <url>/2022/02/23/JS%E7%80%91%E5%B8%83%E6%B5%81%E6%8F%92%E4%BB%B6--salvattore/</url>
      
        <content type="html"><![CDATA[<p><img src="../../../../img/640.webp" alt="img"></p><p>瀑布流插件 – salvattore [音标：赛欧维特] ，这里给大家简单解释一下用法。 </p><p> 设计思想</p><p>在H5的布局中，只有流式布局，要么是块元素的独占一行，如下图：<img src="../../../../img/640-16455977816672.webp" alt="1516763230244010654.png"></p><p>或者是浮动的，向右排列：</p><p><img src="../../../../img/640-16455977929904.webp" alt="1516763203589009739.png"></p><p>而 savlattore实现的瀑布流是下面的样子。</p><p><img src="../../../../img/640-16455978029496.webp" alt="1516763402060076542.png"></p><p>看出区别没？容器1和容器4之间是直接排列下去的，而不因为容器3的高度，中间就会有很大的缝隙。</p><p>如果没理解，请认真看看上面三个图的区别。</p><p>那么salvattore是如何实现的呢？请看下图：</p><p><img src="../../../../img/640-16455978109728.webp" alt="1516764462396083093.png"></p><p>发现奥秘没？salvattore其实是动态生成了若干个div，然后将页面元素塞入其中，就实现了瀑布流了。</p><p>用法</p><p>现在介绍一下怎么使用。</p><p>1 页面引入salvattore.js</p><p>推荐采用bootcdn作为源。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&lt; script  src = &quot;https://cdn.bootcss.com/salvattore/1.0.9/salvattore.min.js&quot; &gt;&lt;/ script &gt;</span><br></pre></td></tr></table></figure><p>2 将你的所有的容器都放入一个div中，这个div增加一个属性 data-columns<br>&lt; div  id = “fh5co-board”  data-columns&gt;</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt; div  class = &quot;item&quot; &gt;</span><br><span class="line">    &lt; div  class = &quot;animate-box&quot; &gt;</span><br><span class="line">        &lt; a  href = &quot;#&quot;  class = &quot;image-popup fh5co-board-img&quot; &gt;</span><br><span class="line">        &lt; img  src = &quot;http://demo.cssmoban.com/cssthemes3/ft5_11_hydrogen/images/img_1.jpg&quot;  alt = &quot;Free HTML5 Bootstrap template&quot; &gt;&lt;/ a &gt;</span><br><span class="line">    &lt;/ div &gt;</span><br><span class="line">    &lt; div  class = &quot;fh5co-desc&quot; &gt;一个魔幻效果的摄影网站模板&lt; br &gt;凡科建站 [科技]&lt;/ div &gt;</span><br><span class="line">&lt;/ div &gt;</span><br><span class="line">&lt; div  class = &quot;item&quot; &gt;</span><br><span class="line">    &lt; div  class = &quot;animate-box&quot; &gt;</span><br><span class="line">        &lt; a  href = &quot;#&quot;  class = &quot;image-popup fh5co-board-img&quot; &gt;</span><br><span class="line">        &lt; img  src = &quot;http://demo.cssmoban.com/cssthemes3/ft5_11_hydrogen/images/img_2.jpg&quot;  alt = &quot;Free HTML5 Bootstrap template&quot; &gt;&lt;/ a &gt;</span><br><span class="line">    &lt;/ div &gt;</span><br><span class="line">    &lt; div  class = &quot;fh5co-desc&quot; &gt;一个魔幻效果的摄影网站模板&lt; br &gt;凡科建站 [科技]&lt;/ div &gt;</span><br><span class="line">&lt;/ div &gt;</span><br><span class="line">&lt; div  class = &quot;item&quot; &gt;</span><br><span class="line">    &lt; div  class = &quot;animate-box&quot; &gt;</span><br><span class="line">        &lt; a  href = &quot;#&quot;  class = &quot;image-popup fh5co-board-img&quot; &gt;</span><br><span class="line">        &lt; img  src = &quot;http://demo.cssmoban.com/cssthemes3/ft5_11_hydrogen/images/img_6.jpg&quot;  alt = &quot;Free HTML5 Bootstrap template&quot; &gt;&lt;/ a &gt;</span><br><span class="line">    &lt;/ div &gt;</span><br><span class="line">    &lt; div  class = &quot;fh5co-desc&quot; &gt;一个魔幻效果的摄影网站模板&lt; br &gt;凡科建站 [科技]&lt;/ div &gt;</span><br><span class="line">&lt;/ div &gt;</span><br><span class="line">&lt; div  class = &quot;item&quot; &gt;</span><br><span class="line">    &lt; div  class = &quot;animate-box&quot; &gt;</span><br><span class="line">        &lt; a  href = &quot;#&quot;  class = &quot;image-popup fh5co-board-img&quot; &gt;</span><br><span class="line">        &lt; img  src = &quot;http://demo.cssmoban.com/cssthemes3/ft5_11_hydrogen/images/img_3.jpg&quot;  alt = &quot;Free HTML5 Bootstrap template&quot; &gt;&lt;/ a &gt;</span><br><span class="line">    &lt;/ div &gt;</span><br><span class="line">    &lt; div  class = &quot;fh5co-desc&quot; &gt;一个魔幻效果的摄影网站模板&lt; br &gt;凡科建站 [科技]&lt;/ div &gt;</span><br><span class="line">&lt;/ div &gt;</span><br><span class="line">&lt; div  class = &quot;item&quot; &gt;</span><br><span class="line">    &lt; div  class = &quot;animate-box&quot; &gt;</span><br><span class="line">        &lt; a  href = &quot;#&quot;  class = &quot;image-popup fh5co-board-img&quot; &gt;</span><br><span class="line">        &lt; img  src = &quot;http://demo.cssmoban.com/cssthemes3/ft5_11_hydrogen/images/img_4.jpg&quot;  alt = &quot;Free HTML5 Bootstrap template&quot; &gt;&lt;/ a &gt;</span><br><span class="line">    &lt;/ div &gt;</span><br><span class="line">    &lt; div  class = &quot;fh5co-desc&quot; &gt;一个魔幻效果的摄影网站模板&lt; br &gt;凡科建站 [科技]&lt;/ div &gt;</span><br><span class="line">&lt;/ div &gt;</span><br><span class="line">&lt; div  class = &quot;item&quot; &gt;</span><br><span class="line">    &lt; div  class = &quot;animate-box&quot; &gt;</span><br><span class="line">        &lt; a  href = &quot;#&quot;  class = &quot;image-popup fh5co-board-img&quot; &gt;</span><br><span class="line">        &lt; img  src = &quot;http://demo.cssmoban.com/cssthemes3/ft5_11_hydrogen/images/img_5.jpg&quot;  alt = &quot;Free HTML5 Bootstrap template&quot; &gt;&lt;/ a &gt;</span><br><span class="line">    &lt;/ div &gt;</span><br><span class="line">    &lt; div  class = &quot;fh5co-desc&quot; &gt;一个魔幻效果的摄影网站模板&lt; br &gt;凡科建站 [科技]&lt;/ div &gt;</span><br><span class="line">&lt;/ div &gt;</span><br><span class="line">&lt; div  class = &quot;item&quot; &gt;</span><br><span class="line">    &lt; div  class = &quot;animate-box&quot; &gt;</span><br><span class="line">        &lt; a  href = &quot;#&quot;  class = &quot;image-popup fh5co-board-img&quot; &gt;</span><br><span class="line">        &lt; img  src = &quot;http://demo.cssmoban.com/cssthemes3/ft5_11_hydrogen/images/img_7.jpg&quot;  alt = &quot;Free HTML5 Bootstrap template&quot; &gt;&lt;/ a &gt;</span><br><span class="line">    &lt;/ div &gt;</span><br><span class="line">    &lt; div  class = &quot;fh5co-desc&quot; &gt;一个魔幻效果的摄影网站模板&lt; br &gt;凡科建站 [科技]&lt;/ div &gt;</span><br><span class="line">&lt;/ div &gt;</span><br><span class="line">&lt; div  class = &quot;item&quot; &gt;</span><br><span class="line">    &lt; div  class = &quot;animate-box&quot; &gt;</span><br><span class="line">        &lt; a  href = &quot;#&quot;  class = &quot;image-popup fh5co-board-img&quot; &gt;</span><br><span class="line">        &lt; img  src = &quot;http://demo.cssmoban.com/cssthemes3/ft5_11_hydrogen/images/img_8.jpg&quot;  alt = &quot;Free HTML5 Bootstrap template&quot; &gt;&lt;/ a &gt;</span><br><span class="line">    &lt;/ div &gt;</span><br><span class="line">    &lt; div  class = &quot;fh5co-desc&quot; &gt;一个魔幻效果的摄影网站模板&lt; br &gt;凡科建站 [科技]&lt;/ div &gt;</span><br><span class="line">&lt;/ div &gt;</span><br><span class="line">&lt;/ div &gt;</span><br></pre></td></tr></table></figure><p>这样就可以用了，salvattore的引入和初始化非常简单。</p><p>3 自定义一个salvattore的css样式</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* Base styles */</span></span><br><span class="line"><span class="selector-class">.column</span> &#123;</span><br><span class="line">     <span class="attribute">float</span> :  left ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@media</span>  screen  <span class="keyword">and</span> ( <span class="attribute">max-width</span> :  <span class="number">300px</span> ) &#123;</span><br><span class="line">     <span class="selector-class">.column</span> &#123;</span><br><span class="line">         <span class="attribute">float</span> :  none ;</span><br><span class="line">         <span class="attribute">position</span> :  relative ;</span><br><span class="line">         <span class="attribute">clear</span> :  both ;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.size</span> -<span class="number">1</span> of <span class="number">4</span>  &#123;</span><br><span class="line">     <span class="attribute">width</span> :  <span class="number">25%</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.size</span> -<span class="number">1</span> of <span class="number">3</span>  &#123;</span><br><span class="line">     <span class="attribute">width</span> :  <span class="number">33.333%</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.size</span> -<span class="number">1</span> of <span class="number">2</span>  &#123;</span><br><span class="line">     <span class="attribute">width</span> :  <span class="number">50%</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#fh</span> <span class="number">5</span> co-board<span class="selector-attr">[data-columns]</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">     <span class="attribute">content</span> :  <span class="string">&#x27;4 .column.size-1of4&#x27;</span> ;</span><br><span class="line">     <span class="attribute">display</span> :  none ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Configurate salvattore with media queries */</span></span><br><span class="line"><span class="keyword">@media</span>  screen  <span class="keyword">and</span> ( <span class="attribute">max-width</span> :  <span class="number">300px</span> ) &#123;</span><br><span class="line">     <span class="selector-id">#fh</span> <span class="number">5</span> co-board<span class="selector-attr">[data-columns]</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">         <span class="attribute">content</span> :  <span class="string">&#x27;1 .column&#x27;</span> ; </span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span>  screen  <span class="keyword">and</span> ( <span class="attribute">min-width</span> :  <span class="number">301px</span> ) <span class="keyword">and</span> ( <span class="attribute">max-width</span> :  <span class="number">700px</span> ) &#123;</span><br><span class="line">     <span class="selector-id">#fh</span> <span class="number">5</span> co-board<span class="selector-attr">[data-columns]</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">         <span class="attribute">content</span> :  <span class="string">&#x27;2 .column.size-1of2&#x27;</span> ;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span>  screen  <span class="keyword">and</span> ( <span class="attribute">min-width</span> :  <span class="number">701px</span> ) <span class="keyword">and</span> ( <span class="attribute">max-width</span> :  <span class="number">850px</span> ) &#123;</span><br><span class="line">     <span class="selector-id">#fh</span> <span class="number">5</span> co-board<span class="selector-attr">[data-columns]</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">         <span class="attribute">content</span> :  <span class="string">&#x27;3 .column.size-1of3&#x27;</span> ;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">@media</span>  screen  <span class="keyword">and</span> ( <span class="attribute">min-width</span> :  <span class="number">851px</span> ) &#123;</span><br><span class="line">     <span class="selector-id">#fh</span> <span class="number">5</span> co-board<span class="selector-attr">[data-columns]</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">         <span class="attribute">content</span> :  <span class="string">&#x27;4 .column.size-1of4&#x27;</span> ;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的css解释一下：</p><p>1 目的是在不同大小的浏览器上展示不同列数的瀑布流</p><p>PC机上，展示4列，平板上3列，一般手机上2列，如果你的手机太小了，就1列了。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span>  screen  <span class="keyword">and</span> ( <span class="attribute">max-width</span> :  <span class="number">300px</span> ) &#123;</span><br><span class="line">     <span class="selector-class">.column</span> &#123;</span><br><span class="line">         <span class="attribute">float</span> :  none ;</span><br><span class="line">         <span class="attribute">position</span> :  relative ;</span><br><span class="line">         <span class="attribute">clear</span> :  both ;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一句是说，如果浏览器宽度小于300px的话，.column的样式就是这样的。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#fh</span> <span class="number">5</span> co-board<span class="selector-attr">[data-columns]</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">     <span class="attribute">content</span> :  <span class="string">&#x27;4 .column.size-1of4&#x27;</span> ;</span><br><span class="line">     <span class="attribute">display</span> :  none ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这是干嘛呢？原来，salvattore在创建多个列的手法是这样的，它动态在要瀑布流显示的多个容器的前面增加一个文本元素，这个元素的内容会决定要创建几列瀑布流。这句话的意思是，id为fh5co-board(#fh5co-board)，且有属性名为 data-columns( [data-columns] )的标签将在其前面(::before)增加一个文本元素，元素的内容(content)是’4 .column.size-1of4’的文字，但这行文字是隐藏不可见(display:none)的。</p><p>这里面写的 4 .column.size-1of4  的格式内容，是固定的，salvattore看到这样的文字就知道该处理成4列。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span>  screen  <span class="keyword">and</span> ( <span class="attribute">min-width</span> :  <span class="number">701px</span> ) <span class="keyword">and</span> ( <span class="attribute">max-width</span> :  <span class="number">850px</span> ) &#123;</span><br><span class="line">     <span class="selector-id">#fh</span> <span class="number">5</span> co-board<span class="selector-attr">[data-columns]</span><span class="selector-pseudo">::before</span> &#123;</span><br><span class="line">         <span class="attribute">content</span> :  <span class="string">&#x27;3 .column.size-1of3&#x27;</span> ;</span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这句的 意思是在701px到850px宽度的浏览器上，瀑布流就处理成3列了。</p><p> 动态添加容器</p><p>另外，如何动态的添加容器呢？</p><p>代码如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span>  conter=<span class="built_in">document</span>.querySelector( <span class="string">&#x27;#fh5co-board&#x27;</span> );</span><br><span class="line">     <span class="keyword">var</span>  hts=[];</span><br><span class="line">     <span class="keyword">for</span> ( <span class="keyword">var</span>  i=<span class="number">1</span>;i&lt;=<span class="number">29</span>;i++)&#123;</span><br><span class="line">         hts[i-<span class="number">1</span>]=$(<span class="string">`&lt;div class= &quot;item bounceIn animated&quot; &gt; &lt;div class= &quot;animate-box&quot; &gt;&lt;a href= &quot;#&quot;  class= &quot;image-popup fh5co-board-img&quot;  title= &quot;Lorem&quot; &gt;</span></span><br><span class="line"><span class="string">             &lt;img src= &quot;http://demo.cssmoban.com/cssthemes3/ft5_11_hydrogen/images/img_`</span>+i+<span class="string">`.jpg&quot;  alt= &quot;Free HTML5 Bootstrap template&quot; &gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string">         &lt;/div&gt;&lt;div class= &quot;fh5co-desc&quot; &gt;一个魔幻效果的摄影网站模板&lt;br&gt;凡科建站 [科技]&lt;/div&gt; &lt;/div&gt;`</span>)[<span class="number">0</span>];</span><br><span class="line">     &#125;</span><br><span class="line">salvattore[ <span class="string">&#x27;append_elements&#x27;</span> ](conter, hts);</span><br></pre></td></tr></table></figure><p>1 采用原生js获得包含所有容器的div对象。上例：</p><p><code>var conter=document.querySelector(&#39;#fh5co-board&#39;);</code></p><p>这里一定要注意，是采用原生方式获取的，而不是jquery，如果采用jquery方式代码如下：</p><p><code>var conter=$(&#39;#fh5co-board&#39;)[0];</code></p><p>2 创建一个数组存放动态的容器</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span>  hts=[];</span><br><span class="line"><span class="keyword">for</span> ( <span class="keyword">var</span>  i=<span class="number">1</span>;i&lt;=<span class="number">29</span>;i++)&#123;</span><br><span class="line">   hts[i-<span class="number">1</span>]=$(<span class="string">`&lt;div class= &quot;item bounceIn animated&quot; &gt; </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   &lt;div class= &quot;animate-box&quot; &gt;</span></span><br><span class="line"><span class="string">   &lt;a href= &quot;#&quot;  class= &quot;image-popup fh5co-board-img&quot;  title= &quot;Lorem&quot; &gt;</span></span><br><span class="line"><span class="string">   &lt;img src= &quot;http://demo.cssmoban.com/cssthemes3/ft5_11_hydrogen/images/img_<span class="subst">$&#123;i&#125;</span>.jpg&quot;</span></span><br><span class="line"><span class="string">    alt= &quot;Free HTML5 Bootstrap template&quot; &gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string">   &lt;/div&gt;&lt;div class= &quot;fh5co-desc&quot; &gt;一个魔幻效果的摄影网站模板&lt;br&gt;凡科建站 </span></span><br><span class="line"><span class="string">    [科技]&lt;/div&gt; &lt;/div&gt;`</span>)[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">salvattore.append_elements(conter, hts);</span><br></pre></td></tr></table></figure><p>思路：</p><ul><li>首先获取容器外面的div的dom对象</li><li>动态创建多个容器，并放到一个数组中</li><li>salvattore方法的append_elements方法，将数组追加到div的最后面。</li></ul><p>这里留意一下几个问题：</p><p>2.1 hts是一个数组</p><p>2.2 hts[i-1] 直接向数组中第一个元素赋值。javascript真是方便，不需要分配数组空间，直接就往数组里面插入数据。爽得很。</p><p>2.3 jquery方式创建dom对象</p><p><code>$(html字符串)</code> ，jquery真是好用，如果用原生js创建dom对象就烦死了，但jquery直接写html代码就可以了。</p><p>不过，这样得到的对象不是原生dom对象，而是原生dom对象被封装后的jquery对象。</p><p>因此改写为：<code>$(html字符串)[0]</code>  以获得原生dom对象。</p><p>2.4 ES6的模板字符串</p><p>本例中的字符串很有意思，千万注意以下特点：</p><ul><li><p>很长的文字是可以换行的，</p></li><li><p>字符串的开头结尾不是用引号(‘ 或 “ )  而是 ` ，一个小撇，在键盘 1 左侧那个 ~ 按键</p></li><li><p>中间插入变量没用拼接，而是采用${i} </p></li></ul><p>有兴趣的老友可以自己百度一下模板字符串，ES6的特性。</p><p>总结</p><p>基本，salvattore的用法就是这么简单。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jQuery-跳转到页面指定位置</title>
      <link href="/2022/02/12/jQuery-%E8%B7%B3%E8%BD%AC%E5%88%B0%E9%A1%B5%E9%9D%A2%E6%8C%87%E5%AE%9A%E4%BD%8D%E7%BD%AE/"/>
      <url>/2022/02/12/jQuery-%E8%B7%B3%E8%BD%AC%E5%88%B0%E9%A1%B5%E9%9D%A2%E6%8C%87%E5%AE%9A%E4%BD%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//jQuery</span></span><br><span class="line">$(<span class="string">&quot;#damu-nav &gt; li &gt; a&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;  <span class="comment">//点击到这里的a标签触发下面的方法</span></span><br><span class="line">    <span class="keyword">var</span> href = $(<span class="built_in">this</span>).attr(<span class="string">&quot;href&quot;</span>);  <span class="comment">//获取到a标签href属性的内容</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;#damu-list &gt; li &gt; a[href=&quot;</span>+(href)+<span class="string">&quot;]&quot;</span>);  <span class="comment">//输出：#chrome</span></span><br><span class="line">    $(<span class="string">&quot;#damu-list &gt; li &gt; a[href=&quot;</span>+(href)+<span class="string">&quot;]&quot;</span>).tab(<span class="string">&#x27;show&#x27;</span>);<span class="comment">//切换到对应标签页的具体页</span></span><br><span class="line">    $(<span class="built_in">document</span>).scrollTop($(<span class="string">&quot;#damu-tab&quot;</span>).offset().top)<span class="comment">//页面自动跳到对应div的位置</span></span><br><span class="line">    e.preventDefault(); <span class="comment">//防止链接打开 URL：</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【转载】JavaScript--localStorage</title>
      <link href="/2022/02/11/JavaScript--localStorage/"/>
      <url>/2022/02/11/JavaScript--localStorage/</url>
      
        <content type="html"><![CDATA[<article class="baidu_pl">        <div id="article_content" class="article_content clearfix">        <link rel="stylesheet" href="https://csdnimg.cn/release/blogv2/dist/mdeditor/css/editerView/ck_htmledit_views-d7093e7f7c.css">                <div id="content_views" class="htmledit_views">                    <p><strong>一、什么是localStorage、sessionStorage</strong></p> <p>在<a href="https://so.csdn.net/so/search?q=HTML5&amp;spm=1001.2101.3001.7020" target="_blank" class="hl hl-1" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=HTML5&amp;spm=1001.2101.3001.7020&quot;}">HTML5</a>中，新加入了一个localStorage特性，这个特性主要是用来作为本地存储来使用的，解决了cookie存储空间不足的问题(cookie中每条cookie的存储空间为4k)，localStorage中一般浏览器支持的是5M大小，这个在不同的浏览器中localStorage会有所不同。</p> <p>&nbsp;</p> <p><strong>二、localStorage的优势与局限</strong></p> <p><strong>localStorage的优势</strong></p> <p>1、<a href="https://so.csdn.net/so/search?q=localStorage&amp;spm=1001.2101.3001.7020" target="_blank" class="hl hl-1" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.7020&quot;,&quot;dest&quot;:&quot;https://so.csdn.net/so/search?q=localStorage&amp;spm=1001.2101.3001.7020&quot;}">localStorage</a>拓展了cookie的4K限制</p> <p>2、localStorage会可以将第一次请求的数据直接存储到本地，这个相当于一个5M大小的针对于前端页面的数据库，相比于cookie可以节约带宽，但是这个却是只有在高版本的浏览器中才支持的</p> <p><strong>localStorage的局限</strong></p> <p>1、浏览器的大小不统一，并且在IE8以上的IE版本才支持localStorage这个属性</p> <p>2、目前所有的浏览器中都会把localStorage的值类型限定为string类型，这个在对我们日常比较常见的JSON对象类型需要一些转换</p> <p>3、localStorage在浏览器的隐私模式下面是不可读取的</p> <p>4、localStorage本质上是对字符串的读取，如果存储内容多的话会消耗内存空间，会导致页面变卡</p> <p>5、localStorage不能被爬虫抓取到</p> <p>localStorage与sessionStorage的唯一一点区别就是localStorage属于永久性存储，而sessionStorage属于当会话结束的时候，sessionStorage中的键值对会被清空</p> <p>这里我们以localStorage来分析</p> <p>&nbsp;</p> <p><strong>三、localStorage的使用</strong></p> <p>localStorage的浏览器支持情况：</p> <p><img alt="" class="has" src="https://images2015.cnblogs.com/blog/728493/201606/728493-20160626102341735-27421870.jpg"></p> <p>这里要特别声明一下，如果是使用IE浏览器的话，那么就要UserData来作为存储，这里主要讲解的是localStorage的内容，所以userData不做过多的解释，而且以博主个人的看法，也是没有必要去学习UserData的使用来的，因为目前的IE6/IE7属于淘汰的位置上，而且在如今的很多页面开发都会涉及到HTML5\CSS3等新兴的技术，所以在使用上面一般我们不会去对其进行兼容</p> <p>首先在使用localStorage的时候，我们需要判断<strong>浏览器是否支持localStorage这个属性</strong></p> <pre class="has" name="code"><code class="hljs language-javascript"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">if</span>(！<span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>)&#123;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-title function_">alert</span>(<span class="hljs-string">"浏览器支持localstorage"</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        &#125;<span class="hljs-keyword">else</span>&#123;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">//主逻辑业务</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        &#125;</div></div></li></ol></code><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}" onclick="hljs.copyCode(event)"></div></pre> <p>localStorage的写入，<strong>localStorage的写入</strong>有三种方法，这里就一一介绍一下</p> <pre class="has" name="code"><code class="hljs language-javascript"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">if</span>(！<span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>)&#123;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-title function_">alert</span>(<span class="hljs-string">"浏览器支持localstorage"</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        &#125;<span class="hljs-keyword">else</span>&#123;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">var</span> storage=<span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">//写入a字段</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage[<span class="hljs-string">"a"</span>]=<span class="hljs-number">1</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">//写入b字段</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage.<span class="hljs-property">a</span>=<span class="hljs-number">1</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">//写入c字段</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">"c"</span>,<span class="hljs-number">3</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> storage[<span class="hljs-string">"a"</span>]);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> storage[<span class="hljs-string">"b"</span>]);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> storage[<span class="hljs-string">"c"</span>]);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        &#125;</div></div></li></ol></code><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}" onclick="hljs.copyCode(event)"></div></pre> <p>运行后的结果如下：</p> <p><img alt="" class="has" src="https://images2015.cnblogs.com/blog/728493/201606/728493-20160626105220610-1095267293.png"></p> <p>这里要特别说明一下localStorage的使用也是遵循同源策略的，所以不同的网站直接是不能共用相同的localStorage</p> <p>最后在控制台上面打印出来的结果是:</p> <p><img alt="" class="has" src="https://images2015.cnblogs.com/blog/728493/201606/728493-20160626110312391-621359725.png"></p> <p>不知道各位读者有没有注意到，刚刚存储进去的是int类型，但是打印出来却是string类型，这个与localStorage本身的特点有关，localStorage只支持string类型的存储。</p> <p>localStorage的读取</p> <pre class="has" name="code"><code class="hljs language-javascript"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">if</span>(!<span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>)&#123;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-title function_">alert</span>(<span class="hljs-string">"浏览器支持localstorage"</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        &#125;<span class="hljs-keyword">else</span>&#123;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">var</span> storage=<span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">//写入a字段</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage[<span class="hljs-string">"a"</span>]=<span class="hljs-number">1</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">//写入b字段</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage.<span class="hljs-property">a</span>=<span class="hljs-number">1</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">//写入c字段</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">"c"</span>,<span class="hljs-number">3</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> storage[<span class="hljs-string">"a"</span>]);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> storage[<span class="hljs-string">"b"</span>]);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> storage[<span class="hljs-string">"c"</span>]);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">//第一种方法读取</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">var</span> a=storage.<span class="hljs-property">a</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(a);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">//第二种方法读取</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">var</span> b=storage[<span class="hljs-string">"b"</span>];</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="19"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(b);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="20"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">//第三种方法读取</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="21"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">var</span> c=storage.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">"c"</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="22"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(c);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="23"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        &#125;</div></div></li></ol></code><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}" onclick="hljs.copyCode(event)"></div></pre> <p>这里面是三种对localStorage的读取，其中官方推荐的是getItem\setItem这两种方法对其进行存取，不要问我这个为什么，因为这个我也不知道</p> <p>我之前说过localStorage就是相当于一个前端的数据库的东西，数据库主要是增删查改这四个步骤，这里的读取和写入就相当于增、查的这两个步骤</p> <p>下面我们就来说一说<strong>localStorage的删、改这两个步骤</strong></p> <p>改这个步骤比较好理解，思路跟重新更改全局变量的值一样，这里我们就以一个为例来简单的说明一下</p> <pre class="has" name="code"><code class="hljs language-javascript"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">if</span>(!<span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>)&#123;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-title function_">alert</span>(<span class="hljs-string">"浏览器支持localstorage"</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        &#125;<span class="hljs-keyword">else</span>&#123;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">var</span> storage=<span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">//写入a字段</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage[<span class="hljs-string">"a"</span>]=<span class="hljs-number">1</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">//写入b字段</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage.<span class="hljs-property">b</span>=<span class="hljs-number">1</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">//写入c字段</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">"c"</span>,<span class="hljs-number">3</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(storage.<span class="hljs-property">a</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">// console.log(typeof storage["a"]);</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">// console.log(typeof storage["b"]);</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="14"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">// console.log(typeof storage["c"]);</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="15"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">/*分割线*/</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="16"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage.<span class="hljs-property">a</span>=<span class="hljs-number">4</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="17"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(storage.<span class="hljs-property">a</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="18"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        &#125;</div></div></li></ol></code><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}" onclick="hljs.copyCode(event)"></div></pre> <p>这个在控制台上面我们就可以看到已经a键已经被更改为4了</p> <p><strong>localStorage的删除</strong></p> <p>1、将localStorage的所有内容清除</p> <pre class="has" name="code"><code class="hljs language-javascript"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">var</span> storage=<span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage.<span class="hljs-property">a</span>=<span class="hljs-number">1</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">"c"</span>,<span class="hljs-number">3</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(storage);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage.<span class="hljs-title function_">clear</span>();</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(storage);</div></div></li></ol></code><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}" onclick="hljs.copyCode(event)"></div></pre> <p>2、 将localStorage中的某个键值对删除</p> <pre class="has" name="code"><code class="hljs language-javascript"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">var</span> storage=<span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage.<span class="hljs-property">a</span>=<span class="hljs-number">1</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">"c"</span>,<span class="hljs-number">3</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(storage);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage.<span class="hljs-title function_">removeItem</span>(<span class="hljs-string">"a"</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(storage.<span class="hljs-property">a</span>);</div></div></li></ol></code><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}" onclick="hljs.copyCode(event)"></div></pre> <p>控制台查看结果</p> <p><img alt="" class="has" src="https://images2015.cnblogs.com/blog/728493/201606/728493-20160626115232188-571332017.png"></p> <p><strong>localStorage的键获取</strong></p> <pre class="has" name="code"><code class="hljs language-javascript"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">var</span> storage=<span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storage.<span class="hljs-property">a</span>=<span class="hljs-number">1</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; storage.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">"c"</span>,<span class="hljs-number">3</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>;i&lt;storage.<span class="hljs-property">length</span>;i++)&#123;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="hljs-keyword">var</span> key=storage.<span class="hljs-title function_">key</span>(i);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(key);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &#125;</div></div></li></ol></code><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}" onclick="hljs.copyCode(event)"></div></pre> <p>使用key()方法，向其中出入索引即可获取对应的键</p> <p><strong>四、localStorage其他注意事项</strong></p> <p>&nbsp;一般我们会将JSON存入localStorage中，但是在localStorage会自动将localStorage转换成为字符串形式</p> <p>这个时候我们可以使用JSON.stringify()这个方法，来将JSON转换成为JSON字符串</p> <pre class="has" name="code"><code class="hljs language-javascript"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">if</span>(!<span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>)&#123;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-title function_">alert</span>(<span class="hljs-string">"浏览器支持localstorage"</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        &#125;<span class="hljs-keyword">else</span>&#123;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">var</span> storage=<span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">var</span> data=&#123;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-attr">name</span>:<span class="hljs-string">'xiecanyong'</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-attr">sex</span>:<span class="hljs-string">'man'</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-attr">hobby</span>:<span class="hljs-string">'program'</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            &#125;;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">var</span> d=<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">"data"</span>,d);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(storage.<span class="hljs-property">data</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="13"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">        &#125;</div></div></li></ol></code><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}" onclick="hljs.copyCode(event)"></div></pre> <p>读取之后要将JSON字符串转换成为JSON对象，使用JSON.parse()方法</p> <pre class="has" name="code"><code class="hljs language-javascript"><ol class="hljs-ln" style="width:100%"><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="1"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line"><span class="hljs-keyword">var</span> storage=<span class="hljs-variable language_">window</span>.<span class="hljs-property">localStorage</span>;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="2"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">var</span> data=&#123;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="3"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-attr">name</span>:<span class="hljs-string">'xiecanyong'</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="4"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-attr">sex</span>:<span class="hljs-string">'man'</span>,</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="5"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">                <span class="hljs-attr">hobby</span>:<span class="hljs-string">'program'</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="6"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            &#125;;</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="7"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">var</span> d=<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(data);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="8"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            storage.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">"data"</span>,d);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="9"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-comment">//将JSON字符串转换成为JSON对象输出</span></div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="10"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">var</span> json=storage.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">"data"</span>);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="11"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-keyword">var</span> jsonObj=<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(json);</div></div></li><li><div class="hljs-ln-numbers"><div class="hljs-ln-line hljs-ln-n" data-line-number="12"></div></div><div class="hljs-ln-code"><div class="hljs-ln-line">            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-keyword">typeof</span> jsonObj);</div></div></li></ol></code><div class="hljs-button {2}" data-title="复制" data-report-click="{&quot;spm&quot;:&quot;1001.2101.3001.4259&quot;}" onclick="hljs.copyCode(event)"></div></pre> <p><img alt="" class="has" src="https://images2015.cnblogs.com/blog/728493/201606/728493-20160626124919578-638115637.png"></p> <p>打印出来是Object对象</p> <p>另外还有一点要注意的是，其他类型读取出来也要进行转换</p>                </div><div><div></div></div>        </div><pre><code>&lt;/article&gt;</code></pre><p>博文原地址：<a href="https://blog.csdn.net/mp624183768/article/details/87887320">链接</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序之表单验证及前端实现笔记</title>
      <link href="/2022/02/10/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%E5%8F%8A%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/02/10/%E8%A1%A8%E5%8D%95%E9%AA%8C%E8%AF%81%E5%8F%8A%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="html接收错误信息，并以弹窗的方式告知用户"><a href="#html接收错误信息，并以弹窗的方式告知用户" class="headerlink" title="html接收错误信息，并以弹窗的方式告知用户"></a>html接收错误信息，并以弹窗的方式告知用户</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">view</span> <span class="attr">aria-role</span>=<span class="string">&quot;dialog&quot;</span> <span class="attr">aria-modal</span>=<span class="string">&quot;true&quot;</span> <span class="attr">class</span>=<span class="string">&quot;fadeIn&quot;</span> <span class="attr">wx:if</span>=<span class="string">&quot;&#123;&#123;Dialog&#125;&#125;&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--弹窗--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-mask&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-dialog &quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-dialog__hd&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span> <span class="attr">class</span>=<span class="string">&quot;weui-dialog__title&quot;</span>&gt;</span>填写信息错误<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-dialog__bd&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align: justify;&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;text&quot;</span>&gt;</span>错误信息如下：<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">wx:for</span>=<span class="string">&quot;&#123;&#123;errorMsg&#125;&#125;&quot;</span> <span class="attr">wx:key</span>=<span class="string">&quot;key&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">view</span>&gt;</span>&#123;&#123;index+1&#125;&#125;.&#123;&#123;item.msg&#125;&#125;<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">view</span> <span class="attr">class</span>=<span class="string">&quot;weui-dialog__ft&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">view</span> <span class="attr">aria-role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;weui-dialog__btn weui-dialog__btn_default&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;back&quot;</span>&gt;</span>返回修改<span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">view</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="JavaScript实现表单验证"><a href="#JavaScript实现表单验证" class="headerlink" title="JavaScript实现表单验证"></a>JavaScript实现表单验证</h3><h4 id="页面JS业务逻辑"><a href="#页面JS业务逻辑" class="headerlink" title="页面JS业务逻辑"></a>页面JS业务逻辑</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> WxValidate <span class="keyword">from</span> <span class="string">&quot;../WxValidate&quot;</span>;</span><br><span class="line"></span><br><span class="line">Page(&#123;</span><br><span class="line">  <span class="attr">data</span>: &#123;</span><br><span class="line">    <span class="attr">nname</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">//姓名</span></span><br><span class="line">    <span class="attr">email</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">//邮箱</span></span><br><span class="line">    <span class="attr">phone</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">//手机号</span></span><br><span class="line">    <span class="attr">idNum</span>: <span class="string">&#x27;&#x27;</span>, <span class="comment">//身份证号</span></span><br><span class="line">    <span class="attr">Dialog</span>: <span class="literal">false</span>, <span class="comment">//弹窗通过此值判断是否显示 wx:if=&quot;&#123;&#123;Dialog&#125;&#125;</span></span><br><span class="line">    <span class="attr">errorMsg</span>: []  <span class="comment">//存放信息错误项提示信息</span></span><br><span class="line">  &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="title">onLoad</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.initValidate(); <span class="comment">//初始化表单验证规则</span></span><br><span class="line">  &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//初始化验证规则</span></span><br><span class="line">    <span class="function"><span class="title">initValidate</span>(<span class="params"></span>)</span> &#123;  </span><br><span class="line">        <span class="keyword">let</span> rules = &#123;</span><br><span class="line">          <span class="attr">name</span>: &#123;</span><br><span class="line">            <span class="attr">required</span>: <span class="literal">true</span>,    <span class="comment">//是否必填</span></span><br><span class="line">            <span class="attr">maxlength</span>: <span class="number">10</span>      <span class="comment">//验证规则</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">email</span>: &#123;</span><br><span class="line">            <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">email</span>: <span class="literal">true</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">phone</span>: &#123;</span><br><span class="line">            <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">tel</span>: <span class="literal">true</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">id</span>: &#123;</span><br><span class="line">            <span class="attr">required</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">idcard</span>: <span class="literal">true</span></span><br><span class="line">          &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> message = &#123;</span><br><span class="line">          <span class="attr">name</span>: &#123;</span><br><span class="line">            <span class="attr">required</span>: <span class="string">&#x27;姓名项为空&#x27;</span>,</span><br><span class="line">            <span class="attr">maxlength</span>: <span class="string">&#x27;输入的姓名无效&#x27;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">email</span>: &#123;</span><br><span class="line">            <span class="attr">required</span>: <span class="string">&#x27;邮箱项为空&#x27;</span>,</span><br><span class="line">            <span class="attr">email</span>: <span class="string">&quot;输入的电子邮箱地址有误&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">phone</span>: &#123;</span><br><span class="line">            <span class="attr">required</span>: <span class="string">&quot;手机号码项为空&quot;</span>,</span><br><span class="line">            <span class="attr">tel</span>: <span class="string">&#x27;输入的手机号码有误&#x27;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">id</span>: &#123;</span><br><span class="line">            <span class="attr">required</span>: <span class="string">&quot;身份证号为空&quot;</span>,</span><br><span class="line">            <span class="attr">idcard</span>: <span class="string">&quot;输入的身份证号码有误&quot;</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//实例化当前的验证规则和提示消息</span></span><br><span class="line">        <span class="built_in">this</span>.WxValidate = <span class="keyword">new</span> WxValidate(rules, message);</span><br><span class="line">      &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//点击提交按钮后，开始验证信息</span></span><br><span class="line">    <span class="function"><span class="title">bindSubmit</span>(<span class="params">e</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">this</span>.formSubmit(e)) &#123; <span class="comment">//所填写的信息出错</span></span><br><span class="line">          <span class="comment">// console.log(this.WxValidate.validationErrors()[0].msg);</span></span><br><span class="line">          <span class="comment">// this.WxValidate.validationErrors()返回来的是一个集合，结构如下：</span></span><br><span class="line">          <span class="comment">// 0: &#123;param: &quot;name&quot;, msg: &quot;姓名项为空&quot;, value: &quot;&quot;&#125;</span></span><br><span class="line">          <span class="comment">// 下面的是将表单验证返回来的错误信息的.msg放入页面data的errorMsg里</span></span><br><span class="line">          <span class="comment">// 实测数据能放进errorMeg里，但是前端弹窗读取不出来错误信息，改用setData完整赋值,故注释</span></span><br><span class="line">          <span class="comment">// for (let i = 0; i &lt; this.WxValidate.size(); i++) &#123;</span></span><br><span class="line">          <span class="comment">//   this.data.errorMsg.push(this.WxValidate.validationErrors()[i].msg)</span></span><br><span class="line">          <span class="comment">// &#125;</span></span><br><span class="line">          <span class="built_in">console</span>.log(<span class="string">&quot;false&quot;</span>);</span><br><span class="line">          <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">            <span class="attr">errorMsg</span>: <span class="built_in">this</span>.WxValidate.validationErrors()</span><br><span class="line">          &#125;)</span><br><span class="line">          <span class="comment">// console.log(this.data.errorMsg);</span></span><br><span class="line">          <span class="built_in">this</span>.openDialog();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; </span><br><span class="line">          <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">            <span class="attr">Dialog</span>: <span class="literal">false</span></span><br><span class="line">          &#125;)</span><br><span class="line">          wx.navigateTo(&#123;</span><br><span class="line">            <span class="attr">url</span>: <span class="string">&#x27;/pages/success&#x27;</span>,</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125; </span><br><span class="line">  &#125;,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//验证表单信息是否有误</span></span><br><span class="line">     <span class="attr">formSubmit</span>: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">let</span> params = e.detail.value;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">this</span>.WxValidate.checkForm(params)) &#123;</span><br><span class="line">          <span class="comment">//表单元素验证不通过，此处给出相应提示（在console里提示）</span></span><br><span class="line">          <span class="keyword">let</span> error = <span class="built_in">this</span>.WxValidate.errorList;</span><br><span class="line">          <span class="keyword">switch</span> (error[<span class="number">0</span>].param) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;name&quot;</span>:</span><br><span class="line">              <span class="comment">//TODO</span></span><br><span class="line">              <span class="comment">// console.log(error);</span></span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;email&quot;</span>:</span><br><span class="line">              <span class="comment">//TODO</span></span><br><span class="line">              <span class="comment">// console.log(error);</span></span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;phone&quot;</span>:</span><br><span class="line">              <span class="comment">//TODO</span></span><br><span class="line">              <span class="comment">// console.log(error);</span></span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;id&quot;</span>:</span><br><span class="line">              <span class="comment">//TODO</span></span><br><span class="line">              <span class="comment">// console.log(error);</span></span><br><span class="line">              <span class="keyword">break</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">    </span><br><span class="line">      <span class="function"><span class="title">openDialog</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">          <span class="attr">Dialog</span>: <span class="literal">true</span>,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="function"><span class="title">back</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">          <span class="attr">Dialog</span>: <span class="literal">false</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;，</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h4><table><thead><tr><th align="left">参数</th><th align="left">类型</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">rules</td><td align="left"><code>object</code></td><td align="left">验证字段的规则</td></tr><tr><td align="left">messages</td><td align="left"><code>object</code></td><td align="left">验证字段的提示信息</td></tr></tbody></table><h4 id="内置校验规则"><a href="#内置校验规则" class="headerlink" title="内置校验规则"></a>内置校验规则</h4><table><thead><tr><th align="center">序号</th><th align="left">规则</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">1</td><td align="left"><code>required: true</code></td><td align="left">这是必填字段</td></tr><tr><td align="center">2</td><td align="left"><code>email: true</code></td><td align="left">请输入有效的电子邮件地址</td></tr><tr><td align="center">3</td><td align="left"><code>tel: true</code></td><td align="left">请输入11位的手机号码</td></tr><tr><td align="center">4</td><td align="left"><code>url: true</code></td><td align="left">请输入有效的网址</td></tr><tr><td align="center">5</td><td align="left"><code>date: true</code></td><td align="left">请输入有效的日期</td></tr><tr><td align="center">6</td><td align="left"><code>dateISO: true</code></td><td align="left">请输入有效的日期（ISO），例如：2009-06-23，1998/01/22</td></tr><tr><td align="center">7</td><td align="left"><code>number: true</code></td><td align="left">请输入有效的数字</td></tr><tr><td align="center">8</td><td align="left"><code>digits: true</code></td><td align="left">只能输入数字</td></tr><tr><td align="center">9</td><td align="left"><code>idcard: true</code></td><td align="left">请输入18位的有效身份证</td></tr><tr><td align="center">10</td><td align="left"><code>equalTo: &#39;field&#39;</code></td><td align="left">输入值必须和field相同</td></tr><tr><td align="center">11</td><td align="left"><code>contains: &#39;ABC&#39;</code></td><td align="left">输入值必须包含ABC</td></tr><tr><td align="center">12</td><td align="left"><code>minlength: 5</code></td><td align="left">最少要输入5个字符</td></tr><tr><td align="center">13</td><td align="left"><code>maxlength: 10</code></td><td align="left">最多可以输入10个字符</td></tr><tr><td align="center">14</td><td align="left"><code>rangelength: [5,10]</code></td><td align="left">请输入长度在5到10之间的字符</td></tr><tr><td align="center">15</td><td align="left"><code>min: 5</code></td><td align="left">请输入不小于5的数值</td></tr><tr><td align="center">16</td><td align="left"><code>max: 10</code></td><td align="left">请输入不大于10的数值</td></tr><tr><td align="center">17</td><td align="left"><code>range: [5,10]</code></td><td align="left">请输入范围在5到10之间的数值</td></tr></tbody></table><h4 id="常用实例方法"><a href="#常用实例方法" class="headerlink" title="常用实例方法"></a>常用实例方法</h4><table><thead><tr><th>名称</th><th>返回类型</th><th>描述</th></tr></thead><tbody><tr><td>checkForm(e)</td><td><code>boolean</code></td><td>验证所有字段的规则，返回验证是否通过</td></tr><tr><td>valid()</td><td><code>boolean</code></td><td>返回验证是否通过</td></tr><tr><td>size()</td><td><code>number</code></td><td>返回错误信息的个数</td></tr><tr><td>validationErrors()</td><td><code>array</code></td><td>返回所有错误信息</td></tr><tr><td>addMethod(name,method,message)</td><td><code>boolean</code></td><td>添加自定义验证方法</td></tr></tbody></table><h4 id="表单验证业务逻辑"><a href="#表单验证业务逻辑" class="headerlink" title="表单验证业务逻辑"></a>表单验证业务逻辑</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 表单验证</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>rules 验证字段的规则</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>messages 验证字段的提示信息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WxValidate</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">rules = &#123;&#125;, messages = &#123;&#125;</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">Object</span>.assign(<span class="built_in">this</span>, &#123;</span><br><span class="line">            <span class="attr">data</span>: &#123;&#125;,</span><br><span class="line">            rules,</span><br><span class="line">            messages,</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="built_in">this</span>.__init()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * __init</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">__init</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.__initMethods()</span><br><span class="line">        <span class="built_in">this</span>.__initDefaults()</span><br><span class="line">        <span class="built_in">this</span>.__initData()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">__initData</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.form = &#123;&#125;</span><br><span class="line">        <span class="built_in">this</span>.errorList = []</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化默认提示信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">__initDefaults</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.defaults = &#123;</span><br><span class="line">            <span class="attr">messages</span>: &#123;</span><br><span class="line">                <span class="attr">required</span>: <span class="string">&#x27;这是必填字段。&#x27;</span>,</span><br><span class="line">                <span class="attr">email</span>: <span class="string">&#x27;请输入有效的电子邮件地址。&#x27;</span>,</span><br><span class="line">                <span class="attr">tel</span>: <span class="string">&#x27;请输入11位的手机号码。&#x27;</span>,</span><br><span class="line">                <span class="attr">url</span>: <span class="string">&#x27;请输入有效的网址。&#x27;</span>,</span><br><span class="line">                <span class="attr">date</span>: <span class="string">&#x27;请输入有效的日期。&#x27;</span>,</span><br><span class="line">                <span class="attr">dateISO</span>: <span class="string">&#x27;请输入有效的日期（ISO），例如：2009-06-23，1998/01/22。&#x27;</span>,</span><br><span class="line">                <span class="attr">number</span>: <span class="string">&#x27;请输入有效的数字。&#x27;</span>,</span><br><span class="line">                <span class="attr">digits</span>: <span class="string">&#x27;只能输入数字。&#x27;</span>,</span><br><span class="line">                <span class="attr">idcard</span>: <span class="string">&#x27;请输入18位的有效身份证。&#x27;</span>,</span><br><span class="line">                <span class="attr">equalTo</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;输入值必须和 &#123;0&#125; 相同。&#x27;</span>),</span><br><span class="line">                <span class="attr">contains</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;输入值必须包含 &#123;0&#125;。&#x27;</span>),</span><br><span class="line">                <span class="attr">minlength</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;最少要输入 &#123;0&#125; 个字符。&#x27;</span>),</span><br><span class="line">                <span class="attr">maxlength</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;最多可以输入 &#123;0&#125; 个字符。&#x27;</span>),</span><br><span class="line">                <span class="attr">rangelength</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;请输入长度在 &#123;0&#125; 到 &#123;1&#125; 之间的字符。&#x27;</span>),</span><br><span class="line">                <span class="attr">min</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;请输入不小于 &#123;0&#125; 的数值。&#x27;</span>),</span><br><span class="line">                <span class="attr">max</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;请输入不大于 &#123;0&#125; 的数值。&#x27;</span>),</span><br><span class="line">                <span class="attr">range</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;请输入范围在 &#123;0&#125; 到 &#123;1&#125; 之间的数值。&#x27;</span>),</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化默认验证方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">__initMethods</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> that = <span class="built_in">this</span></span><br><span class="line">        that.methods = &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证必填元素</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">required</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (!that.depend(param)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&#x27;dependency-mismatch&#x27;</span></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> value === <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">                    value = value.toString()</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> value === <span class="string">&#x27;boolean&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> !<span class="number">0</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> value.length &gt; <span class="number">0</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证电子邮箱格式</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">email</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || <span class="regexp">/^[a-zA-Z0-9.!#$%&amp;&#x27;*+\/=?^_`&#123;|&#125;~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]&#123;0,61&#125;[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]&#123;0,61&#125;[a-zA-Z0-9])?)*$/</span>.test(value)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证手机格式</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">tel</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || <span class="regexp">/^1[34578]\d&#123;9&#125;$/</span>.test(value)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证URL格式</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">url</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || <span class="regexp">/^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d&#123;1,3&#125;)&#123;3&#125;)(?!(?:169\.254|192\.168)(?:\.\d&#123;1,3&#125;)&#123;2&#125;)(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d&#123;1,3&#125;)&#123;2&#125;)(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d&#123;1,2&#125;|2[0-4]\d|25[0-5]))&#123;2&#125;(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]&#123;2,&#125;)).?)(?::\d&#123;2,5&#125;)?(?:[/?#]\S*)?$/i</span>.test(value)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证日期格式</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">date</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || !<span class="regexp">/Invalid|NaN/</span>.test(<span class="keyword">new</span> <span class="built_in">Date</span>(value).toString())</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证ISO类型的日期格式</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">dateISO</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || <span class="regexp">/^\d&#123;4&#125;[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/</span>.test(value)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证十进制数字</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">number</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || <span class="regexp">/^(?:-?\d+|-?\d&#123;1,3&#125;(?:,\d&#123;3&#125;)+)?(?:\.\d+)?$/</span>.test(value)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证整数</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">digits</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || <span class="regexp">/^\d+$/</span>.test(value)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证身份证号码</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">idcard</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || <span class="regexp">/^[1-9]\d&#123;5&#125;[1-9]\d&#123;3&#125;((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d&#123;3&#125;([0-9]|X)$/</span>.test(value)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证两个输入框的内容是否相同</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">equalTo</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || value === that.data[param]</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证是否包含某个值</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">contains</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || value.indexOf(param) &gt;= <span class="number">0</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证最小长度</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">minlength</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || value.length &gt;= param</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证最大长度</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">maxlength</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || value.length &lt;= param</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证一个长度范围[min, max]</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">rangelength</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || (value.length &gt;= param[<span class="number">0</span>] &amp;&amp; value.length &lt;= param[<span class="number">1</span>])</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证最小值</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">min</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || value &gt;= param</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证最大值</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">max</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || value &lt;= param</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证一个值范围[min, max]</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">range</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || (value &gt;= param[<span class="number">0</span>] &amp;&amp; value &lt;= param[<span class="number">1</span>])</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加自定义验证方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>name 方法名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Function&#125;</span> </span>method 函数体，接收两个参数(value, param)，value表示元素的值，param表示参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>message 提示信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">addMethod</span>(<span class="params">name, method, message</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.methods[name] = method</span><br><span class="line">        <span class="built_in">this</span>.defaults.messages[name] = message !== <span class="literal">undefined</span> ? message : <span class="built_in">this</span>.defaults.messages[name]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断验证方法是否存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">isValidMethod</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> methods = []</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> method <span class="keyword">in</span> <span class="built_in">this</span>.methods) &#123;</span><br><span class="line">            <span class="keyword">if</span> (method &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">this</span>.methods[method] === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">                methods.push(method)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> methods.indexOf(value) !== -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 格式化提示信息模板</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">formatTpl</span>(<span class="params">source, params</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> that = <span class="built_in">this</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">arguments</span>.length === <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">let</span> args = <span class="built_in">Array</span>.from(<span class="built_in">arguments</span>)</span><br><span class="line">                args.unshift(source)</span><br><span class="line">                <span class="keyword">return</span> that.formatTpl.apply(<span class="built_in">this</span>, args)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (params === <span class="literal">undefined</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> source</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">arguments</span>.length &gt; <span class="number">2</span> &amp;&amp; params.constructor !== <span class="built_in">Array</span>) &#123;</span><br><span class="line">            params = <span class="built_in">Array</span>.from(<span class="built_in">arguments</span>).slice(<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (params.constructor !== <span class="built_in">Array</span>) &#123;</span><br><span class="line">            params = [params]</span><br><span class="line">        &#125;</span><br><span class="line">        params.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">n, i</span>) </span>&#123;</span><br><span class="line">            source = source.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;\\&#123;&quot;</span> + i + <span class="string">&quot;\\&#125;&quot;</span>, <span class="string">&quot;g&quot;</span>), <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> n</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> source</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断规则依赖是否存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">depend</span>(<span class="params">param</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (<span class="keyword">typeof</span> param) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;boolean&#x27;</span>:</span><br><span class="line">                param = param</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;string&#x27;</span>:</span><br><span class="line">                param = !!param.length</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;function&#x27;</span>:</span><br><span class="line">                param = param()</span><br><span class="line">            <span class="attr">default</span>:</span><br><span class="line">                param = !<span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> param</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断输入值是否为空</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">optional</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> !<span class="built_in">this</span>.methods.required(value) &amp;&amp; <span class="string">&#x27;dependency-mismatch&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取自定义字段的提示信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>param 字段名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>rule 规则</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">customMessage</span>(<span class="params">param, rule</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> params = <span class="built_in">this</span>.messages[param]</span><br><span class="line">        <span class="keyword">const</span> isObject = <span class="keyword">typeof</span> params === <span class="string">&#x27;object&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> (params &amp;&amp; isObject) <span class="keyword">return</span> params[rule.method]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取某个指定字段的提示信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>param 字段名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>rule 规则</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">defaultMessage</span>(<span class="params">param, rule</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> message = <span class="built_in">this</span>.customMessage(param, rule) || <span class="built_in">this</span>.defaults.messages[rule.method]</span><br><span class="line">        <span class="keyword">let</span> type = <span class="keyword">typeof</span> message</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (type === <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">            message = <span class="string">`Warning: No message defined for <span class="subst">$&#123;rule.method&#125;</span>.`</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">            message = message.call(<span class="built_in">this</span>, rule.parameters)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> message</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存错误信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>param 字段名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>rule 规则</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>value 元素的值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">formatTplAndAdd</span>(<span class="params">param, rule, value</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> msg = <span class="built_in">this</span>.defaultMessage(param, rule)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.errorList.push(&#123;</span><br><span class="line">            <span class="attr">param</span>: param,</span><br><span class="line">            <span class="attr">msg</span>: msg,</span><br><span class="line">            <span class="attr">value</span>: value,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证某个指定字段的规则</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>param 字段名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>rules 规则</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>data 需要验证的数据对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">checkParam</span>(<span class="params">param, rules, data</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 缓存数据对象</span></span><br><span class="line">        <span class="built_in">this</span>.data = data</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 缓存字段对应的值</span></span><br><span class="line">        <span class="keyword">const</span> value = data[param] !== <span class="literal">null</span> &amp;&amp; data[param] !== <span class="literal">undefined</span> ? data[param] : <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历某个指定字段的所有规则，依次验证规则，否则缓存错误信息</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> method <span class="keyword">in</span> rules) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断验证方法是否存在</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.isValidMethod(method)) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 缓存规则的属性及值</span></span><br><span class="line">                <span class="keyword">const</span> rule = &#123;</span><br><span class="line">                    <span class="attr">method</span>: method,</span><br><span class="line">                    <span class="attr">parameters</span>: rules[method]</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 调用验证方法</span></span><br><span class="line">                <span class="keyword">const</span> result = <span class="built_in">this</span>.methods[method](value, rule.parameters)</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 若result返回值为dependency-mismatch，则说明该字段的值为空或非必填字段</span></span><br><span class="line">                <span class="keyword">if</span> (result === <span class="string">&#x27;dependency-mismatch&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">this</span>.setValue(param, method, result, value)</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否通过验证，否则缓存错误信息，跳出循环</span></span><br><span class="line">                <span class="keyword">if</span> (!result) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.formatTplAndAdd(param, rule, value)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置字段的默认验证值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>param 字段名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">setView</span>(<span class="params">param</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.form[param] = &#123;</span><br><span class="line">            <span class="attr">$name</span>: param,</span><br><span class="line">            <span class="attr">$valid</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">$invalid</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">$error</span>: &#123;&#125;,</span><br><span class="line">            <span class="attr">$success</span>: &#123;&#125;,</span><br><span class="line">            <span class="attr">$viewValue</span>: <span class="string">``</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置字段的验证值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>param 字段名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>method 字段的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Boolean&#125;</span> </span>result 是否通过验证</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>value 字段的值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">setValue</span>(<span class="params">param, method, result, value</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> params = <span class="built_in">this</span>.form[param]</span><br><span class="line">        params.$valid = result</span><br><span class="line">        params.$invalid = !result</span><br><span class="line">        params.$error[method] = !result</span><br><span class="line">        params.$success[method] = result</span><br><span class="line">        params.$viewValue = value</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证所有字段的规则，返回验证是否通过</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>data 需要验证数据对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">checkForm</span>(<span class="params">data</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.__initData()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> param <span class="keyword">in</span> <span class="built_in">this</span>.rules) &#123;</span><br><span class="line">            <span class="built_in">this</span>.setView(param)</span><br><span class="line">            <span class="built_in">this</span>.checkParam(param, <span class="built_in">this</span>.rules[param], data)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.valid()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回验证是否通过</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">valid</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.size() === <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回错误信息的个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">size</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.errorList.length</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回所有错误信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">validationErrors</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.errorList</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> WxValidate</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序开发备忘录</title>
      <link href="/2022/02/09/%E3%80%90%E5%A4%87%E5%BF%98%E3%80%91CSS%E6%96%87%E5%AD%97%E6%BA%A2%E5%87%BA%E7%9C%81%E7%95%A5%E5%8F%B7%E4%BB%A3%E6%9B%BF/"/>
      <url>/2022/02/09/%E3%80%90%E5%A4%87%E5%BF%98%E3%80%91CSS%E6%96%87%E5%AD%97%E6%BA%A2%E5%87%BA%E7%9C%81%E7%95%A5%E5%8F%B7%E4%BB%A3%E6%9B%BF/</url>
      
        <content type="html"><![CDATA[<h2 id="CSS文字溢出省略号代替"><a href="#CSS文字溢出省略号代替" class="headerlink" title="CSS文字溢出省略号代替"></a>CSS文字溢出省略号代替</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.peopleName</span> &#123;</span><br><span class="line">    <span class="comment">/* 文字溢出省略号代替 */</span></span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">    <span class="attribute">white-space</span>: nowrap;</span><br><span class="line">    <span class="attribute">text-overflow</span>: ellipsis;</span><br><span class="line">    <span class="attribute">word-break</span>: break-all;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="【转载】微信小程序之表单验证"><a href="#【转载】微信小程序之表单验证" class="headerlink" title="【转载】微信小程序之表单验证"></a>【转载】<a href="https://www.cnblogs.com/zhangxiaoyong/p/10166951.html">微信小程序之表单验证</a></h2><p><img src="../../../../img/762349-20181224090948197-828571538-164437405673446.gif" alt="img"></p><h3 id="插件介绍"><a href="#插件介绍" class="headerlink" title="插件介绍"></a>插件介绍</h3><p>首先我们需要用到一个 WxValidate - 表单验证的js插件。我们一起来看看它里面包含什么内容：</p><p><a href="https://img2018.cnblogs.com/blog/762349/201812/762349-20181224091420862-548550333.png"><img src="../../../../img/762349-20181224091420862-548550333.png" alt="img"></a></p><p><a href="https://img2018.cnblogs.com/blog/762349/201812/762349-20181224091433489-1056422136.png"><img src="../../../../img/762349-20181224091433489-1056422136.png" alt="img"></a></p><p><a href="https://img2018.cnblogs.com/blog/762349/201812/762349-20181224091446639-302785936.png"><img src="../../../../img/762349-20181224091446639-302785936.png" alt="img"></a></p><p><a href="https://img2018.cnblogs.com/blog/762349/201812/762349-20181224091503960-2055593926.png"><img src="../../../../img/762349-20181224091503960-2055593926.png" alt="img"></a></p><p><a href="https://img2018.cnblogs.com/blog/762349/201812/762349-20181224091526743-49960796.png"><img src="../../../../img/762349-20181224091526743-49960796.png" alt="img"></a></p><p><a href="https://img2018.cnblogs.com/blog/762349/201812/762349-20181224091545691-628189801.png"><img src="../../../../img/762349-20181224091545691-628189801.png" alt="img"></a></p><h3 id="在小程序中使用"><a href="#在小程序中使用" class="headerlink" title="在小程序中使用"></a>在小程序中使用</h3><p>看了上面的插件介绍，是不是还是一头雾水呢？不要急，下面，我们就来一起看看上面的验证效果配合插件是如何实现的吧。</p><p>①，我们需要引入WxValidate.js，可以直接复制如下js代码块：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 表单验证</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>rules 验证字段的规则</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>messages 验证字段的提示信息</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">WxValidate</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="title">constructor</span>(<span class="params">rules = &#123;&#125;, messages = &#123;&#125;</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">Object</span>.assign(<span class="built_in">this</span>, &#123;</span><br><span class="line">            <span class="attr">data</span>: &#123;&#125;,</span><br><span class="line">            rules,</span><br><span class="line">            messages,</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="built_in">this</span>.__init()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * __init</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">__init</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.__initMethods()</span><br><span class="line">        <span class="built_in">this</span>.__initDefaults()</span><br><span class="line">        <span class="built_in">this</span>.__initData()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">__initData</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.form = &#123;&#125;</span><br><span class="line">        <span class="built_in">this</span>.errorList = []</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化默认提示信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">__initDefaults</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.defaults = &#123;</span><br><span class="line">            <span class="attr">messages</span>: &#123;</span><br><span class="line">                <span class="attr">required</span>: <span class="string">&#x27;这是必填字段。&#x27;</span>,</span><br><span class="line">                <span class="attr">email</span>: <span class="string">&#x27;请输入有效的电子邮件地址。&#x27;</span>,</span><br><span class="line">                <span class="attr">tel</span>: <span class="string">&#x27;请输入11位的手机号码。&#x27;</span>,</span><br><span class="line">                <span class="attr">url</span>: <span class="string">&#x27;请输入有效的网址。&#x27;</span>,</span><br><span class="line">                <span class="attr">date</span>: <span class="string">&#x27;请输入有效的日期。&#x27;</span>,</span><br><span class="line">                <span class="attr">dateISO</span>: <span class="string">&#x27;请输入有效的日期（ISO），例如：2009-06-23，1998/01/22。&#x27;</span>,</span><br><span class="line">                <span class="attr">number</span>: <span class="string">&#x27;请输入有效的数字。&#x27;</span>,</span><br><span class="line">                <span class="attr">digits</span>: <span class="string">&#x27;只能输入数字。&#x27;</span>,</span><br><span class="line">                <span class="attr">idcard</span>: <span class="string">&#x27;请输入18位的有效身份证。&#x27;</span>,</span><br><span class="line">                <span class="attr">equalTo</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;输入值必须和 &#123;0&#125; 相同。&#x27;</span>),</span><br><span class="line">                <span class="attr">contains</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;输入值必须包含 &#123;0&#125;。&#x27;</span>),</span><br><span class="line">                <span class="attr">minlength</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;最少要输入 &#123;0&#125; 个字符。&#x27;</span>),</span><br><span class="line">                <span class="attr">maxlength</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;最多可以输入 &#123;0&#125; 个字符。&#x27;</span>),</span><br><span class="line">                <span class="attr">rangelength</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;请输入长度在 &#123;0&#125; 到 &#123;1&#125; 之间的字符。&#x27;</span>),</span><br><span class="line">                <span class="attr">min</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;请输入不小于 &#123;0&#125; 的数值。&#x27;</span>),</span><br><span class="line">                <span class="attr">max</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;请输入不大于 &#123;0&#125; 的数值。&#x27;</span>),</span><br><span class="line">                <span class="attr">range</span>: <span class="built_in">this</span>.formatTpl(<span class="string">&#x27;请输入范围在 &#123;0&#125; 到 &#123;1&#125; 之间的数值。&#x27;</span>),</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化默认验证方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">__initMethods</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> that = <span class="built_in">this</span></span><br><span class="line">        that.methods = &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证必填元素</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">required</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (!that.depend(param)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="string">&#x27;dependency-mismatch&#x27;</span></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> value === <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">                    value = value.toString()</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span> value === <span class="string">&#x27;boolean&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">return</span> !<span class="number">0</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> value.length &gt; <span class="number">0</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证电子邮箱格式</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">email</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || <span class="regexp">/^[a-zA-Z0-9.!#$%&amp;&#x27;*+\/=?^_`&#123;|&#125;~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]&#123;0,61&#125;[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]&#123;0,61&#125;[a-zA-Z0-9])?)*$/</span>.test(value)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证手机格式</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">tel</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || <span class="regexp">/^1[34578]\d&#123;9&#125;$/</span>.test(value)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证URL格式</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">url</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || <span class="regexp">/^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d&#123;1,3&#125;)&#123;3&#125;)(?!(?:169\.254|192\.168)(?:\.\d&#123;1,3&#125;)&#123;2&#125;)(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d&#123;1,3&#125;)&#123;2&#125;)(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d&#123;1,2&#125;|2[0-4]\d|25[0-5]))&#123;2&#125;(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]&#123;2,&#125;)).?)(?::\d&#123;2,5&#125;)?(?:[/?#]\S*)?$/i</span>.test(value)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证日期格式</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">date</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || !<span class="regexp">/Invalid|NaN/</span>.test(<span class="keyword">new</span> <span class="built_in">Date</span>(value).toString())</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证ISO类型的日期格式</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">dateISO</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || <span class="regexp">/^\d&#123;4&#125;[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/</span>.test(value)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证十进制数字</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">number</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || <span class="regexp">/^(?:-?\d+|-?\d&#123;1,3&#125;(?:,\d&#123;3&#125;)+)?(?:\.\d+)?$/</span>.test(value)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证整数</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">digits</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || <span class="regexp">/^\d+$/</span>.test(value)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证身份证号码</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">idcard</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || <span class="regexp">/^[1-9]\d&#123;5&#125;[1-9]\d&#123;3&#125;((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d&#123;3&#125;([0-9]|X)$/</span>.test(value)</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证两个输入框的内容是否相同</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">equalTo</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || value === that.data[param]</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证是否包含某个值</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">contains</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || value.indexOf(param) &gt;= <span class="number">0</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证最小长度</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">minlength</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || value.length &gt;= param</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证最大长度</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">maxlength</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || value.length &lt;= param</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证一个长度范围[min, max]</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">rangelength</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || (value.length &gt;= param[<span class="number">0</span>] &amp;&amp; value.length &lt;= param[<span class="number">1</span>])</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证最小值</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">min</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || value &gt;= param</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证最大值</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">max</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || value &lt;= param</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 验证一个值范围[min, max]</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="function"><span class="title">range</span>(<span class="params">value, param</span>)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> that.optional(value) || (value &gt;= param[<span class="number">0</span>] &amp;&amp; value &lt;= param[<span class="number">1</span>])</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加自定义验证方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>name 方法名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Function&#125;</span> </span>method 函数体，接收两个参数(value, param)，value表示元素的值，param表示参数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>message 提示信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">addMethod</span>(<span class="params">name, method, message</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.methods[name] = method</span><br><span class="line">        <span class="built_in">this</span>.defaults.messages[name] = message !== <span class="literal">undefined</span> ? message : <span class="built_in">this</span>.defaults.messages[name]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断验证方法是否存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">isValidMethod</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> methods = []</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> method <span class="keyword">in</span> <span class="built_in">this</span>.methods) &#123;</span><br><span class="line">            <span class="keyword">if</span> (method &amp;&amp; <span class="keyword">typeof</span> <span class="built_in">this</span>.methods[method] === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">                methods.push(method)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> methods.indexOf(value) !== -<span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 格式化提示信息模板</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">formatTpl</span>(<span class="params">source, params</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> that = <span class="built_in">this</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">arguments</span>.length === <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">let</span> args = <span class="built_in">Array</span>.from(<span class="built_in">arguments</span>)</span><br><span class="line">                args.unshift(source)</span><br><span class="line">                <span class="keyword">return</span> that.formatTpl.apply(<span class="built_in">this</span>, args)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (params === <span class="literal">undefined</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> source</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">arguments</span>.length &gt; <span class="number">2</span> &amp;&amp; params.constructor !== <span class="built_in">Array</span>) &#123;</span><br><span class="line">            params = <span class="built_in">Array</span>.from(<span class="built_in">arguments</span>).slice(<span class="number">1</span>)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (params.constructor !== <span class="built_in">Array</span>) &#123;</span><br><span class="line">            params = [params]</span><br><span class="line">        &#125;</span><br><span class="line">        params.forEach(<span class="function"><span class="keyword">function</span>(<span class="params">n, i</span>) </span>&#123;</span><br><span class="line">            source = source.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">&quot;\\&#123;&quot;</span> + i + <span class="string">&quot;\\&#125;&quot;</span>, <span class="string">&quot;g&quot;</span>), <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> n</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> source</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断规则依赖是否存在</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">depend</span>(<span class="params">param</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">switch</span> (<span class="keyword">typeof</span> param) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;boolean&#x27;</span>:</span><br><span class="line">                param = param</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;string&#x27;</span>:</span><br><span class="line">                param = !!param.length</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;function&#x27;</span>:</span><br><span class="line">                param = param()</span><br><span class="line">            <span class="attr">default</span>:</span><br><span class="line">                param = !<span class="number">0</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> param</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 判断输入值是否为空</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">optional</span>(<span class="params">value</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> !<span class="built_in">this</span>.methods.required(value) &amp;&amp; <span class="string">&#x27;dependency-mismatch&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取自定义字段的提示信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>param 字段名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>rule 规则</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">customMessage</span>(<span class="params">param, rule</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> params = <span class="built_in">this</span>.messages[param]</span><br><span class="line">        <span class="keyword">const</span> isObject = <span class="keyword">typeof</span> params === <span class="string">&#x27;object&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> (params &amp;&amp; isObject) <span class="keyword">return</span> params[rule.method]</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取某个指定字段的提示信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>param 字段名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>rule 规则</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">defaultMessage</span>(<span class="params">param, rule</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> message = <span class="built_in">this</span>.customMessage(param, rule) || <span class="built_in">this</span>.defaults.messages[rule.method]</span><br><span class="line">        <span class="keyword">let</span> type = <span class="keyword">typeof</span> message</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (type === <span class="string">&#x27;undefined&#x27;</span>) &#123;</span><br><span class="line">            message = <span class="string">`Warning: No message defined for <span class="subst">$&#123;rule.method&#125;</span>.`</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (type === <span class="string">&#x27;function&#x27;</span>) &#123;</span><br><span class="line">            message = message.call(<span class="built_in">this</span>, rule.parameters)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> message</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 缓存错误信息</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>param 字段名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>rule 规则</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>value 元素的值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">formatTplAndAdd</span>(<span class="params">param, rule, value</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> msg = <span class="built_in">this</span>.defaultMessage(param, rule)</span><br><span class="line"></span><br><span class="line">        <span class="built_in">this</span>.errorList.push(&#123;</span><br><span class="line">            <span class="attr">param</span>: param,</span><br><span class="line">            <span class="attr">msg</span>: msg,</span><br><span class="line">            <span class="attr">value</span>: value,</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证某个指定字段的规则</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>param 字段名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>rules 规则</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>data 需要验证的数据对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">checkParam</span>(<span class="params">param, rules, data</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 缓存数据对象</span></span><br><span class="line">        <span class="built_in">this</span>.data = data</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 缓存字段对应的值</span></span><br><span class="line">        <span class="keyword">const</span> value = data[param] !== <span class="literal">null</span> &amp;&amp; data[param] !== <span class="literal">undefined</span> ? data[param] : <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 遍历某个指定字段的所有规则，依次验证规则，否则缓存错误信息</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> method <span class="keyword">in</span> rules) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断验证方法是否存在</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">this</span>.isValidMethod(method)) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 缓存规则的属性及值</span></span><br><span class="line">                <span class="keyword">const</span> rule = &#123;</span><br><span class="line">                    <span class="attr">method</span>: method,</span><br><span class="line">                    <span class="attr">parameters</span>: rules[method]</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 调用验证方法</span></span><br><span class="line">                <span class="keyword">const</span> result = <span class="built_in">this</span>.methods[method](value, rule.parameters)</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 若result返回值为dependency-mismatch，则说明该字段的值为空或非必填字段</span></span><br><span class="line">                <span class="keyword">if</span> (result === <span class="string">&#x27;dependency-mismatch&#x27;</span>) &#123;</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="built_in">this</span>.setValue(param, method, result, value)</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 判断是否通过验证，否则缓存错误信息，跳出循环</span></span><br><span class="line">                <span class="keyword">if</span> (!result) &#123;</span><br><span class="line">                    <span class="built_in">this</span>.formatTplAndAdd(param, rule, value)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置字段的默认验证值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>param 字段名</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">setView</span>(<span class="params">param</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.form[param] = &#123;</span><br><span class="line">            <span class="attr">$name</span>: param,</span><br><span class="line">            <span class="attr">$valid</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">$invalid</span>: <span class="literal">false</span>,</span><br><span class="line">            <span class="attr">$error</span>: &#123;&#125;,</span><br><span class="line">            <span class="attr">$success</span>: &#123;&#125;,</span><br><span class="line">            <span class="attr">$viewValue</span>: <span class="string">``</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置字段的验证值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>param 字段名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>method 字段的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Boolean&#125;</span> </span>result 是否通过验证</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;String&#125;</span> </span>value 字段的值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">setValue</span>(<span class="params">param, method, result, value</span>)</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> params = <span class="built_in">this</span>.form[param]</span><br><span class="line">        params.$valid = result</span><br><span class="line">        params.$invalid = !result</span><br><span class="line">        params.$error[method] = !result</span><br><span class="line">        params.$success[method] = result</span><br><span class="line">        params.$viewValue = value</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 验证所有字段的规则，返回验证是否通过</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param <span class="type">&#123;Object&#125;</span> </span>data 需要验证数据对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">checkForm</span>(<span class="params">data</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.__initData()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> param <span class="keyword">in</span> <span class="built_in">this</span>.rules) &#123;</span><br><span class="line">            <span class="built_in">this</span>.setView(param)</span><br><span class="line">            <span class="built_in">this</span>.checkParam(param, <span class="built_in">this</span>.rules[param], data)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.valid()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回验证是否通过</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">valid</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.size() === <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回错误信息的个数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">size</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.errorList.length</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 返回所有错误信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="title">validationErrors</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.errorList</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> WxValidate</span><br></pre></td></tr></table></figure><p>②在我们要验证的页面js中导入js，并在data中增加form子元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入验证js</span></span><br><span class="line"><span class="keyword">import</span> WxValidate <span class="keyword">from</span> <span class="string">&quot;../../utils/WxValidate&quot;</span>;</span><br><span class="line"></span><br><span class="line">data: &#123;</span><br><span class="line">    <span class="attr">form</span>: &#123;<span class="comment">//增加form子元素</span></span><br><span class="line">      <span class="attr">items</span>: [</span><br><span class="line">        &#123; <span class="attr">name</span>: <span class="string">&#x27;1&#x27;</span>, <span class="attr">value</span>: <span class="string">&#x27;男&#x27;</span>, <span class="attr">checked</span>: <span class="string">&#x27;true&#x27;</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">name</span>: <span class="string">&#x27;2&#x27;</span>, <span class="attr">value</span>: <span class="string">&#x27;女&#x27;</span> &#125;</span><br><span class="line">      ],</span><br><span class="line">      <span class="attr">date</span>: <span class="string">&#x27;请选择出生年月&#x27;</span>,</span><br><span class="line">      <span class="attr">casArray</span>: [<span class="string">&#x27;身份证&#x27;</span>, <span class="string">&#x27;护照&#x27;</span>, <span class="string">&#x27;其他/港澳台居民身份证&#x27;</span>, <span class="string">&#x27;外国人永久居留身份证&#x27;</span>],</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><p>③初始化表单验证规则，我一般写在onLoad中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">onLoad: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.initValidate();</span><br><span class="line">&#125;,</span><br><span class="line"><span class="function"><span class="title">initValidate</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> rules = &#123;</span><br><span class="line">      <span class="attr">Name</span>: &#123;</span><br><span class="line">        <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">maxlength</span>: <span class="number">10</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">sex</span>: &#123;</span><br><span class="line">        <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">number</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">      ,</span><br><span class="line">      <span class="attr">birthDate</span>: &#123;</span><br><span class="line">        <span class="attr">required</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">dateISO</span>: <span class="literal">true</span>,</span><br><span class="line">      &#125;, </span><br><span class="line">      <span class="attr">Card</span>: &#123;</span><br><span class="line">        <span class="attr">required</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">idcard</span>: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> message = &#123;</span><br><span class="line">      <span class="attr">Name</span>: &#123;</span><br><span class="line">        <span class="attr">required</span>: <span class="string">&#x27;请输入姓名&#x27;</span>,</span><br><span class="line">        <span class="attr">maxlength</span>: <span class="string">&#x27;名字不能超过10个字&#x27;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">Card</span>: &#123;</span><br><span class="line">        <span class="attr">idcard</span>: <span class="string">&quot;请输入正确的身份证号码&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">sex</span>: &#123;</span><br><span class="line">        <span class="attr">required</span>: <span class="string">&quot;请选择您的性别&quot;</span>,</span><br><span class="line">        <span class="attr">number</span>: <span class="string">&#x27;请您选择您的性别&#x27;</span></span><br><span class="line">      &#125;</span><br><span class="line">      ,</span><br><span class="line">      <span class="attr">birthDate</span>: &#123;</span><br><span class="line">        <span class="attr">required</span>: <span class="string">&quot;请选择出生年月&quot;</span>,</span><br><span class="line">        <span class="attr">dateISO</span>: <span class="string">&quot;请选择出生年月&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//实例化当前的验证规则和提示消息</span></span><br><span class="line">    <span class="built_in">this</span>.WxValidate = <span class="keyword">new</span> WxValidate(rules, message);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>④最后在表单提交方法中调用验证方法就行了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">formSubmit: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line"> <span class="keyword">let</span> params = e.detail.value;</span><br><span class="line"> <span class="keyword">if</span> (!<span class="built_in">this</span>.WxValidate.checkForm(params)) &#123;</span><br><span class="line">  <span class="comment">//表单元素验证不通过，此处给出相应提示</span></span><br><span class="line">    <span class="keyword">let</span> error = <span class="built_in">this</span>.WxValidate.errorList[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">switch</span> (error.param) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;Name&quot;</span>:</span><br><span class="line">          <span class="comment">//TODO</span></span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;sex&quot;</span>:</span><br><span class="line">         <span class="comment">//TODO</span></span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;birthDate&quot;</span>:</span><br><span class="line">         <span class="comment">//TODO</span></span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;Card&quot;</span>:</span><br><span class="line">         <span class="comment">//TODO</span></span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//验证通过，往下执行</span></span><br></pre></td></tr></table></figure><p>表单提交的两种形式：<a href="https://developers.weixin.qq.com/community/develop/doc/00026a81644ee844ee267fbba56004">https://developers.weixin.qq.com/community/develop/doc/00026a81644ee844ee267fbba56004</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Bootstrap学习笔记</title>
      <link href="/2022/02/08/Bootstrap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/02/08/Bootstrap%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h3 id="响应式工具"><a href="#响应式工具" class="headerlink" title="响应式工具"></a>响应式工具</h3><h3 id="栅格盒模型设计的精妙之处"><a href="#栅格盒模型设计的精妙之处" class="headerlink" title="栅格盒模型设计的精妙之处"></a>栅格盒模型设计的精妙之处</h3><p>​    容器上两边具有15px的padding</p><p>​    行两边具有-15px的margin</p><p>​    列两边具有15px的padding</p><p>​    为了维护槽宽的规则， 列两边必须得要15px的padding</p><p>​    为了能使列嵌套行，行两边必须要有-15px的margin</p><p>​    为了让容器可以包裹住行，容器两边必须要有15px的padding</p><h3 id="复习"><a href="#复习" class="headerlink" title="复习"></a>复习</h3><ol><li><h4 id="Less的继承"><a href="#Less的继承" class="headerlink" title="Less的继承"></a>Less的继承</h4></li></ol><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#test</span>&#123;</span><br><span class="line">    <span class="selector-tag">&amp;</span>:<span class="selector-tag">extend</span>(.father)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//或</span></span><br><span class="line"><span class="selector-id">#test</span>:<span class="selector-tag">extend</span>(.father)&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><h4 id="Less的避免编译"><a href="#Less的避免编译" class="headerlink" title="Less的避免编译"></a>Less的避免编译</h4><p> ~”不会被编译的内容”</p><p> 变量在less中属于块级作用域，延迟加载</p><p> bootstrap栅格系统&amp;源码分析</p></li><li><h4 id="bootstrap栅格系统-amp-源码分析"><a href="#bootstrap栅格系统-amp-源码分析" class="headerlink" title="bootstrap栅格系统&amp;源码分析"></a>bootstrap栅格系统&amp;源码分析</h4><p> 流体容器</p><p> ​    <code>width：auto</code></p><p> ​    两侧<code>padding: 15px</code></p><p> 固定容器 </p><p> ​    阈值</p><p> ​        xs(＜768px)             <code>width: auto</code></p><p> ​        sm(&gt;=768px)            <code>width: 720+槽宽</code></p><p> ​        md(&gt;=992px)            <code>width: 940+槽宽</code></p><p> ​        lg(&gt;=1200px)            <code>width: 1140+槽宽</code></p><p> ​    两侧<code>padding: 15px</code></p><p> 行</p><p> ​    两侧<code>padding: -15px</code></p><p> 列</p><p> ​    公共样式</p><p> ​        两侧有<code>padding: 15px</code>(槽宽)</p><p> ​    float</p><p> ​    width</p><p> ​        1~12</p><p> ​    left，right </p><p> ​        0~12</p><p> ​        0: auto</p><p> ​    margin-left（列偏移）（offset）</p><p> ​        0~12</p></li><li><h4 id="列排序"><a href="#列排序" class="headerlink" title="列排序"></a>列排序</h4><p> 注意阈值上样式的设置不能跳跃</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Less学习笔记</title>
      <link href="/2022/02/06/less%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/02/06/less%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是Less"><a href="#什么是Less" class="headerlink" title="什么是Less"></a>什么是Less</h2><p>Less （Leaner Style Sheets 的缩写） 是一门向后兼容的 CSS 扩展语言。这里呈现的是 Less 的官方文档（中文版），包含了 Less 语言以及利用 JavaScript 开发的用于将 Less 样式转换成 CSS 样式的 Less.js 工具。</p><p>Less官网：<a href="https://less.bootcss.com/">https://less.bootcss.com/</a></p><h2 id="如何使用Less"><a href="#如何使用Less" class="headerlink" title="如何使用Less"></a>如何使用Less</h2><p>在 Node.js 环境中使用 Less ：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g less`</span><br><span class="line">`&gt; lessc styles.less styles.css</span><br></pre></td></tr></table></figure><p>在浏览器环境中使用 Less ：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet/less&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> <span class="attr">href</span>=<span class="string">&quot;styles.less&quot;</span> /&gt;</span>`</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;//cdnjs.cloudflare.com/ajax/libs/less.js/3.11.1/less.min.js&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Less编译工具（-less编译成-css）"><a href="#Less编译工具（-less编译成-css）" class="headerlink" title="Less编译工具（.less编译成.css）"></a>Less编译工具（.less编译成.css）</h3><p>考拉编译（预处理）：<a href="http://koala-app.com/index-zh.html">http://koala-app.com/index-zh.html</a></p><p>koala是一个前端预处理器语言图形编译工具，支持Less、Sass、Compass、CoffeeScript，帮助web开发者更高效地使用它们进行开发。跨平台运行，完美兼容windows、linux、mac。</p><p><strong>koala在编译的时候，路径不能有中文！！</strong></p><h3 id="Less中的注释"><a href="#Less中的注释" class="headerlink" title="Less中的注释"></a>Less中的注释</h3><p>​    以 // 开头的注释，不会被编译到css文件中   （可以理解成给开发人员自己看）</p><p>​    以 /**/ 包裹的注释会被编译到css文件中  （可以理解成给用户看） </p><h3 id="Less中的变量"><a href="#Less中的变量" class="headerlink" title="Less中的变量"></a>Less中的变量</h3><p>​    <strong>使用@来声明变量：@color:pink</strong></p><ol><li><p>作为普通属性值来使用：直接@color</p></li><li><p><strong>（少用）</strong>作为选择器和属性名：#@{selector的值} 的形式 </p></li><li><p>作为URL：@{url}</p></li><li><p>变量的延迟加载（Less中唯一有逻辑的地方）</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@var:</span> <span class="number">0</span>;</span><br><span class="line"><span class="selector-class">.class</span>&#123;</span><br><span class="line">    <span class="variable">@var:</span> <span class="number">1</span>;</span><br><span class="line">    <span class="selector-class">.brass</span>&#123;</span><br><span class="line">        <span class="variable">@var:</span> <span class="number">2</span>;</span><br><span class="line">        three: @var; <span class="comment">//3</span></span><br><span class="line">        <span class="variable">@var:</span> <span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    one: @var; <span class="comment">//1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>为什么three是3？</strong></p><ul><li>因为Less是延迟加载，在编译.brass块时，读完整块才进行赋值，所以three是3</li><li>one是在.brass块外面，所以块内的赋值与one无关，所以one是1</li></ul></li></ol><h3 id="Less嵌套规则"><a href="#Less嵌套规则" class="headerlink" title="Less嵌套规则"></a>Less嵌套规则</h3><ol><li><p>基本的嵌套规则（父子关系）</p></li><li><p><strong>&amp;的使用</strong></p><p>如果想加上:hover，在嵌套内加上&amp;即可，否则编译后:hover前会有一个空格</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#warp</span>&#123;</span><br><span class="line"><span class="attribute">color</span>: pink;</span><br><span class="line">    <span class="selector-class">.inner</span>&#123;</span><br><span class="line">        <span class="attribute">background-color</span>:red;</span><br><span class="line">        <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>:deeppink;</span><br><span class="line">   &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="Less混合"><a href="#Less混合" class="headerlink" title="Less混合"></a>Less混合</h3><p>​    混合就是将一系列属性从一个规则集引入到另一个规则集的方式</p><ol><li><h4 id="普通混合"><a href="#普通混合" class="headerlink" title="普通混合"></a>普通混合</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.juzhong</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">background</span>: pink;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="selector-class">.inner</span>&#123;</span><br><span class="line">        <span class="selector-class">.juzhong</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.inner2</span>&#123;</span><br><span class="line">        <span class="selector-class">.juzhong</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.juzhong</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">background</span>: pink;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.inner</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">background</span>: pink;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.inner2</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">background</span>: pink;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>编译过后，.juzhong 会出现在css文件里</strong></p></li><li><h4 id="不带输出的混合"><a href="#不带输出的混合" class="headerlink" title="不带输出的混合"></a>不带输出的混合</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.juzhong</span>()&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">background</span>: pink;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="selector-class">.inner</span>&#123;</span><br><span class="line">        <span class="selector-class">.juzhong</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.inner2</span>&#123;</span><br><span class="line">        <span class="selector-class">.juzhong</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#warp</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.inner</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">background</span>: pink;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.inner2</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">background</span>: pink;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>加上（）后，在css里不会出现.juzhong</strong></p></li><li><h4 id="带参数的混合"><a href="#带参数的混合" class="headerlink" title="带参数的混合"></a>带参数的混合</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.juzhong</span>(<span class="variable">@w</span>,<span class="variable">@h</span>,<span class="variable">@c</span>)&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">@c</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="variable">@h</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">@w</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="selector-class">.inner</span>&#123;</span><br><span class="line">        <span class="selector-class">.juzhong</span>(<span class="number">100px</span>,<span class="number">100px</span>,pink);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.inner2</span>&#123;</span><br><span class="line">        <span class="selector-class">.juzhong</span>(<span class="number">200px</span>,<span class="number">200px</span>,green);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#warp</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.inner</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ffc0cb</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.inner2</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#008000</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><h4 id="带参数并且有默认值的混合"><a href="#带参数并且有默认值的混合" class="headerlink" title="带参数并且有默认值的混合"></a>带参数并且有默认值的混合</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.juzhong</span>(<span class="variable">@w</span>:<span class="number">10px</span>,<span class="variable">@h</span>:<span class="number">10px</span>,<span class="variable">@c</span>:red)&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">@c</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="variable">@h</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">@w</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="selector-class">.inner</span>&#123;</span><br><span class="line">        <span class="selector-class">.juzhong</span>(<span class="number">100px</span>,<span class="number">100px</span>,pink);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.inner2</span>&#123;</span><br><span class="line">        <span class="selector-class">.juzhong</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#warp</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.inner</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ffc0cb</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.inner2</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ff0000</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><h4 id="带多个参数的混合"><a href="#带多个参数的混合" class="headerlink" title="带多个参数的混合"></a>带多个参数的混合</h4></li><li><h4 id="命名参数"><a href="#命名参数" class="headerlink" title="命名参数"></a>命名参数</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.juzhong</span>(<span class="variable">@w</span>:<span class="number">10px</span>,<span class="variable">@h</span>:<span class="number">10px</span>,<span class="variable">@c</span>:red)&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">background</span>: <span class="variable">@c</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="variable">@h</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="variable">@w</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="selector-class">.inner</span>&#123;</span><br><span class="line">        <span class="selector-class">.juzhong</span>(<span class="number">100px</span>,<span class="number">100px</span>,pink);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.inner2</span>&#123;</span><br><span class="line">        <span class="selector-class">.juzhong</span>(<span class="variable">@c</span>:black);<span class="comment">//注意看这里！！</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#warp</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.inner</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#ffc0cb</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.inner2</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#000000</span>; <span class="comment">/*这里变了*/</span></span><br><span class="line">  <span class="attribute">height</span>: <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><h4 id="匹配模式"><a href="#匹配模式" class="headerlink" title="匹配模式"></a><strong>匹配模式</strong></h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//02.less</span></span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;./triangle.less&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//相当于自定义API</span></span><br><span class="line"><span class="selector-class">.sjx</span>&#123;</span><br><span class="line">    <span class="selector-class">.triangle</span>(B,<span class="number">40px</span>,yellow) </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//triangle.less</span></span><br><span class="line"><span class="comment">//以下是css画三角形的方法</span></span><br><span class="line"><span class="selector-class">.triangle</span>(<span class="variable">@_</span>, <span class="variable">@w</span>, <span class="variable">@c</span>) &#123;  <span class="comment">//参数数量要一致，命名无所谓</span></span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//分别对应三角形朝向哪个方向，由02.less中的.triangle的第一个参数来决定。下面是用来做匹配的。</span></span><br><span class="line"><span class="selector-class">.triangle</span>(L, <span class="variable">@w</span>, <span class="variable">@c</span>) &#123;  </span><br><span class="line">    <span class="attribute">border-width</span>: <span class="variable">@w</span>;</span><br><span class="line">    <span class="attribute">border-style</span>: dashed solid dashed dashed;</span><br><span class="line">    <span class="attribute">border-color</span>: transparent <span class="variable">@c</span> transparent transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.triangle</span>(R, <span class="variable">@w</span>, <span class="variable">@c</span>) &#123;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="variable">@w</span>;</span><br><span class="line">    <span class="attribute">border-style</span>: dashed dashed dashed solid;</span><br><span class="line">    <span class="attribute">border-color</span>: transparent transparent transparent <span class="variable">@c</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.triangle</span>(T, <span class="variable">@w</span>, <span class="variable">@c</span>) &#123;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="variable">@w</span>;</span><br><span class="line">    <span class="attribute">border-style</span>: dashed dashed solid dashed;</span><br><span class="line">    <span class="attribute">border-color</span>: transparent transparent <span class="variable">@c</span> transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.triangle</span>(B, <span class="variable">@w</span>, <span class="variable">@c</span>) &#123;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="variable">@w</span>;</span><br><span class="line">    <span class="attribute">border-style</span>: solid dashed dashed dashed;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="variable">@c</span> transparent transparent transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.sjx</span> &#123;</span><br><span class="line">  <span class="attribute">border-width</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">border-style</span>: solid dashed dashed dashed;</span><br><span class="line">  <span class="attribute">border-color</span>: <span class="number">#ffff00</span> transparent transparent transparent;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="arguments变量"><a href="#arguments变量" class="headerlink" title="arguments变量"></a>arguments变量</h4> <figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border</span>(<span class="variable">@1</span>,<span class="variable">@2</span>,<span class="variable">@3</span>)&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="variable">@arguments</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.sjx</span>&#123;</span><br><span class="line">    <span class="selector-class">.border</span>(<span class="number">1px</span>,solid,black)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> <figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.sjx</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#000000</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> arguments变量直接将实参赋值到对应的属性，比较少用arguments变量！</p></li></ol><h4 id="Less计算-【易】"><a href="#Less计算-【易】" class="headerlink" title="Less计算   【易】"></a>Less计算   【<em>易</em>】</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.border</span>(<span class="variable">@1</span>,<span class="variable">@2</span>,<span class="variable">@3</span>)&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="variable">@arguments</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.sjx</span>&#123;</span><br><span class="line">    <span class="selector-class">.border</span>(<span class="number">100</span> + <span class="number">100px</span>,solid,black) <span class="comment">//注意看【100 + 100px】这里，其他不重要</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.sjx</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">200px</span> solid <span class="number">#000000</span>; <span class="comment">/*自动计算成200px*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Less避免编译"><a href="#Less避免编译" class="headerlink" title="Less避免编译"></a>Less避免编译</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">100</span> * <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="string">~&quot;calc(100px + 100)&quot;</span>;  <span class="comment">//用~&quot;...&quot;可以避免less自动计算</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">1000px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="built_in">calc</span>(<span class="number">100px</span> + <span class="number">100</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​    <strong>用~”…”可以避免less自动计算</strong></p><h4 id="Less继承"><a href="#Less继承" class="headerlink" title="Less继承"></a>Less继承</h4><p>​    性能比混合高</p><p>​    灵活度比混合低</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//02.less</span></span><br><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">&quot;./extend.less&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#warp</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    <span class="selector-class">.inner</span>&#123;</span><br><span class="line">        <span class="selector-tag">&amp;</span>:<span class="selector-tag">extend</span>(.juzhong all);  <span class="comment">//继承.juzhong这个类和所有的伪类</span></span><br><span class="line">        <span class="selector-tag">&amp;</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>)&#123;<span class="comment">//指定特殊的子块</span></span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: pink;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="selector-tag">&amp;</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">            <span class="attribute">background-color</span>: yellow;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//extend.less</span></span><br><span class="line"><span class="selector-class">.juzhong</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.juzhong</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: green<span class="meta">!important</span>;  <span class="comment">//注意优先级！！！！</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">* &#123;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.juzhong</span>,</span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.inner</span> &#123;                    <span class="comment">/*继承了.juzhong的属性*/</span></span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.juzhong</span><span class="selector-pseudo">:hover</span>,                <span class="comment">/*伪类也继承了*/</span></span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.inner</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">background-color</span>: green<span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.inner</span><span class="selector-pseudo">:nth-child</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#warp</span> <span class="selector-class">.inner</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>) &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="响应式布局核心：-CSS3媒体查询选择器"><a href="#响应式布局核心：-CSS3媒体查询选择器" class="headerlink" title="响应式布局核心： CSS3媒体查询选择器"></a>响应式布局核心： CSS3媒体查询选择器</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@media</span> 媒体类型 <span class="keyword">and</span> (关键字)带条件的媒体属性 <span class="keyword">and</span> 带条件的媒体属性 &#123;</span><br><span class="line">    //规则</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="媒体类型"><a href="#媒体类型" class="headerlink" title="媒体类型"></a>媒体类型</h4><ul><li>all （默认）</li><li>screen</li><li>print</li></ul><h4 id="媒体属性"><a href="#媒体属性" class="headerlink" title="媒体属性"></a><strong>媒体属性</strong></h4><ul><li><p>width：浏览器窗口尺寸</p></li><li><p>device-width：设备尺寸</p></li><li><p>device-pixel-radio(必须寄啊webkit前缀)：像素比</p><p>—以上三个媒体属性可加min和max前缀</p><p>​        min：最小值为谁</p><p>​        max：最大值为谁</p></li><li><p>横竖屏切换</p><p>​    <code>orientation: landscape</code>（横屏）</p><p>​    <code>orientation: portrait</code>（竖屏）</p></li></ul><h4 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h4><ul><li>only：处理浏览器兼容问题</li><li>and：连接一条查询规则</li><li>, ：连接多条查询规则</li><li>not：取反</li></ul><h3 id="多列布局（bootstrap）"><a href="#多列布局（bootstrap）" class="headerlink" title="多列布局（bootstrap）"></a>多列布局（bootstrap）</h3><h3 id="规范"><a href="#规范" class="headerlink" title="规范"></a>规范</h3><ul><li><p>HTML</p><p>什么是html5？   是一个强大的技术集（html5≈html+css+js）</p></li><li><p>CSS</p><p>什么是css3？</p><p>​    css3其实就是html5的一部分，而且现代前端中已经没有版本的概念，都是级别</p></li><li><p>JS</p><p>​    ECMASCRIPT</p><p>​    DOM</p><p>​    BOM(没有规范，看Windows)</p></li></ul><h3 id="预处理器（less）"><a href="#预处理器（less）" class="headerlink" title="预处理器（less）"></a>预处理器（less）</h3><ul><li><p>变量</p><p>​    @</p><p>​    变量的延迟加载</p><p>​    变量是块级作用域</p></li><li><p>嵌套</p><p>​    <strong>&amp;：平级</strong></p></li><li><p>混合</p><p>​    什么是混合？</p><pre><code>  将一系列的规则集引入另一个规则集中（ctrl c +ctrl v）  混合的定义在less规则有明确的指定，使用 . 的形式来定义</code></pre></li><li><p>普通混合（编译到原生css中）</p></li><li><p>不带输出的混合（加双括号）</p></li><li><p>带参数的混合</p></li><li><p>带默认值的混合</p></li><li><p><strong>匹配模式</strong></p></li><li><p>arguments</p></li><li><p>计算</p><p>​    加减乘除  计算的一方带单位就可以</p></li><li><p>继承</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【转载】Bootstrap-30分钟就能上手的Bootstrap教程【史上最全】</title>
      <link href="/2022/01/27/bootstrap%E5%85%A5%E9%97%A8/"/>
      <url>/2022/01/27/bootstrap%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h2><ol><li>概念： 一个前端开发的框架，Bootstrap，来自 Twitter，是目前很受欢迎的前端框架。Bootstrap 是基于 HTML、CSS、JavaScript 的，它简洁灵活，使得 Web 开发更加快捷。<ul><li>框架:一个半成品软件，开发人员可以在框架基础上，在进行开发，简化编码。</li><li>好处：<ol><li>定义了很多的css样式和js插件。我们开发人员直接可以使用这些样式和插件得到丰富的页面效果。</li><li>响应式布局。<ul><li>同一套页面可以兼容不同分辨率的设备。</li></ul></li></ol></li></ul></li></ol><ol start="2"><li>快速入门<ol><li>下载Bootstrap</li><li>在项目中将这三个文件夹复制<br> css<br> fonts<br> js</li><li>创建html页面，引入必要的资源文件(js/jquery-3.2.1.min.js)</li></ol></li></ol><p><strong>模板</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap HelloWorld<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.2.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>你好，世界！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h2><ul><li><p>同一套页面可以兼容不同分辨率的设备。</p></li><li><p>实现：依赖于栅格系统：将一行平均分成12个格子，可以指定元素占几个格子</p></li><li><p>步骤：</p><ol><li>定义容器。相当于之前的table、<ul><li>容器分类：<ol><li>container：两边留白</li><li>container-fluid：每一种设备都是100%宽度</li></ol></li></ul></li><li>定义行。相当于之前的tr   样式：row</li><li>定义元素。指定该元素在不同的设备上，所占的格子数目。样式：col-设备代号-格子数目<ul><li>设备代号：<ol><li>xs：超小屏幕 手机 (&lt;768px)：col-xs-12</li><li>sm：小屏幕 平板 (≥768px)</li><li>md：中等屏幕 桌面显示器 (≥992px)</li><li>lg：大屏幕 大桌面显示器 (≥1200px)</li></ol></li></ul></li></ol><ul><li>注意：<ol><li>一行中如果格子数目超过12，则超出部分自动换行。</li><li>栅格类属性可以向上兼容。栅格类适用于与屏幕宽度大于或等于分界点大小的设备。</li><li>如果真实设备宽度小于了设置栅格类属性的设备代码的最小值，会一个元素沾满一整行。</li></ol></li></ul></li></ul><h2 id="CSS样式和JS插件"><a href="#CSS样式和JS插件" class="headerlink" title="CSS样式和JS插件"></a>CSS样式和JS插件</h2><ol><li>全局CSS样式：<ul><li>按钮：class=”btn btn-default”</li><li>图片：<ul><li> class=”img-responsive”：图片在任意尺寸都占100%</li><li>图片形状  <figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*  &lt;img src=&quot;...&quot; alt=&quot;...&quot; class=&quot;img-rounded&quot;&gt;：方形</span><br><span class="line">*  &lt;img src=&quot;...&quot; alt=&quot;...&quot; class=&quot;img-circle&quot;&gt; ： 圆形</span><br><span class="line">*  &lt;img src=&quot;...&quot; alt=&quot;...&quot; class=&quot;img-thumbnail&quot;&gt; ：相框</span><br></pre></td></tr></table></figure></li></ul></li><li>表格<ul><li>table</li><li>table-bordered</li><li>table-hover</li></ul></li><li>表单<ul><li>给表单项添加：class=”form-control” </li></ul></li></ul></li><li>组件：<ul><li>导航条</li><li>分页条</li></ul></li><li>插件：<ul><li>轮播图</li></ul></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>轮播图案例<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.2.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;carousel-example-generic&quot;</span> <span class="attr">class</span>=<span class="string">&quot;carousel slide&quot;</span> <span class="attr">data-ride</span>=<span class="string">&quot;carousel&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Indicators --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;carousel-indicators&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Wrapper for slides --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-inner&quot;</span> <span class="attr">role</span>=<span class="string">&quot;listbox&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item active&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/banner_1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/banner_2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/banner_3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- Controls --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;left carousel-control&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;prev&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-left&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Previous<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;right carousel-control&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;next&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-right&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Next<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="响应式旅游网页案例"><a href="#响应式旅游网页案例" class="headerlink" title="响应式旅游网页案例"></a>响应式旅游网页案例</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;zh-CN&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;X-UA-Compatible&quot;</span> <span class="attr">content</span>=<span class="string">&quot;IE=edge&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Bootstrap HelloWorld<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Bootstrap --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​</span><br><span class="line">    <span class="comment">&lt;!-- jQuery (Bootstrap 的所有 JavaScript 插件都依赖 jQuery，所以必须放在前边) --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/jquery-3.2.1.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 加载 Bootstrap 的所有 JavaScript 插件。你也可以根据需要只加载单个插件。 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.paddtop</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding-top</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.search-btn</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ffc900</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">90px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>:<span class="number">#ffc900</span> ;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">        <span class="selector-class">.search-input</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">float</span>: left;</span></span><br><span class="line"><span class="css">            <span class="attribute">border</span>:<span class="number">2px</span> solid <span class="number">#ffc900</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">35px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding-left</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">margin-top</span>: <span class="number">15px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.jx</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">border-bottom</span>: <span class="number">2px</span> solid <span class="number">#ffc900</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">padding</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">        <span class="selector-class">.company</span>&#123;</span></span><br><span class="line"><span class="css">            <span class="attribute">height</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">background-color</span>: <span class="number">#ffc900</span>;</span></span><br><span class="line"><span class="css">            <span class="attribute">text-align</span>: center;</span></span><br><span class="line"><span class="css">            <span class="attribute">line-height</span>:<span class="number">40px</span> ;</span></span><br><span class="line"><span class="css">            <span class="attribute">font-size</span>: <span class="number">8px</span>;</span></span><br><span class="line"><span class="css">        &#125;</span></span><br><span class="line"><span class="css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">&lt;!-- 1.页眉部分--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">header</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/top_banner.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-responsive&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row paddtop&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-3&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/logo.jpg&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-responsive&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-5&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;search-input&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入线路名称&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;search-btn&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>搜索<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/hotel_tel.png&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-responsive&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="comment">&lt;!--导航栏--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">&quot;navbar navbar-default&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">                   <span class="comment">&lt;!-- Brand and toggle get grouped for better mobile display --&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;navbar-header&quot;</span>&gt;</span></span><br><span class="line">                       <span class="comment">&lt;!-- 定义汉堡按钮 --&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;navbar-toggle collapsed&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;collapse&quot;</span> <span class="attr">data-target</span>=<span class="string">&quot;#bs-example-navbar-collapse-1&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;false&quot;</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Toggle navigation<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;icon-bar&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;navbar-brand&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                   <span class="comment">&lt;!-- Collect the nav links, forms, and other content for toggling --&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;collapse navbar-collapse&quot;</span> <span class="attr">id</span>=<span class="string">&quot;bs-example-navbar-collapse-1&quot;</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;nav navbar-nav&quot;</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>(current)<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span>&gt;</span>Link<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                       <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.navbar-collapse --&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!-- /.container-fluid --&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="comment">&lt;!--轮播图--&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;carousel-example-generic&quot;</span> <span class="attr">class</span>=<span class="string">&quot;carousel slide&quot;</span> <span class="attr">data-ride</span>=<span class="string">&quot;carousel&quot;</span>&gt;</span></span><br><span class="line">               <span class="comment">&lt;!-- Indicators --&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">ol</span> <span class="attr">class</span>=<span class="string">&quot;carousel-indicators&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;0&quot;</span> <span class="attr">class</span>=<span class="string">&quot;active&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">li</span> <span class="attr">data-target</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">data-slide-to</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">               <span class="comment">&lt;!-- Wrapper for slides --&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;carousel-inner&quot;</span> <span class="attr">role</span>=<span class="string">&quot;listbox&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item active&quot;</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/banner_1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/banner_2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;item&quot;</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/banner_3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;...&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">               <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">               <span class="comment">&lt;!-- Controls --&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;left carousel-control&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;prev&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-left&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Previous<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;right carousel-control&quot;</span> <span class="attr">href</span>=<span class="string">&quot;#carousel-example-generic&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span> <span class="attr">data-slide</span>=<span class="string">&quot;next&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;glyphicon glyphicon-chevron-right&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;sr-only&quot;</span>&gt;</span>Next<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​</span><br><span class="line">​</span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 2.主体部分--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row jx&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/icon_5.jpg&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span>黑马精选<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row paddtop&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-3&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/jiangxuan_3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="symbol">&amp;yen;</span> 699<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-3&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/jiangxuan_3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">p</span>&gt;</span>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="symbol">&amp;yen;</span> 699<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-3&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/jiangxuan_3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">p</span>&gt;</span>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="symbol">&amp;yen;</span> 699<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-3&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/jiangxuan_3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">p</span>&gt;</span>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="symbol">&amp;yen;</span> 699<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​</span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row jx&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/icon_6.jpg&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">span</span>&gt;</span>国内游<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row paddtop&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/guonei_1.jpg&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-8&quot;</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/jiangxuan_3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">p</span>&gt;</span>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="symbol">&amp;yen;</span> 699<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/jiangxuan_3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">p</span>&gt;</span>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="symbol">&amp;yen;</span> 699<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/jiangxuan_3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">p</span>&gt;</span>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="symbol">&amp;yen;</span> 699<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">               <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/jiangxuan_3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">p</span>&gt;</span>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="symbol">&amp;yen;</span> 699<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/jiangxuan_3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">p</span>&gt;</span>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="symbol">&amp;yen;</span> 699<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-4&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;thumbnail&quot;</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/jiangxuan_3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">p</span>&gt;</span>上海直飞三亚5天4晚自由行(春节预售+亲子/蜜月/休闲游首选+豪华酒店任选+接送机)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                           <span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span><span class="symbol">&amp;yen;</span> 699<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line">                       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​</span><br><span class="line">               <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">           <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">   <span class="comment">&lt;!-- 3.页脚部分--&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">footer</span> <span class="attr">class</span>=<span class="string">&quot;container-fluid&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;img/footer_service.png&quot;</span> <span class="attr">class</span>=<span class="string">&quot;img-responsive&quot;</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row company&quot;</span>&gt;</span></span><br><span class="line">           江苏传智播客教育科技股份有限公司 版权所有Copyright 2006-2018, All Rights Reserved 苏ICP备16007882</span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">   <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>PC端效果图</strong><br><img src="https://img-blog.csdnimg.cn/202008062028599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNTMxOTE5,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><strong>手机端效果</strong><br><img src="https://img-blog.csdnimg.cn/20200806203024398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQzNTMxOTE5,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p><p>版权声明：本文为博主原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接和本声明。<br>本文链接：<a href="https://blog.csdn.net/qq_43531919/article/details/107848940">https://blog.csdn.net/qq_43531919/article/details/107848940</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>【转载】几大主流前端框架</title>
      <link href="/2022/01/27/%E5%87%A0%E5%A4%A7%E4%B8%BB%E6%B5%81%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
      <url>/2022/01/27/%E5%87%A0%E5%A4%A7%E4%B8%BB%E6%B5%81%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6/</url>
      
        <content type="html"><![CDATA[<p>如今的前端已经不再像以前一样就是简单的写写页面和调调样式而已，现在的前端越来越复杂，知识点越来越丰富。</p><p>要做WEB前端，就需要知道前端到底是什么，需要学习那些知识；前端至少要懂的三个部分：HTML，CSS，JavaScript（简称JS），那首先先明确这三个概念：</p><p>HTML负责结构，网页想要表达的内容由html书写。</p><p>CSS负责样式，网页的美与丑由它来控制</p><p>JS负责交互，用户和网页产生的互动由它来控制。</p><p>web前端发展至今，演变出了无数的库和框架；说到库第一时间想到的是不是<a href="https://so.csdn.net/so/search?q=jquery&spm=1001.2101.3001.7020">jquery</a>？在小编刚接触库的时候也是从jQuery开始的；今天我们就来说说前端发展到现在都有哪些好用的库框架。</p><p>2016年开始应该是互联网飞速发展的几年，同时也是Web前端开发非常火爆的一年，Web 前端技术发展速度让人感觉几乎不是继承式的迭代，而是一次次的变革和创造。这一年中有很多热门的前端开发框架，下面源码时代web小编为大家总结2016年至今最受欢迎的几款前端框架。</p><p>在这互联网飞速发展的信息时代，技术的更新迭代也在加快。目前看来，火了十几年的Java技术现在仍然是棵常青树。回想两年前初来咋到，也是想好好当一名java程序员，五年计划都行想好了，最后还是阴差阳错搞了前端。前端目前来看还是非常火的，随着IT技术的百花齐放，新的前端框架不断推出，但大多都还在狂吼的阶段。其实一直以来对技术的理解是技术服务于业务和产品，产品又在不同程度的推进着技术的演进。Web、无线、物联网、VR、PC从不同方向推进着技术的融合与微创新。程序员在不同业务场景下的角色互换。而随着Node.js的出现语言的角色也在发生着转变，js扮演了越来越重要的角色。也就有了茶余饭后也把了解到的知识整理一下。</p><h2 id="一、前端UI框架组件库："><a href="#一、前端UI框架组件库：" class="headerlink" title="一、前端UI框架组件库："></a>一、前端UI框架组件库：</h2><p>说到前端框架我第一印象中想起React、Vue和Angular，不知道你是否与我一样想到这些，现在常用的有：Bootstrap、jQuery UI、BootMetro、AUI常用的还有很多、就不一一跟大家举例出来了，因为很多朋友认为在不同项目开发中用到的前端框架不一样，其实也有一款可以适用于多种项目开发的前端框架，只是没发现。</p><p><strong>用前端框架开发项目的原因？</strong></p><p>这个应该是最好解决的问题，首先就是减少造轮子的想法，能够快速的开发一款web应用对于公司来说都是非常愿意开到的，在时间和成本之间就能够节约很多的时间，这是其中一点，另外一点就是使用前端框架的组件功能，只要组件功能强大，什么样的项目都能够开发（前提是：要熟悉前端框架的功能！），时间成本问题就能够轻松解决。</p><p><strong>没有设计师也能做出精美页面效果的前端框架</strong></p><p>虽然市场中有很多的前端框架，但部分UI框架是属于组件库，然而QUICK UI跟当下流行的三大底层框架React、Vue和Angular不同，QUICK UI提供了一整套前端解决方案，包括前后端分离的开发框架、100多种功能强大的UI控件、几十套精美的皮肤模板和近16万字的开发文档，满足你所以开发项目都不是问题。</p><h2 id="二、前端框架库："><a href="#二、前端框架库：" class="headerlink" title="二、前端框架库："></a>二、前端框架库：</h2><h3 id="1-Node-Js"><a href="#1-Node-Js" class="headerlink" title="1.Node.Js"></a>1.Node.Js</h3><p>地址：<a href="http://www.runoob.com/nodejs/nodejs-tutorial.html">http://www.runoob.com/nodejs/nodejs-tutorial.html</a> (中文网)<br>描述：Node.js是一个Javascript运行环境(runtime)。实际上它是对Google V8引擎进行了封装。V8引 擎执行Javascript的速度非常快，性能非常好。Node.js对一些特殊用例进行了优化，提供了替代的API，使得V8在非浏览器环境下运行得更好。<br>　　Node.js是一个基于Chrome JavaScript运行时建立的平台， 用于方便地搭建响应速度快、易于扩展的网络应用。Node.js 使用事件驱动， 非阻塞I/O 模型而得以轻量和高效，非常适合在分布式设备上运行数据密集型的实时应用。</p><p>简单的说 node.js 就是运行在服务端的 JavaScript。</p><p>Node.js 是一个基于Chrome javascript 运行时建立的一个平台。</p><p>Node.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。</p><p>用途：<br>　　<strong>1. RESTful API（目前比较流行的接口开发风格）</strong></p><p>这是NodeJS最理想的应用场景，可以处理数万条连接，本身没有太多的逻辑，只需要请求API，组织数据进行返回即可。它本质上只是从某个数据库中查找一些值并将它们组成一个响应。由于响应是少量文本，入站请求也是少量的文本，因此流量不高，一台机器甚至也可以处理最繁忙的公司的API需求。</p><p><strong>2. 统一Web应用的UI层</strong></p><p>目前MVC的架构，在某种意义上来说，Web开发有两个UI层，一个是在浏览器里面我们最终看到的，另一个在server端，负责生成和拼接页面。</p><p>不讨论这种架构是好是坏，但是有另外一种实践，面向服务的架构，更好的做前后端的依赖分离。如果所有的关键业务逻辑都封装成REST调用，就意味着在上层只需要考虑如何用这些REST接口构建具体的应用。那些后端程序员们根本不操心具体数据是如何从一个页面传递到另一个页面的，他们也不用管用户数据更新是通过Ajax异步获取的还是通过刷新页面。</p><p><strong>3. 大量Ajax请求的应用</strong></p><p>例如个性化应用，每个用户看到的页面都不一样，缓存失效，需要在页面加载的时候发起Ajax请求，NodeJS能响应大量的并发请求。　　总而言之，NodeJS适合运用在高并发、I/O密集、少量业务逻辑的场景。</p><h3 id="2-angular-Js（比较厉害，github排名也比较高）"><a href="#2-angular-Js（比较厉害，github排名也比较高）" class="headerlink" title="2.angular.Js（比较厉害，github排名也比较高）"></a>2.angular.Js（比较厉害，github排名也比较高）</h3><p>地址：<a href="http://www.runoob.com/angularjs/angularjs-tutorial.html">http://www.runoob.com/angularjs/angularjs-tutorial.html</a> (中文网)<br>描述：AngularJS[1] 诞生于2009年，由Misko Hevery 等人创建，后为Google所收购。是一款优秀的前端JS框架，已经被用于Google的多款产品当中。AngularJS有着诸多特性，最为核心的是：MVVM、模块化、自动化双向数据绑定、语义化标签、依赖注入等等。<br>用途：通过描述我们应该就能很好的明白AngularJS的真实用途了，MVVM，模块化，自动化双向数据绑定等等。除了简单的dom操作外，更能体现Js编程的强大。当然应用应该视场合而定。<br>它的出现比较早，也是曾经比较流行的前端js框架，但是今年来随着reactJS与VueJS的出现，它的热度在慢慢降低。</p><h3 id="3-JQuery-Mobile"><a href="#3-JQuery-Mobile" class="headerlink" title="3.JQuery Mobile"></a>3.JQuery Mobile</h3><p>地址：<a href="http://www.w3school.com.cn/jquerymobile/">http://www.w3school.com.cn/jquerymobile/</a> (中文网)<br>描述：Query Mobile是jQuery 在手机上和平板设备上的版本。jQuery Mobile 不仅会给主流移动平台带来jQuery核心库，而且会发布一个完整统一的jQuery移动UI框架。支持全球主流的移动平台。jQuery Mobile开发团队说：能开发这个项目，我们非常兴奋。移动Web太需要一个跨浏览器的框架，让开发人员开发出真正的移动Web网站。<br>用途：jQuery Mobile 是创建移动 web 应用程序的框架。<br>　　　　　　jQuery Mobile 适用于所有流行的智能手机和平板电脑。</p><p>jquery Mobile 使用 HTML5 和 CSS3 通过尽可能少的脚本对页面进行布局。</p><h3 id="4-requirejs"><a href="#4-requirejs" class="headerlink" title="4.requirejs"></a>4.requirejs</h3><p>地址：<a href="http://www.requirejs.cn/">http://www.requirejs.cn/</a><br>描述：RequireJS的目标是鼓励代码的模块化，它使用了不同于传统</p><p>用途：模块化动态加载。</p><h3 id="5-Vue-js-目前市场上的主流"><a href="#5-Vue-js-目前市场上的主流" class="headerlink" title="5.Vue.js(目前市场上的主流)"></a>5.Vue.js(目前市场上的主流)</h3><p>地址：<a href="http://cn.vuejs.org/">http://cn.vuejs.org/</a><br>描述：Vue.js 是用于构建交互式的 Web 界面的库。它提供了 MVVM 数据绑定和一个可组合的组件系统，具有简单、灵活的 API。从技术上讲， Vue.js 集中在 MVVM 模式上的视图模型层，并通过双向数据绑定连接视图和模型。实际的 DOM 操作和输出格式被抽象出来成指令和过滤器。相比其它的 MVVM 框架，Vue.js 更容易上手。<br>目前市场上比较流行的前后端分离的开发模式，大多前端都是vueJS做的，具体的优点请大家看官方文档。</p><h3 id="6-backbone-js"><a href="#6-backbone-js" class="headerlink" title="6.backbone.js"></a>6.backbone.js</h3><p>地址：<a href="http://www.css88.com/doc/backbone/">http://www.css88.com/doc/backbone/</a><br>描述：Backbone 为复杂Javascript应用程序提供模型(models)、集合(collections)、视图(views)的结构。其中模型用于绑定键值数据和自定义事件；集合附有可枚举函数的丰富API； 视图可以声明事件处理函数，并通过RESTful JSON接口连接到应用程序。</p><h3 id="7-React-js（gihub排名仅次于vue-js）"><a href="#7-React-js（gihub排名仅次于vue-js）" class="headerlink" title="7.React.js（gihub排名仅次于vue.js）"></a>7.React.js（gihub排名仅次于vue.js）</h3><p>地址：<a href="http://reactjs.cn/react/docs/why-react.html">http://reactjs.cn/react/docs/why-react.html</a><br>描述：React 是一个 Facebook 和 Instagram 用来创建用户界面的 JavaScript 库。很多人认为 React 是 MVC 中的 V（视图）。我们创造 React 是为了解决一个问题：构建随着时间数据不断变化的大规模应用程序。为了达到这个目标，React 采用下面两个主要的思想。</p><h3 id="8-Amaze-UI"><a href="#8-Amaze-UI" class="headerlink" title="8.Amaze UI"></a>8.Amaze UI</h3><p>Amaze UI是轻量级的前端应用框架，是国内比较流行的框架，比较适用于移动端响应式开发框架，可以按照项目要求生成专属的UI框架库进行使用，组件非常丰富，可以构建出漂亮的web页面。</p><p>官网地址：<a href="http://amazeui.org/">http://amazeui.org/</a></p><h2 id="三、可视化组件"><a href="#三、可视化组件" class="headerlink" title="三、可视化组件"></a>三、可视化组件</h2><h3 id="1-Echarts"><a href="#1-Echarts" class="headerlink" title="1.Echarts"></a>1.Echarts</h3><p>地址：<a href="http://echarts.baidu.com/">http://echarts.baidu.com/</a><br>描述：ECharts，一个纯 Javascript 的图表库，可以流畅的运行在 PC 和移动设备上，兼容当前绝大部分浏览器（IE8/9/10/11，Chrome，Firefox，Safari等），底层依赖轻量级的 Canvas 类库ZRender，提供直观，生动，可交互，可高度个性化定制的数据可视化图表。</p><h3 id="2-tableau-收费"><a href="#2-tableau-收费" class="headerlink" title="2.tableau(收费)"></a>2.tableau(收费)</h3><p>地址：<a href="http://www.yuandingit.com/special/tableau/index.html">http://www.yuandingit.com/special/tableau/index.html</a><br>描述：Tableau 是桌面系统中最简单的商业智能工具软件，Tableau 没有强迫用户编写自定义代码，新的控制台也可完全自定义配置。在控制台上，不仅能够监测信息，而且还提供完整的分析能力。Tableau控制台灵活，具有高度的动态性。</p><h2 id="四、前端构建工具"><a href="#四、前端构建工具" class="headerlink" title="四、前端构建工具"></a>四、前端构建工具</h2><h3 id="1-gulp"><a href="#1-gulp" class="headerlink" title="1.gulp"></a>1.gulp</h3><p>地址：<a href="http://www.gulpjs.com.cn/"></a><br>描述：易于使用<br>　　　　　　通过代码优于配置的策略，Gulp 让简单的任务简单，复杂的任务可管理。<br>　　　　　　构建快速<br>　　　　　　利用 Node.js 流的威力，你可以快速构建项目并减少频繁的 IO 操作。</p><p>插件高质<br>　　　　　　Gulp 严格的插件指南确保插件如你期望的那样简洁高质得工作。</p><p>易于学习<br>　　　　　　通过最少的 API，掌握 Gulp 毫不费力，构建工作尽在掌握：如同一系列流管道。</p><h3 id="2、ES-or-webPackage"><a href="#2、ES-or-webPackage" class="headerlink" title="2、ES or webPackage"></a>2、ES or webPackage</h3><h4 id="1-Bootstrap中文网"><a href="#1-Bootstrap中文网" class="headerlink" title="1.Bootstrap中文网"></a>1.Bootstrap中文网</h4><p>先分享下，如果有想一起学习web前端，HTML5及JavaScript的可以来一下我的前端群733581373，好友都会在里面交流，分享一些学习的方法和需要注意的小细节，每天也会准时的讲一些前端的炫酷特效，及前端直播课程学习<br>Bootstrap，让你的页面更简洁、直观、强悍、移动设备优先的前端开发框架,让web开发更迅速、更简单。它还提供了更优雅的HTML和CSS规范，它即是由动态CSS语言Less写成。有着丰富的网格布局系统以及丰富的可重用组件，还有强大的支持十几的JavaScript、jQuery插件以及组件定制等。<br>Bootstrap中文网地址：<a href="http://www.bootcss.com/">http://www.bootcss.com/</a></p><h4 id="2-Layui"><a href="#2-Layui" class="headerlink" title="2. Layui"></a>2. Layui</h4><p>layer是一款口碑极佳的web弹层组件，是一款采用自身模块规范编写的前端 UI 框架，遵循原生 HTML/CSS/JS 的书写与组织形式，门槛极低，拿来即用。layui 首个版本发布于2016年秋，她区别于那些基于 MVVM 底层的 UI 框架，从核心代码到 API 的每一处细节都经过精心雕琢，非常适合界面的快速开发。</p><p>Layui官网地址：<a href="https://www.layui.com/">https://www.layui.com/</a></p><h4 id="3-ElementUI"><a href="#3-ElementUI" class="headerlink" title="3.ElementUI"></a>3.ElementUI</h4><p>Element-Ul是饿了么前端团队推出的一款基于Vue.js 2.0 的桌面端UI框架，手机端有对应框架是Mint UI 。适合于Vue的UI框架；<br>官网地址：<a href="http://element-cn.eleme.io/#/zh-CN">http://element-cn.eleme.io/#/zh-CN</a></p><h4 id="4-Mint-UI"><a href="#4-Mint-UI" class="headerlink" title="4.Mint UI"></a>4.Mint UI</h4><p>Mint UI 是 由饿了么前端团队推出的 一个基于 Vue.js 的移动端组件库，Mint UI 包含丰富的 CSS 和 JS 组件，能够满足日常的移动端开发需要。通过它，可以快速构建出风格统一的页面，提升开发效率。<br>官网地址：<a href="http://mint-ui.github.io/">http://mint-ui.github.io/</a></p><h4 id="5-angular"><a href="#5-angular" class="headerlink" title="5.angular"></a>5.angular</h4><p>AngularJS诞生于2009年,由Misko Hevery 等人创建,后为Google所收购。是一款优秀的前端JS框架,已经被用于Google的多款产品当中。AngularJS有着诸多特性，最为核心的是MVW（Model-View-Whatever）、模块化、自动化双向数据绑定、语义化标签、依赖注入等等。<br>官网地址：<a href="http://www.angularjs.net.cn/">http://www.angularjs.net.cn/</a></p><h4 id="6-React"><a href="#6-React" class="headerlink" title="6.React"></a>6.React</h4><p>React 可以非常轻松地创建用户交互界面。为你应用的每一个状态设计简洁的视图,在数据改变时 React 也可以高效地更新渲染界面。React 起源于 Facebook 的内部项目，因为该公司对市场上所有 JavaScript MVC 框架，都不满意，就决定自己写一套，用来架设Instagram 的网站。做出来以后，发现这套东西很好用，就在2013年5月开源了。<br>官网地址：<a href="http://react-china.org/">http://react-china.org/</a></p><h4 id="7-vue-js"><a href="#7-vue-js" class="headerlink" title="7.vue.js"></a>7.vue.js</h4><p>近几年最火的前端框架当属Vue.js了，Vue.js是一个构建数据驱动的 web 界面的渐进式框架。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。很多使用过vue的程序员这样评价它，“vue.js兼具angular.js和react.js的优点，并剔除了它们的缺点”。授予了这么高的评价的vue.js，也是开源世界华人的骄傲，因为它的作者是位中国人–尤雨溪<br>几款常用的高质量web前端框架<br>Web前端框架就是为了节约开发成本和时间，一般开发一个项目都会用到前端框架（除非自己有前端开发团队），根据我经验找的几款web前端框架做出了分析。都是个人意见，仁者见仁智者见智。</p><p><strong>QUICK UI</strong><br>QUICK UI是一套完整的企业级web前端开发解决方案，由基础框架、UI组件库、皮肤包、示例工程和文档等组成。使用QUICKUI开发者可以极大地减少工作量，提高开发效率，快速构建功能强大、美观、兼容的web应用系统。<br>QUICK UI优势：<br><em>①功能最为强大</em><br>QUICKUI经历了7年的迭代更新，不断从客户的各种业务中对组件的需求进行归纳和抽离，从而打造新的组件和功能。现在最新的4.0版本框架包含了一百多种组件，一千多个应用场景示例。可以说在前端框架领域中，QUICKUI拥有功能最强大组件库。</p><p><em>②运行最为稳定</em><br>　　很多其他的第三方UI控件在简单场合使用OK，到了复杂的场景中就会出现很多问题，这种现象很常见，因为在组件设计时无法预料到所有的应用场合。而QUICKUI在7年间经历了数千个项目实际检验，在各种复杂场景都应用过，并根据客户的反馈不断完善和调整。目前的第四代可以说是最稳定、最完美的版本。</p><p><em>③丰富精美的界面皮肤</em><br>　　跟其他web前端框架仅仅是一套组件库不同，QUICKUI是一整套前端解决方案，拥有丰富的外观界面解决方案。采用现今流行的扁平化设计理念，推出了包括登录、响应式web、工作桌面、地图类、门户风格、大屏展示风格等等几百套制作精美、用户体验优秀的界面。这些界面是以QUICKUI皮肤包的形式发布，使用和更换都非常方便。</p><p><em>④事无巨细的开发文档</em><br>QUICKUI拥有16万字+的开发文档，框架和组件的每一个功能点都有详细的讲解和代码示例，用于开发过程中随时查阅。除了框架机制讲解和组件使用教程，文档还涉及web前端开发的很多知识。仔细阅读并结合框架使用的话，你很快就能成为web开发的高手。</p><p><em>⑤上手开发非常容易</em><br>QUICKUI采用组件化思想来构建组件，一个组件就是一两句html的标签，使用起来非常简单。将开发人员从繁琐的JS编码中解脱出来，很大程度减少前台编码的出错率；保留了HTML的布局方式，从而快速进行页面布局。对开发者前台技术要求也非常低，只需要了解html语法和一些简单的JS即可，从而把更多精力放在业务功能的实现上，极大地提高开发效率。</p><p><em>⑥浏览器兼容性非常好</em><br>QUICKUI4.0使用了很多HTML5，CSS3技术用于提高表现力和用户体验，这些新的特性在现代浏览器中会有很好的效果。但是，国内依然有大量的用户在使用IE7、IE8等旧时代的浏览器，为照顾这部分用户，框架采用了渐进式思想，确保低版本浏览器也能正常使用。所以，QUICKUI兼容IE7以上所有主流浏览器。</p><p><strong>flex</strong><br>Apache基金会今天发布了Flex4.8版本，这是Adobe将Flex捐献给Apache基金会后发布的第一个版本。<br>　　需要注意的是，Flex目前还在孵化阶段，还不是Apache的正式项目，Flex4.8也不是一个正式的Apache版本。<br>Apache称，该版本标志着Flex新时代的开始，Flex的未来将由社区来驱动，而不是由一个公司驱动。开发者可以通过贡献代码，来帮助改进Flex，如修复bug、增加功能等。<br>　　从Macromedia卖给Adobe，然后又捐给apache，不知道搞什么名堂。不过还好没有经过大幅重构，否则就真的是悲哀了！</p><p><strong>extjs</strong><br>ExtJS是一种主要用于创建前端用户界面，是一个基本与后台技术无关的前端ajax框架。<br>　　功能丰富，无人能出其右。<br>　　无论是界面之美，还是功能之强，ext的表格控件都高居榜首。<br>　　华丽的界面，灵活的功能，还有开发工具都是配套的，但有个最大的问题，用就得花钱！</p><p><strong>easyui</strong><br>easyui帮助你构建你的web应用更加容易。<br>　　它是一个基于jquery的插件，开发出来的一套轻量级的ui框架，非常小巧而且功能丰富。<br>　　但是她有一个最大的问题就是代码只能找到以前的开源的版本，到了1.2以后的版本源代码都是经过混淆的，如果遇到问题修改起来会非常麻烦！不过一个比较大的优势是开源免费，并且界面做的还说的过去！</p><p><strong>jQueryUI</strong><br>jQueryUI是一套jQuery的页面UI插件，包含很多种常用的页面空间，例如Tabs（如本站首页右上角部分）、拉帘效果（本站首页左上角）、对话框、拖放效果、日期选择、颜色选择、数据排序、窗体大小调整等等非常多的内容。　　功能非常全面，界面也挺漂亮的，可以整体使用，也可以分开使用其中的几个模块，免费开源！</p><p><strong>MiniUI</strong><br>　　又一个基于jquery的框架，开发的界面功能都很丰富。<br>jQueryMiniUI–快速开发WebUI。<br>　　它能缩短开发时间，减少代码量，使开发者更专注于业务和服务端，轻松实现界面开发，带来绝佳的用户体验。<br>　　使用MiniUI，开发者可以快速创建Ajax无刷新、B/S快速录入数据、CRUD、Master-Detail、菜单工具栏、弹出面板、布局导航、数据验证、分页表格、树、树形表格等典型WEB应用系统界面。<br>　　界面做的挺不错，功能也挺丰富，但是有两个比较大的问题，一个是收费，一个是没有源码，说白了，不开源！基于这个开发如果想对功能做扩展就需要找他们的团队进行升级！</p><p><strong>DWZ</strong><br>DWZ富客户端框架(jQueryRIAframework),是中国人自己开发的基于jQuery实现的AjaxRIA开源框架.<br>　　设计目标是简单实用,快速开发,降低ajax开发成本。<br>　　欢迎大家提出建议，我们将在下一版本中进一步调整和完善功能．共同推进国内整体ajax开发水平。<br>　　毕竟是国产的，支持一下，而且源码完全公开，可以选择一下！不过性能怎么样不敢确定！</p><p><strong>YUI</strong><br>Yahoo!UILibrary (YUI)是一个开放源代码的JavaScript函数库，为了能建立一个高互动的网页，它采用了AJAX,DHTML和DOM等程式码技术。它也包含了许多CSS资源。使用授权为 BSD许可证，基本上没怎么研究过！YUICompressor倒是挺出名的，这套UI库不知道应用的情况怎么样！</p><p><strong>Sencha</strong><br>Sencha是由ExtJS、jQTouch以及Raphael三个项目合并而成的一个新项目。<br>　　大公司的框架，并且是几样库的强强联合，值得推荐！</p><p><strong>OperaMasks-UI</strong><br>OperaMasks-UI是OperaMasks团队2011下半年打造的一款轻量级前端JS组件库，旨在提供一款学习曲线低、定制性灵活、样式统一，且多浏览器支持、覆盖企业业务场景的前端JavaScriptUI组件库。目前，该团队已将这一产品以LGPL开源协议开放给社区。</p><p>转载：<a href="https://blog.csdn.net/enweitech/article/details/89316979?ops_request_misc=%7B%22request_id%22:%22160791478419195283045635%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=160791478419195283045635&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_click~default-1-89316979.nonecase&utm_term=%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6&spm=1018.2118.3001.4449">https://blog.csdn.net/enweitech/article/details/89316979?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160791478419195283045635%2522%252C%2522scm%2522%253A%252220140713.130102334…%2522%257D&amp;request_id=160791478419195283045635&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2alltop_click~default-1-89316979.nonecase&amp;utm_term=%E5%89%8D%E7%AB%AF%E6%A1%86%E6%9E%B6&amp;spm=1018.2118.3001.4449</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>快速上手Spring</title>
      <link href="/2022/01/26/3.%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8BSpring/"/>
      <url>/2022/01/26/3.%E5%BF%AB%E9%80%9F%E4%B8%8A%E6%89%8BSpring/</url>
      
        <content type="html"><![CDATA[<h2 id="Hi-Spring"><a href="#Hi-Spring" class="headerlink" title="Hi Spring"></a>Hi Spring</h2><h3 id="记得导入jar包（如果在父项目里导入了可以忽略）"><a href="#记得导入jar包（如果在父项目里导入了可以忽略）" class="headerlink" title="记得导入jar包（如果在父项目里导入了可以忽略）"></a>记得导入jar包（如果在父项目里导入了可以忽略）</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="编写代码"><a href="#编写代码" class="headerlink" title="编写代码"></a>编写代码</h3><ol><li><p>创建hi实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">hi</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello,&quot;</span>+name);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写spring文件，在resources里创建beans.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.springframework.org/schema/beans&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="string"><span class="tag">       http://www.springframework.org/schema/beans/spring-beans.xsd&quot;</span>&gt;</span></span><br><span class="line">//可以创建很多个bean对象</span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;hi&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.kuang.dao.hi&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Spring&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在beans.xml里创建hi的bean对象</p></li><li><p>进行测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationContext;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.ClassPathXmlApplicationContext;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//固定用法，写死了的。解析beans.xml，生成管理相应的Bean对象。要用ClassPathXmlApplicationContext</span></span><br><span class="line">        ApplicationContext context = <span class="keyword">new</span> ClassPathXmlApplicationContext(<span class="string">&quot;beans.xml&quot;</span>);</span><br><span class="line"><span class="comment">//创建hi这个对象来用，用getBean这个方法</span></span><br><span class="line">       <span class="comment">//参数即为spring配置文件中bean的id</span></span><br><span class="line">        hi hi = (hi) context.getBean(<span class="string">&quot;hi&quot;</span>);</span><br><span class="line">        hi.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><ul><li><p>hi对象是由谁创建的？    （由spring创建）</p></li><li><p>hi对象的属性如何设置？     （hi对象的属性由Spring容器设置，就是上面那个<property>，这个过程就是<strong>控制反转</strong>）</p></li><li><p>控制：谁来控制对象的创建？</p><p>​    传统程序的对象是由程序本身来控制创建的，现在使用spring后，对象都是由spring来创建</p></li><li><p>反转：程序本身是不创建对象的，变成被动接收对象</p></li></ul><p> <strong>依赖注入：就是利用set方法进行注入</strong></p><p> <strong>IoC是一种<em>编程思想</em>，由主动编程变成被动接收</strong></p><p>  可以通过new ClassPathXmlApplicationContext来浏览底层源码</p><p>  ​        </p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>IoC推导理论</title>
      <link href="/2022/01/25/2.IOC%E7%90%86%E8%AE%BA%E6%8E%A8%E5%AF%BC/"/>
      <url>/2022/01/25/2.IOC%E7%90%86%E8%AE%BA%E6%8E%A8%E5%AF%BC/</url>
      
        <content type="html"><![CDATA[<h2 id="IoC基础"><a href="#IoC基础" class="headerlink" title="IoC基础"></a>IoC基础</h2><p>新建空白maven项目</p><p>原本的写法：</p><ol><li><p>先写UserDao接口 UserDao.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>再写Dao的实现类 UserDaoImpl.class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDaoImpl</span> <span class="keyword">implements</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       System.out.println(<span class="string">&quot;获取用户数据&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>然后写UserService接口 UserService.class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>最后写Service的实现类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> UserDao userDao = <span class="keyword">new</span> UserDaoImpl();</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       userDao.getUser();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">   UserService service = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">   service.getUser();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>  如何按照这种方式来编写，万一增加一个UserDaoMysqlImpl实现类，那么Service实现类里就必须修改</p><pre><code> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> UserDao userDao = <span class="keyword">new</span> UserDaoImpl();</span><br></pre></td></tr></table></figure></code></pre><p>   为</p><pre><code>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> UserDao userDao = <span class="keyword">new</span> UserDaoMysqlImpl();</span><br></pre></td></tr></table></figure></code></pre><p>   这就非常麻烦。如果有很多实现类，难道程序员要一个一个手动修改？不可能！</p><p>   每次改动都需要修改大量代码，这种设计耦合性太高了，牵一发而动全身</p><h3 id="如何解决？"><a href="#如何解决？" class="headerlink" title="如何解决？"></a><strong>如何解决？</strong></h3><p>   可以在Service里不去实现方法，而是预留一个接口，利用set方法</p>   <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> UserDao userDao;</span><br><span class="line"><span class="comment">// 利用set实现</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUserDao</span><span class="params">(UserDao userDao)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">this</span>.userDao = userDao;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getUser</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       userDao.getUser();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>   在测试类里进行测试：</p>   <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">   UserServiceImpl service = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">   service.setUserDao( <span class="keyword">new</span> UserDaoMySqlImpl() );</span><br><span class="line">   service.getUser();</span><br><span class="line">   <span class="comment">//那我们现在又想用Oracle去实现呢</span></span><br><span class="line">   service.setUserDao( <span class="keyword">new</span> UserDaoOracleImpl() );</span><br><span class="line">   service.getUser();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>   这已经发生了<strong>根本性变化</strong>了！！</p><p>   以前的程序都是由程序来进行控制创建，现在变成了由我们自行控制创建对象，把主动权交给调用者，程序不去管对象的创建，只负责提供一个接口</p><p>   这种思想，从本质上解决了问题，程序员不再去管理对象的创建，更多的去关注业务的实现，大大降低耦合性，这就是<strong>IoC原型</strong>。</p><h2 id="IOC本质"><a href="#IOC本质" class="headerlink" title="IOC本质"></a>IOC本质</h2><p><strong>控制反转IoC(Inversion of Control)，是一种设计思想，DI(依赖注入)是实现IoC的一种方法</strong>，也有人认为DI只是IoC的另一种说法。没有IoC的程序中 , 我们使用面向对象编程 , 对象的创建与对象间的依赖关系完全硬编码在程序中，对象的创建由程序自己控制，控制反转后将对象的创建转移给第三方，个人认为所谓控制反转就是：获得依赖对象的方式反转了。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KtDiaOqFy5ourlJ8FTVV2FFuYibmavlBHq9e4cDqiclpYSG8VT4EicVsnqKp65yJKQeNibsVdTiahQibJSg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片"></p><p><strong>IoC是Spring框架的核心内容</strong>，使用多种方式完美的实现了IoC，可以使用XML配置，也可以使用注解，新版本的Spring也可以零配置实现IoC。</p><p>Spring容器在初始化时先读取配置文件，根据配置文件或元数据创建与组织对象存入容器中，程序使用时再从Ioc容器中取出需要的对象。</p><p><img src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KtDiaOqFy5ourlJ8FTVV2FF67dfeA6cRT7EiafNcibWyf57SGpkZ01JnpiaaicNB1ibBjGaicAvayKEWJ0A/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片"></p><p>采用XML方式配置Bean的时候，Bean的定义信息是和实现分离的，而采用注解的方式可以把两者合为一体，Bean的定义信息直接以注解的形式定义在实现类中，从而达到了零配置的目的。</p><p><strong>控制反转是一种通过描述（XML或注解）并通过第三方去生产或获取特定对象的方式。在Spring中实现控制反转的是IoC容器，其实现方法是依赖注入（Dependency Injection,DI）。</strong></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Spring概述</title>
      <link href="/2022/01/25/1.Spring%E6%A6%82%E8%BF%B0/"/>
      <url>/2022/01/25/1.Spring%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Spring概述"><a href="#1-Spring概述" class="headerlink" title="1. Spring概述"></a>1. Spring概述</h1><h2 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h2><p>​    Spring：春天—&gt;软件行业的春天</p><p>​    Spring理念：使现有技术更加实用，本身就是一个大杂烩，整合了现有的框架技术</p><p>​    官网 : <a href="http://spring.io/">http://spring.io/</a></p><p>​    官方下载地址 : <a href="https://repo.spring.io/libs-release-local/org/springframework/spring/">https://repo.spring.io/libs-release-local/org/springframework/spring/</a></p><p>​    GitHub : <a href="https://github.com/spring-projects">https://github.com/spring-projects</a></p><h2 id="1-2-Spring优点"><a href="#1-2-Spring优点" class="headerlink" title="1.2 Spring优点"></a>1.2 Spring优点</h2><ol><li>Spring是一个开源免费的框架，容器.</li><li>Spring是一个轻量级的框架，非入侵式的.</li><li>控制反转IoC，面向切面Aop</li><li>对事物的支持，对框架的支持</li></ol><p>……</p><p>一句话概括：Spring是一个轻量级的控制反转（IoC）和面向切面（AOP）的容器（框架）。</p><h2 id="1-3-Spring组成"><a href="#1-3-Spring组成" class="headerlink" title="1.3 Spring组成"></a>1.3 Spring组成</h2><img src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KtDiaOqFy5ourlJ8FTVV2FF6KnNia5YDhfatibrMvAUAhxgF27g4HdJsBGl6Fae9yQlUQJc9Bf8uftw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片" style="zoom: 67%;" /><p>Spring 框架是一个分层架构，由 7 个定义良好的模块组成。Spring 模块构建在核心容器之上，核心容器定义了创建、配置和管理 bean 的方式 .</p><img src="https://mmbiz.qpic.cn/mmbiz_png/uJDAUKrGC7KtDiaOqFy5ourlJ8FTVV2FFetRkkw19r7H3mHDibgs4RpRNHdG6CcIMdnxRCu2yYXNiano7ESCCMF0A/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1" alt="图片" style="zoom:80%;" /><p>组成 Spring 框架的每个模块（或组件）都可以单独存在，或者与其他一个或多个模块联合实现。每个模块的功能如下：</p><ul><li><strong>核心容器</strong>：核心容器提供 Spring 框架的基本功能。核心容器的主要组件是 BeanFactory，它是工厂模式的实现。BeanFactory 使用<em>控制反转</em>（IOC） 模式将应用程序的配置和依赖性规范与实际的应用程序代码分开。</li><li><strong>Spring 上下文</strong>：Spring 上下文是一个配置文件，向 Spring 框架提供上下文信息。Spring 上下文包括企业服务，例如 JNDI、EJB、电子邮件、国际化、校验和调度功能。</li><li><strong>Spring AOP</strong>：通过配置管理特性，Spring AOP 模块直接将面向切面的编程功能 , 集成到了 Spring 框架中。所以，可以很容易地使 Spring 框架管理任何支持 AOP的对象。Spring AOP 模块为基于 Spring 的应用程序中的对象提供了事务管理服务。通过使用 Spring AOP，不用依赖组件，就可以将声明性事务管理集成到应用程序中。</li><li><strong>Spring DAO</strong>：JDBC DAO 抽象层提供了有意义的异常层次结构，可用该结构来管理异常处理和不同数据库供应商抛出的错误消息。异常层次结构简化了错误处理，并且极大地降低了需要编写的异常代码数量（例如打开和关闭连接）。Spring DAO 的面向 JDBC 的异常遵从通用的 DAO 异常层次结构。</li><li><strong>Spring ORM</strong>：Spring 框架插入了若干个 ORM 框架，从而提供了 ORM 的对象关系工具，其中包括 JDO、Hibernate 和 iBatis SQL Map。所有这些都遵从 Spring 的通用事务和 DAO 异常层次结构。</li><li><strong>Spring Web 模块</strong>：Web 上下文模块建立在应用程序上下文模块之上，为基于 Web 的应用程序提供了上下文。所以，Spring 框架支持与 Jakarta Struts 的集成。Web 模块还简化了处理多部分请求以及将请求参数绑定到域对象的工作。</li><li><strong>Spring MVC 框架</strong>：MVC 框架是一个全功能的构建 Web 应用程序的 MVC 实现。通过策略接口，MVC 框架变成为高度可配置的，MVC 容纳了大量视图技术，其中包括 JSP、Velocity、Tiles、iText 和 POI。</li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/24/hello-world/"/>
      <url>/2022/01/24/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>分类页</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友情链接</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签页</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
